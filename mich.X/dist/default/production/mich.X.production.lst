

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Jun  1 05:29:15 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataBANK0
    41  0059AE                     __pidataBANK0:
    42                           	opt stack 0
    43                           
    44                           ;initializer for SENO_2@F7359
    45  0059AE  0032               	dw	50
    46  0059B0  0043               	dw	67
    47  0059B2  0052               	dw	82
    48  0059B4  005D               	dw	93
    49  0059B6  0063               	dw	99
    50  0059B8  0063               	dw	99
    51  0059BA  005D               	dw	93
    52  0059BC  0052               	dw	82
    53  0059BE  0043               	dw	67
    54  0059C0  0032               	dw	50
    55  0059C2  0021               	dw	33
    56  0059C4  0012               	dw	18
    57  0059C6  0007               	dw	7
    58  0059C8  0001               	dw	1
    59  0059CA  0001               	dw	1
    60  0059CC  0007               	dw	7
    61  0059CE  0012               	dw	18
    62  0059D0  0021               	dw	33
    63                           
    64                           ;initializer for SENO_3@F7364
    65  0059D2  0032               	dw	50
    66  0059D4  0046               	dw	70
    67  0059D6  0057               	dw	87
    68  0059D8  0062               	dw	98
    69  0059DA  0064               	dw	100
    70  0059DC  005D               	dw	93
    71  0059DE  004F               	dw	79
    72  0059E0  003C               	dw	60
    73  0059E2  0028               	dw	40
    74  0059E4  0015               	dw	21
    75  0059E6  0007               	dw	7
    76  0059E8  0000               	dw	0
    77  0059EA  0002               	dw	2
    78  0059EC  000D               	dw	13
    79  0059EE  001E               	dw	30
    80                           
    81                           	psect	idataBANK1
    82  005CD0                     __pidataBANK1:
    83                           	opt stack 0
    84                           
    85                           ;initializer for SENO_1@F7354
    86  005CD0  0032               	dw	50
    87  005CD2  0023               	dw	35
    88  005CD4  0015               	dw	21
    89  005CD6  000A               	dw	10
    90  005CD8  0002               	dw	2
    91  005CDA  0000               	dw	0
    92  005CDC  0002               	dw	2
    93  005CDE  000A               	dw	10
    94  005CE0  0015               	dw	21
    95  005CE2  0023               	dw	35
    96  005CE4  0032               	dw	50
    97  005CE6  0041               	dw	65
    98  005CE8  004F               	dw	79
    99  005CEA  005A               	dw	90
   100  005CEC  0062               	dw	98
   101  005CEE  0064               	dw	100
   102  005CF0  0062               	dw	98
   103  005CF2  005A               	dw	90
   104  005CF4  004F               	dw	79
   105  005CF6  0041               	dw	65
   106                           
   107                           ;initializer for TRI_1@F7354
   108  005CF8  000A               	dw	10
   109  005CFA  0014               	dw	20
   110  005CFC  001E               	dw	30
   111  005CFE  0028               	dw	40
   112  005D00  0032               	dw	50
   113  005D02  003C               	dw	60
   114  005D04  0046               	dw	70
   115  005D06  0050               	dw	80
   116  005D08  005A               	dw	90
   117  005D0A  0064               	dw	100
   118  005D0C  005A               	dw	90
   119  005D0E  0050               	dw	80
   120  005D10  0046               	dw	70
   121  005D12  003C               	dw	60
   122  005D14  0032               	dw	50
   123  005D16  0028               	dw	40
   124  005D18  001E               	dw	30
   125  005D1A  0014               	dw	20
   126  005D1C  000A               	dw	10
   127  005D1E  0000               	dw	0
   128                           
   129                           ;initializer for TRI_2@F7359
   130  005D20  000A               	dw	10
   131  005D22  0014               	dw	20
   132  005D24  001E               	dw	30
   133  005D26  0028               	dw	40
   134  005D28  0032               	dw	50
   135  005D2A  003C               	dw	60
   136  005D2C  0046               	dw	70
   137  005D2E  0050               	dw	80
   138  005D30  005A               	dw	90
   139  005D32  0064               	dw	100
   140  005D34  005A               	dw	90
   141  005D36  0050               	dw	80
   142  005D38  0046               	dw	70
   143  005D3A  003C               	dw	60
   144  005D3C  0032               	dw	50
   145  005D3E  0028               	dw	40
   146  005D40  001E               	dw	30
   147  005D42  0014               	dw	20
   148  005D44  000A               	dw	10
   149  005D46  0000               	dw	0
   150                           
   151                           ;initializer for TRI_3@F7364
   152  005D48  000A               	dw	10
   153  005D4A  0014               	dw	20
   154  005D4C  001E               	dw	30
   155  005D4E  0028               	dw	40
   156  005D50  0032               	dw	50
   157  005D52  003C               	dw	60
   158  005D54  0046               	dw	70
   159  005D56  0050               	dw	80
   160  005D58  005A               	dw	90
   161  005D5A  0064               	dw	100
   162  005D5C  005A               	dw	90
   163  005D5E  0050               	dw	80
   164  005D60  0046               	dw	70
   165  005D62  003C               	dw	60
   166  005D64  0032               	dw	50
   167  005D66  0028               	dw	40
   168  005D68  001E               	dw	30
   169  005D6A  0014               	dw	20
   170  005D6C  000A               	dw	10
   171  005D6E  0000               	dw	0
   172  0000                     _ANSELA	set	3931
   173  0000                     _ANSELD	set	3934
   174  0000                     _CCP2CON	set	3991
   175  0000                     _CCPR2L	set	3984
   176  0000                     _OSCCON	set	4051
   177  0000                     _PORTA	set	3968
   178  0000                     _PORTAbits	set	3968
   179  0000                     _PORTCbits	set	3970
   180  0000                     _PORTDbits	set	3971
   181  0000                     _PR2	set	4027
   182  0000                     _T2CON	set	4026
   183  0000                     _T2CONbits	set	4026
   184  0000                     _TMR2	set	4028
   185  0000                     _TRISA	set	3986
   186  0000                     _TRISAbits	set	3986
   187  0000                     _TRISCbits	set	3988
   188  0000                     _TRISDbits	set	3989
   189                           
   190                           	psect	mediumconst
   191  007E72                     __pmediumconst:
   192                           	opt stack 0
   193  007E72  00                 	db	0
   194  007E73                     __stringdata:
   195                           	opt stack 0
   196  007E73                     STR_2:
   197  007E73  50                 	db	80	;'P'
   198  007E74  72                 	db	114	;'r'
   199  007E75  6F                 	db	111	;'o'
   200  007E76  79                 	db	121	;'y'
   201  007E77  65                 	db	101	;'e'
   202  007E78  63                 	db	99	;'c'
   203  007E79  74                 	db	116	;'t'
   204  007E7A  6F                 	db	111	;'o'
   205  007E7B  20                 	db	32
   206  007E7C  46                 	db	70	;'F'
   207  007E7D  69                 	db	105	;'i'
   208  007E7E  6E                 	db	110	;'n'
   209  007E7F  61                 	db	97	;'a'
   210  007E80  6C                 	db	108	;'l'
   211  007E81  20                 	db	32
   212  007E82  00                 	db	0
   213  007E83                     STR_9:
   214  007E83  20                 	db	32
   215  007E84  20                 	db	32
   216  007E85  20                 	db	32
   217  007E86  46                 	db	70	;'F'
   218  007E87  72                 	db	114	;'r'
   219  007E88  65                 	db	101	;'e'
   220  007E89  63                 	db	99	;'c'
   221  007E8A  75                 	db	117	;'u'
   222  007E8B  65                 	db	101	;'e'
   223  007E8C  6E                 	db	110	;'n'
   224  007E8D  63                 	db	99	;'c'
   225  007E8E  69                 	db	105	;'i'
   226  007E8F  61                 	db	97	;'a'
   227  007E90  00                 	db	0
   228  007E91                     STR_11:
   229  007E91  3D                 	db	61	;'='
   230  007E92  3E                 	db	62	;'>'
   231  007E93  20                 	db	32
   232  007E94  46                 	db	70	;'F'
   233  007E95  72                 	db	114	;'r'
   234  007E96  65                 	db	101	;'e'
   235  007E97  63                 	db	99	;'c'
   236  007E98  75                 	db	117	;'u'
   237  007E99  65                 	db	101	;'e'
   238  007E9A  6E                 	db	110	;'n'
   239  007E9B  63                 	db	99	;'c'
   240  007E9C  69                 	db	105	;'i'
   241  007E9D  61                 	db	97	;'a'
   242  007E9E  00                 	db	0
   243  007E9F                     STR_83:
   244  007E9F  3D                 	db	61	;'='
   245  007EA0  3E                 	db	62	;'>'
   246  007EA1  20                 	db	32
   247  007EA2  54                 	db	84	;'T'
   248  007EA3  72                 	db	114	;'r'
   249  007EA4  69                 	db	105	;'i'
   250  007EA5  61                 	db	97	;'a'
   251  007EA6  6E                 	db	110	;'n'
   252  007EA7  67                 	db	103	;'g'
   253  007EA8  75                 	db	117	;'u'
   254  007EA9  6C                 	db	108	;'l'
   255  007EAA  61                 	db	97	;'a'
   256  007EAB  72                 	db	114	;'r'
   257  007EAC  00                 	db	0
   258  007EAD                     STR_4:
   259  007EAD  20                 	db	32
   260  007EAE  20                 	db	32
   261  007EAF  20                 	db	32
   262  007EB0  53                 	db	83	;'S'
   263  007EB1  65                 	db	101	;'e'
   264  007EB2  6E                 	db	110	;'n'
   265  007EB3  6F                 	db	111	;'o'
   266  007EB4  69                 	db	105	;'i'
   267  007EB5  64                 	db	100	;'d'
   268  007EB6  61                 	db	97	;'a'
   269  007EB7  6C                 	db	108	;'l'
   270  007EB8  00                 	db	0
   271  007EB9                     STR_74:
   272  007EB9  3D                 	db	61	;'='
   273  007EBA  3E                 	db	62	;'>'
   274  007EBB  20                 	db	32
   275  007EBC  53                 	db	83	;'S'
   276  007EBD  65                 	db	101	;'e'
   277  007EBE  6E                 	db	110	;'n'
   278  007EBF  6F                 	db	111	;'o'
   279  007EC0  69                 	db	105	;'i'
   280  007EC1  64                 	db	100	;'d'
   281  007EC2  61                 	db	97	;'a'
   282  007EC3  6C                 	db	108	;'l'
   283  007EC4  00                 	db	0
   284  007EC5                     STR_5:
   285  007EC5  20                 	db	32
   286  007EC6  20                 	db	32
   287  007EC7  20                 	db	32
   288  007EC8  49                 	db	73	;'I'
   289  007EC9  6E                 	db	110	;'n'
   290  007ECA  67                 	db	103	;'g'
   291  007ECB  72                 	db	114	;'r'
   292  007ECC  65                 	db	101	;'e'
   293  007ECD  73                 	db	115	;'s'
   294  007ECE  61                 	db	97	;'a'
   295  007ECF  72                 	db	114	;'r'
   296  007ED0  00                 	db	0
   297  007ED1                     STR_7:
   298  007ED1  3D                 	db	61	;'='
   299  007ED2  3E                 	db	62	;'>'
   300  007ED3  20                 	db	32
   301  007ED4  49                 	db	73	;'I'
   302  007ED5  6E                 	db	110	;'n'
   303  007ED6  67                 	db	103	;'g'
   304  007ED7  72                 	db	114	;'r'
   305  007ED8  65                 	db	101	;'e'
   306  007ED9  73                 	db	115	;'s'
   307  007EDA  61                 	db	97	;'a'
   308  007EDB  72                 	db	114	;'r'
   309  007EDC  00                 	db	0
   310  007EDD                     STR_6:
   311  007EDD  20                 	db	32
   312  007EDE  20                 	db	32
   313  007EDF  20                 	db	32
   314  007EE0  43                 	db	67	;'C'
   315  007EE1  6F                 	db	111	;'o'
   316  007EE2  6D                 	db	109	;'m'
   317  007EE3  65                 	db	101	;'e'
   318  007EE4  6E                 	db	110	;'n'
   319  007EE5  7A                 	db	122	;'z'
   320  007EE6  61                 	db	97	;'a'
   321  007EE7  72                 	db	114	;'r'
   322  007EE8  00                 	db	0
   323  007EE9                     STR_69:
   324  007EE9  3D                 	db	61	;'='
   325  007EEA  3E                 	db	62	;'>'
   326  007EEB  20                 	db	32
   327  007EEC  43                 	db	67	;'C'
   328  007EED  6F                 	db	111	;'o'
   329  007EEE  6D                 	db	109	;'m'
   330  007EEF  65                 	db	101	;'e'
   331  007EF0  6E                 	db	110	;'n'
   332  007EF1  7A                 	db	122	;'z'
   333  007EF2  61                 	db	97	;'a'
   334  007EF3  72                 	db	114	;'r'
   335  007EF4  00                 	db	0
   336  007EF5                     STR_1:
   337  007EF5  20                 	db	32
   338  007EF6  20                 	db	32
   339  007EF7  20                 	db	32
   340  007EF8  20                 	db	32
   341  007EF9  20                 	db	32
   342  007EFA  44                 	db	68	;'D'
   343  007EFB  49                 	db	73	;'I'
   344  007EFC  43                 	db	67	;'C'
   345  007EFD  49                 	db	73	;'I'
   346  007EFE  53                 	db	83	;'S'
   347  007EFF  00                 	db	0
   348  007F00                     STR_70:
   349  007F00  46                 	db	70	;'F'
   350  007F01  3A                 	db	58	;':'
   351  007F02  20                 	db	32
   352  007F03  20                 	db	32
   353  007F04  30                 	db	48	;'0'
   354  007F05  30                 	db	48	;'0'
   355  007F06  30                 	db	48	;'0'
   356  007F07  20                 	db	32
   357  007F08  68                 	db	104	;'h'
   358  007F09  7A                 	db	122	;'z'
   359  007F0A  00                 	db	0
   360  007F0B                     STR_87:
   361  007F0B  20                 	db	32
   362  007F0C  20                 	db	32
   363  007F0D  20                 	db	32
   364  007F0E  54                 	db	84	;'T'
   365  007F0F  72                 	db	114	;'r'
   366  007F10  69                 	db	105	;'i'
   367  007F11  6E                 	db	110	;'n'
   368  007F12  20                 	db	32
   369  007F13  31                 	db	49	;'1'
   370  007F14  00                 	db	0
   371  007F15                     STR_84:
   372  007F15  3D                 	db	61	;'='
   373  007F16  3E                 	db	62	;'>'
   374  007F17  20                 	db	32
   375  007F18  54                 	db	84	;'T'
   376  007F19  72                 	db	114	;'r'
   377  007F1A  69                 	db	105	;'i'
   378  007F1B  6E                 	db	110	;'n'
   379  007F1C  20                 	db	32
   380  007F1D  31                 	db	49	;'1'
   381  007F1E  00                 	db	0
   382  007F1F                     STR_85:
   383  007F1F  20                 	db	32
   384  007F20  20                 	db	32
   385  007F21  20                 	db	32
   386  007F22  54                 	db	84	;'T'
   387  007F23  72                 	db	114	;'r'
   388  007F24  69                 	db	105	;'i'
   389  007F25  6E                 	db	110	;'n'
   390  007F26  20                 	db	32
   391  007F27  32                 	db	50	;'2'
   392  007F28  00                 	db	0
   393  007F29                     STR_88:
   394  007F29  3D                 	db	61	;'='
   395  007F2A  3E                 	db	62	;'>'
   396  007F2B  20                 	db	32
   397  007F2C  54                 	db	84	;'T'
   398  007F2D  72                 	db	114	;'r'
   399  007F2E  69                 	db	105	;'i'
   400  007F2F  6E                 	db	110	;'n'
   401  007F30  20                 	db	32
   402  007F31  32                 	db	50	;'2'
   403  007F32  00                 	db	0
   404  007F33                     STR_90:
   405  007F33  3D                 	db	61	;'='
   406  007F34  3E                 	db	62	;'>'
   407  007F35  20                 	db	32
   408  007F36  54                 	db	84	;'T'
   409  007F37  72                 	db	114	;'r'
   410  007F38  69                 	db	105	;'i'
   411  007F39  6E                 	db	110	;'n'
   412  007F3A  20                 	db	32
   413  007F3B  33                 	db	51	;'3'
   414  007F3C  00                 	db	0
   415  007F3D                     STR_78:
   416  007F3D  20                 	db	32
   417  007F3E  20                 	db	32
   418  007F3F  20                 	db	32
   419  007F40  53                 	db	83	;'S'
   420  007F41  69                 	db	105	;'i'
   421  007F42  6E                 	db	110	;'n'
   422  007F43  20                 	db	32
   423  007F44  31                 	db	49	;'1'
   424  007F45  00                 	db	0
   425  007F46                     STR_75:
   426  007F46  3D                 	db	61	;'='
   427  007F47  3E                 	db	62	;'>'
   428  007F48  20                 	db	32
   429  007F49  53                 	db	83	;'S'
   430  007F4A  69                 	db	105	;'i'
   431  007F4B  6E                 	db	110	;'n'
   432  007F4C  20                 	db	32
   433  007F4D  31                 	db	49	;'1'
   434  007F4E  00                 	db	0
   435  007F4F                     STR_76:
   436  007F4F  20                 	db	32
   437  007F50  20                 	db	32
   438  007F51  20                 	db	32
   439  007F52  53                 	db	83	;'S'
   440  007F53  69                 	db	105	;'i'
   441  007F54  6E                 	db	110	;'n'
   442  007F55  20                 	db	32
   443  007F56  32                 	db	50	;'2'
   444  007F57  00                 	db	0
   445  007F58                     STR_79:
   446  007F58  3D                 	db	61	;'='
   447  007F59  3E                 	db	62	;'>'
   448  007F5A  20                 	db	32
   449  007F5B  53                 	db	83	;'S'
   450  007F5C  69                 	db	105	;'i'
   451  007F5D  6E                 	db	110	;'n'
   452  007F5E  20                 	db	32
   453  007F5F  32                 	db	50	;'2'
   454  007F60  00                 	db	0
   455  007F61                     STR_81:
   456  007F61  3D                 	db	61	;'='
   457  007F62  3E                 	db	62	;'>'
   458  007F63  20                 	db	32
   459  007F64  53                 	db	83	;'S'
   460  007F65  69                 	db	105	;'i'
   461  007F66  6E                 	db	110	;'n'
   462  007F67  20                 	db	32
   463  007F68  33                 	db	51	;'3'
   464  007F69  00                 	db	0
   465  007F6A                     STR_10:
   466  007F6A  20                 	db	32
   467  007F6B  20                 	db	32
   468  007F6C  20                 	db	32
   469  007F6D  43                 	db	67	;'C'
   470  007F6E  69                 	db	105	;'i'
   471  007F6F  63                 	db	99	;'c'
   472  007F70  6C                 	db	108	;'l'
   473  007F71  6F                 	db	111	;'o'
   474  007F72  00                 	db	0
   475  007F73                     STR_15:
   476  007F73  3D                 	db	61	;'='
   477  007F74  3E                 	db	62	;'>'
   478  007F75  20                 	db	32
   479  007F76  43                 	db	67	;'C'
   480  007F77  69                 	db	105	;'i'
   481  007F78  63                 	db	99	;'c'
   482  007F79  6C                 	db	108	;'l'
   483  007F7A  6F                 	db	111	;'o'
   484  007F7B  00                 	db	0
   485  007F7C                     STR_13:
   486  007F7C  20                 	db	32
   487  007F7D  20                 	db	32
   488  007F7E  30                 	db	48	;'0'
   489  007F7F  30                 	db	48	;'0'
   490  007F80  30                 	db	48	;'0'
   491  007F81  20                 	db	32
   492  007F82  48                 	db	72	;'H'
   493  007F83  7A                 	db	122	;'z'
   494  007F84  00                 	db	0
   495  007F85                     STR_73:
   496  007F85  20                 	db	32
   497  007F86  20                 	db	32
   498  007F87  20                 	db	32
   499  007F88  50                 	db	80	;'P'
   500  007F89  57                 	db	87	;'W'
   501  007F8A  4D                 	db	77	;'M'
   502  007F8B  00                 	db	0
   503  007F8C                     STR_3:
   504  007F8C  3D                 	db	61	;'='
   505  007F8D  3E                 	db	62	;'>'
   506  007F8E  20                 	db	32
   507  007F8F  50                 	db	80	;'P'
   508  007F90  57                 	db	87	;'W'
   509  007F91  4D                 	db	77	;'M'
   510  007F92  00                 	db	0
   511  007F93                     STR_55:
   512  007F93  20                 	db	32
   513  007F94  31                 	db	49	;'1'
   514  007F95  30                 	db	48	;'0'
   515  007F96  30                 	db	48	;'0'
   516  007F97  25                 	db	37
   517  007F98  00                 	db	0
   518  007F99                     STR_67:
   519  007F99  2A                 	db	42
   520  007F9A  31                 	db	49	;'1'
   521  007F9B  30                 	db	48	;'0'
   522  007F9C  30                 	db	48	;'0'
   523  007F9D  25                 	db	37
   524  007F9E  00                 	db	0
   525  007F9F                     STR_52:
   526  007F9F  20                 	db	32
   527  007FA0  2A                 	db	42
   528  007FA1  37                 	db	55	;'7'
   529  007FA2  30                 	db	48	;'0'
   530  007FA3  25                 	db	37
   531  007FA4  00                 	db	0
   532  007FA5                     STR_22:
   533  007FA5  20                 	db	32
   534  007FA6  31                 	db	49	;'1'
   535  007FA7  30                 	db	48	;'0'
   536  007FA8  25                 	db	37
   537  007FA9  00                 	db	0
   538  007FAA                     STR_16:
   539  007FAA  2A                 	db	42
   540  007FAB  31                 	db	49	;'1'
   541  007FAC  30                 	db	48	;'0'
   542  007FAD  25                 	db	37
   543  007FAE  00                 	db	0
   544  007FAF                     STR_17:
   545  007FAF  20                 	db	32
   546  007FB0  32                 	db	50	;'2'
   547  007FB1  30                 	db	48	;'0'
   548  007FB2  25                 	db	37
   549  007FB3  00                 	db	0
   550  007FB4                     STR_23:
   551  007FB4  2A                 	db	42
   552  007FB5  32                 	db	50	;'2'
   553  007FB6  30                 	db	48	;'0'
   554  007FB7  25                 	db	37
   555  007FB8  00                 	db	0
   556  007FB9                     STR_18:
   557  007FB9  20                 	db	32
   558  007FBA  33                 	db	51	;'3'
   559  007FBB  30                 	db	48	;'0'
   560  007FBC  25                 	db	37
   561  007FBD  00                 	db	0
   562  007FBE                     STR_30:
   563  007FBE  2A                 	db	42
   564  007FBF  33                 	db	51	;'3'
   565  007FC0  30                 	db	48	;'0'
   566  007FC1  25                 	db	37
   567  007FC2  00                 	db	0
   568  007FC3                     STR_19:
   569  007FC3  20                 	db	32
   570  007FC4  34                 	db	52	;'4'
   571  007FC5  30                 	db	48	;'0'
   572  007FC6  25                 	db	37
   573  007FC7  00                 	db	0
   574  007FC8                     STR_37:
   575  007FC8  2A                 	db	42
   576  007FC9  34                 	db	52	;'4'
   577  007FCA  30                 	db	48	;'0'
   578  007FCB  25                 	db	37
   579  007FCC  00                 	db	0
   580  007FCD                     STR_20:
   581  007FCD  20                 	db	32
   582  007FCE  35                 	db	53	;'5'
   583  007FCF  30                 	db	48	;'0'
   584  007FD0  25                 	db	37
   585  007FD1  00                 	db	0
   586  007FD2                     STR_44:
   587  007FD2  2A                 	db	42
   588  007FD3  35                 	db	53	;'5'
   589  007FD4  30                 	db	48	;'0'
   590  007FD5  25                 	db	37
   591  007FD6  00                 	db	0
   592  007FD7                     STR_21:
   593  007FD7  20                 	db	32
   594  007FD8  36                 	db	54	;'6'
   595  007FD9  30                 	db	48	;'0'
   596  007FDA  25                 	db	37
   597  007FDB  00                 	db	0
   598  007FDC                     STR_51:
   599  007FDC  2A                 	db	42
   600  007FDD  36                 	db	54	;'6'
   601  007FDE  30                 	db	48	;'0'
   602  007FDF  25                 	db	37
   603  007FE0  00                 	db	0
   604  007FE1                     STR_56:
   605  007FE1  20                 	db	32
   606  007FE2  37                 	db	55	;'7'
   607  007FE3  30                 	db	48	;'0'
   608  007FE4  25                 	db	37
   609  007FE5  00                 	db	0
   610  007FE6                     STR_53:
   611  007FE6  20                 	db	32
   612  007FE7  38                 	db	56	;'8'
   613  007FE8  30                 	db	48	;'0'
   614  007FE9  25                 	db	37
   615  007FEA  00                 	db	0
   616  007FEB                     STR_57:
   617  007FEB  2A                 	db	42
   618  007FEC  38                 	db	56	;'8'
   619  007FED  30                 	db	48	;'0'
   620  007FEE  25                 	db	37
   621  007FEF  00                 	db	0
   622  007FF0                     STR_54:
   623  007FF0  20                 	db	32
   624  007FF1  39                 	db	57	;'9'
   625  007FF2  30                 	db	48	;'0'
   626  007FF3  25                 	db	37
   627  007FF4  00                 	db	0
   628  007FF5                     STR_62:
   629  007FF5  2A                 	db	42
   630  007FF6  39                 	db	57	;'9'
   631  007FF7  30                 	db	48	;'0'
   632  007FF8  25                 	db	37
   633  007FF9  00                 	db	0
   634  007FFA                     STR_71:
   635  007FFA  43                 	db	67	;'C'
   636  007FFB  3A                 	db	58	;':'
   637  007FFC  20                 	db	32
   638  007FFD  00                 	db	0
   639  007FFE                     __end_of__stringdata:
   640                           	opt stack 0
   641                           
   642                           ; #config settings
   643  007FFE  00                 	db	0	; dummy byte at the end
   644  0000                     
   645                           	psect	cinit
   646  005AF6                     __pcinit:
   647                           	opt stack 0
   648  005AF6                     start_initialization:
   649                           	opt stack 0
   650  005AF6                     __initialization:
   651                           	opt stack 0
   652                           
   653                           ; Clear objects allocated to BANK0 (16 bytes)
   654  005AF6  EE00  F0D4         	lfsr	0,__pbssBANK0
   655  005AFA  0E10               	movlw	16
   656  005AFC                     clear_0:
   657  005AFC  6AEE               	clrf	postinc0,c
   658  005AFE  06E8               	decf	wreg,f,c
   659  005B00  E1FD               	bnz	clear_0
   660                           
   661                           ; Clear objects allocated to COMRAM (6 bytes)
   662  005B02  6A42               	clrf	(__pbssCOMRAM+5)& (0+255),c
   663  005B04  6A41               	clrf	(__pbssCOMRAM+4)& (0+255),c
   664  005B06  6A40               	clrf	(__pbssCOMRAM+3)& (0+255),c
   665  005B08  6A3F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   666  005B0A  6A3E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   667  005B0C  6A3D               	clrf	__pbssCOMRAM& (0+255),c
   668                           
   669                           ; Initialize objects allocated to BANK1 (160 bytes)
   670                           ; load TBLPTR registers with __pidataBANK1
   671  005B0E  0ED0               	movlw	low __pidataBANK1
   672  005B10  6EF6               	movwf	tblptrl,c
   673  005B12  0E5C               	movlw	high __pidataBANK1
   674  005B14  6EF7               	movwf	tblptrh,c
   675  005B16  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   676  005B18  6EF8               	movwf	tblptru,c
   677  005B1A  EE01  F000         	lfsr	0,__pdataBANK1
   678  005B1E  EE10 F0A0          	lfsr	1,160
   679  005B22                     copy_data0:
   680  005B22  0009               	tblrd		*+
   681  005B24  CFF5 FFEE          	movff	tablat,postinc0
   682  005B28  50E5               	movf	postdec1,w,c
   683  005B2A  50E1               	movf	fsr1l,w,c
   684  005B2C  E1FA               	bnz	copy_data0
   685                           
   686                           ; Initialize objects allocated to BANK0 (66 bytes)
   687                           ; load TBLPTR registers with __pidataBANK0
   688  005B2E  0EAE               	movlw	low __pidataBANK0
   689  005B30  6EF6               	movwf	tblptrl,c
   690  005B32  0E59               	movlw	high __pidataBANK0
   691  005B34  6EF7               	movwf	tblptrh,c
   692  005B36  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   693  005B38  6EF8               	movwf	tblptru,c
   694  005B3A  EE00  F060         	lfsr	0,__pdataBANK0
   695  005B3E  EE10 F042          	lfsr	1,66
   696  005B42                     copy_data1:
   697  005B42  0009               	tblrd		*+
   698  005B44  CFF5 FFEE          	movff	tablat,postinc0
   699  005B48  50E5               	movf	postdec1,w,c
   700  005B4A  50E1               	movf	fsr1l,w,c
   701  005B4C  E1FA               	bnz	copy_data1
   702  005B4E                     end_of_initialization:
   703                           	opt stack 0
   704  005B4E                     __end_of__initialization:
   705                           	opt stack 0
   706  005B4E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   707  005B50  6EF8               	movwf	tblptru,c
   708  005B52  0100               	movlb	0
   709  005B54  EFF4  F036         	goto	_main	;jump to C main() function
   710                           tblptru	equ	0xFF8
   711                           tblptrh	equ	0xFF7
   712                           tblptrl	equ	0xFF6
   713                           tablat	equ	0xFF5
   714                           postinc0	equ	0xFEE
   715                           wreg	equ	0xFE8
   716                           postdec1	equ	0xFE5
   717                           fsr1l	equ	0xFE1
   718                           
   719                           	psect	bssCOMRAM
   720  00003D                     __pbssCOMRAM:
   721                           	opt stack 0
   722  00003D                     _C:
   723                           	opt stack 0
   724  00003D                     	ds	2
   725  00003F                     _D:
   726                           	opt stack 0
   727  00003F                     	ds	2
   728  000041                     _frecuencia:
   729                           	opt stack 0
   730  000041                     	ds	2
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           postinc0	equ	0xFEE
   736                           wreg	equ	0xFE8
   737                           postdec1	equ	0xFE5
   738                           fsr1l	equ	0xFE1
   739                           
   740                           	psect	bssBANK0
   741  0000D4                     __pbssBANK0:
   742                           	opt stack 0
   743  0000D4                     _B:
   744                           	opt stack 0
   745  0000D4                     	ds	2
   746  0000D6                     _M:
   747                           	opt stack 0
   748  0000D6                     	ds	2
   749  0000D8                     _e:
   750                           	opt stack 0
   751  0000D8                     	ds	2
   752  0000DA                     _p:
   753                           	opt stack 0
   754  0000DA                     	ds	2
   755  0000DC                     _q:
   756                           	opt stack 0
   757  0000DC                     	ds	2
   758  0000DE                     _r:
   759                           	opt stack 0
   760  0000DE                     	ds	2
   761  0000E0                     _t:
   762                           	opt stack 0
   763  0000E0                     	ds	2
   764  0000E2                     _w:
   765                           	opt stack 0
   766  0000E2                     	ds	2
   767                           tblptru	equ	0xFF8
   768                           tblptrh	equ	0xFF7
   769                           tblptrl	equ	0xFF6
   770                           tablat	equ	0xFF5
   771                           postinc0	equ	0xFEE
   772                           wreg	equ	0xFE8
   773                           postdec1	equ	0xFE5
   774                           fsr1l	equ	0xFE1
   775                           
   776                           	psect	dataBANK0
   777  000060                     __pdataBANK0:
   778                           	opt stack 0
   779  000060                     SENO_2@F7359:
   780                           	opt stack 0
   781  000060                     	ds	36
   782  000084                     SENO_3@F7364:
   783                           	opt stack 0
   784  000084                     	ds	30
   785                           tblptru	equ	0xFF8
   786                           tblptrh	equ	0xFF7
   787                           tblptrl	equ	0xFF6
   788                           tablat	equ	0xFF5
   789                           postinc0	equ	0xFEE
   790                           wreg	equ	0xFE8
   791                           postdec1	equ	0xFE5
   792                           fsr1l	equ	0xFE1
   793                           
   794                           	psect	dataBANK1
   795  000100                     __pdataBANK1:
   796                           	opt stack 0
   797  000100                     SENO_1@F7354:
   798                           	opt stack 0
   799  000100                     	ds	40
   800  000128                     TRI_1@F7354:
   801                           	opt stack 0
   802  000128                     	ds	40
   803  000150                     TRI_2@F7359:
   804                           	opt stack 0
   805  000150                     	ds	40
   806  000178                     TRI_3@F7364:
   807                           	opt stack 0
   808  000178                     	ds	40
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           postinc0	equ	0xFEE
   814                           wreg	equ	0xFE8
   815                           postdec1	equ	0xFE5
   816                           fsr1l	equ	0xFE1
   817                           
   818                           	psect	cstackBANK0
   819  0000A2                     __pcstackBANK0:
   820                           	opt stack 0
   821  0000A2                     main@cad:
   822                           	opt stack 0
   823                           
   824                           ; 20 bytes @ 0x0
   825  0000A2                     	ds	20
   826  0000B6                     main@cadena:
   827                           	opt stack 0
   828                           
   829                           ; 20 bytes @ 0x14
   830  0000B6                     	ds	20
   831  0000CA                     main@V:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0x28
   835  0000CA                     	ds	2
   836  0000CC                     main@fre:
   837                           	opt stack 0
   838                           
   839                           ; 1 bytes @ 0x2A
   840  0000CC                     	ds	1
   841  0000CD                     main@cantidad:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x2B
   845  0000CD                     	ds	1
   846  0000CE                     main@cant:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x2C
   850  0000CE                     	ds	1
   851  0000CF                     main@X:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x2D
   855  0000CF                     	ds	2
   856  0000D1                     main@Z:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x2F
   860  0000D1                     	ds	2
   861  0000D3                     main@A:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x31
   865  0000D3                     	ds	1
   866                           tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           tblptrl	equ	0xFF6
   869                           tablat	equ	0xFF5
   870                           postinc0	equ	0xFEE
   871                           wreg	equ	0xFE8
   872                           postdec1	equ	0xFE5
   873                           fsr1l	equ	0xFE1
   874                           
   875                           	psect	cstackCOMRAM
   876  000001                     __pcstackCOMRAM:
   877                           	opt stack 0
   878  000001                     ??_Lcd_Cmd:
   879  000001                     ??_Lcd_Chr_CP:
   880  000001                     ??_SENO_1:
   881  000001                     ??_SENO_2:
   882  000001                     ??_SENO_3:
   883  000001                     ??_TRI_1:
   884  000001                     ??_tm_1s:
   885  000001                     ?___wmul:
   886                           	opt stack 0
   887  000001                     ?___awdiv:
   888                           	opt stack 0
   889  000001                     ?___lmul:
   890                           	opt stack 0
   891  000001                     ?___aldiv:
   892                           	opt stack 0
   893  000001                     ?___almod:
   894                           	opt stack 0
   895  000001                     ?___lldiv:
   896                           	opt stack 0
   897  000001                     ___wmul@multiplier:
   898                           	opt stack 0
   899  000001                     ___awdiv@dividend:
   900                           	opt stack 0
   901  000001                     ___lmul@multiplier:
   902                           	opt stack 0
   903  000001                     ___aldiv@dividend:
   904                           	opt stack 0
   905  000001                     ___almod@dividend:
   906                           	opt stack 0
   907  000001                     ___lldiv@dividend:
   908                           	opt stack 0
   909                           
   910                           ; 4 bytes @ 0x0
   911  000001                     	ds	2
   912  000003                     Lcd_Chr_CP@data:
   913                           	opt stack 0
   914  000003                     Lcd_Cmd@data:
   915                           	opt stack 0
   916  000003                     ___wmul@multiplicand:
   917                           	opt stack 0
   918  000003                     ___awdiv@divisor:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x2
   922  000003                     	ds	1
   923  000004                     ??_Lcd_Init:
   924  000004                     Lcd_Out@x:
   925                           	opt stack 0
   926  000004                     Lcd_Out2@x:
   927                           	opt stack 0
   928  000004                     lcd_goto@x:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x3
   932  000004                     	ds	1
   933  000005                     Lcd_Init@data:
   934                           	opt stack 0
   935  000005                     ___awdiv@counter:
   936                           	opt stack 0
   937  000005                     Lcd_Out@buffer:
   938                           	opt stack 0
   939  000005                     Lcd_Out2@buffer:
   940                           	opt stack 0
   941  000005                     ___wmul@product:
   942                           	opt stack 0
   943  000005                     ___lmul@multiplicand:
   944                           	opt stack 0
   945  000005                     ___aldiv@divisor:
   946                           	opt stack 0
   947  000005                     ___almod@divisor:
   948                           	opt stack 0
   949  000005                     ___lldiv@divisor:
   950                           	opt stack 0
   951                           
   952                           ; 4 bytes @ 0x4
   953  000005                     	ds	1
   954  000006                     ___awdiv@sign:
   955                           	opt stack 0
   956  000006                     lcd_goto@y:
   957                           	opt stack 0
   958  000006                     SENO_3@valoresSeno:
   959                           	opt stack 0
   960  000006                     SENO_2@valoresSeno:
   961                           	opt stack 0
   962  000006                     SENO_1@valoresSeno:
   963                           	opt stack 0
   964  000006                     TRI_1@valoresSeno:
   965                           	opt stack 0
   966                           
   967                           ; 40 bytes @ 0x5
   968  000006                     	ds	1
   969  000007                     Lcd_Out@y:
   970                           	opt stack 0
   971  000007                     Lcd_Out2@y:
   972                           	opt stack 0
   973  000007                     ___awdiv@quotient:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x6
   977  000007                     	ds	1
   978  000008                     ??_lcd_goto:
   979  000008                     Lcd_Out@data:
   980                           	opt stack 0
   981  000008                     Lcd_Out2@data:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x7
   985  000008                     	ds	1
   986  000009                     ??_TRI_2:
   987  000009                     ??_TRI_3:
   988  000009                     ___aldiv@counter:
   989                           	opt stack 0
   990  000009                     ___almod@counter:
   991                           	opt stack 0
   992  000009                     ___lmul@product:
   993                           	opt stack 0
   994  000009                     ___lldiv@quotient:
   995                           	opt stack 0
   996                           
   997                           ; 4 bytes @ 0x8
   998  000009                     	ds	1
   999  00000A                     lcd_goto@data:
  1000                           	opt stack 0
  1001  00000A                     ___aldiv@sign:
  1002                           	opt stack 0
  1003  00000A                     ___almod@sign:
  1004                           	opt stack 0
  1005                           
  1006                           ; 1 bytes @ 0x9
  1007  00000A                     	ds	1
  1008  00000B                     ___aldiv@quotient:
  1009                           	opt stack 0
  1010                           
  1011                           ; 4 bytes @ 0xA
  1012  00000B                     	ds	2
  1013  00000D                     ___lldiv@counter:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0xC
  1017  00000D                     	ds	1
  1018  00000E                     PWM_generar@ciclo:
  1019                           	opt stack 0
  1020  00000E                     TRI_2@valoresSeno:
  1021                           	opt stack 0
  1022  00000E                     TRI_3@valoresSeno:
  1023                           	opt stack 0
  1024                           
  1025                           ; 40 bytes @ 0xD
  1026  00000E                     	ds	1
  1027  00000F                     ?_Conv_Entero:
  1028                           	opt stack 0
  1029  00000F                     Conv_Entero@numero:
  1030                           	opt stack 0
  1031                           
  1032                           ; 4 bytes @ 0xE
  1033  00000F                     	ds	1
  1034  000010                     PWM_generar@frecuencia:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0xF
  1038  000010                     	ds	2
  1039  000012                     ??_PWM_generar:
  1040                           
  1041                           ; 0 bytes @ 0x11
  1042  000012                     	ds	1
  1043  000013                     Conv_Entero@conv:
  1044                           	opt stack 0
  1045                           
  1046                           ; 2 bytes @ 0x12
  1047  000013                     	ds	2
  1048  000015                     ??_Conv_Entero:
  1049                           
  1050                           ; 0 bytes @ 0x14
  1051  000015                     	ds	1
  1052  000016                     PWM_generar@prescalador:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0x15
  1056  000016                     	ds	2
  1057  000018                     PWM_generar@AuxCCP2CON:
  1058                           	opt stack 0
  1059                           
  1060                           ; 2 bytes @ 0x17
  1061  000018                     	ds	2
  1062  00001A                     PWM_generar@PR2cal:
  1063                           	opt stack 0
  1064  00001A                     Conv_Entero@convTemp:
  1065                           	opt stack 0
  1066                           
  1067                           ; 21 bytes @ 0x19
  1068  00001A                     	ds	4
  1069  00001E                     PWM_generar@AuxCCPR2L:
  1070                           	opt stack 0
  1071                           
  1072                           ; 4 bytes @ 0x1D
  1073  00001E                     	ds	6
  1074  000024                     SENO_3@k:
  1075                           	opt stack 0
  1076                           
  1077                           ; 2 bytes @ 0x23
  1078  000024                     	ds	2
  1079  000026                     SENO_3@j:
  1080                           	opt stack 0
  1081                           
  1082                           ; 2 bytes @ 0x25
  1083  000026                     	ds	2
  1084  000028                     SENO_3@i:
  1085                           	opt stack 0
  1086                           
  1087                           ; 2 bytes @ 0x27
  1088  000028                     	ds	2
  1089  00002A                     SENO_2@k:
  1090                           	opt stack 0
  1091                           
  1092                           ; 2 bytes @ 0x29
  1093  00002A                     	ds	2
  1094  00002C                     SENO_2@j:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0x2B
  1098  00002C                     	ds	2
  1099  00002E                     SENO_1@k:
  1100                           	opt stack 0
  1101  00002E                     SENO_2@i:
  1102                           	opt stack 0
  1103  00002E                     TRI_1@k:
  1104                           	opt stack 0
  1105                           
  1106                           ; 2 bytes @ 0x2D
  1107  00002E                     	ds	1
  1108  00002F                     Conv_Entero@num:
  1109                           	opt stack 0
  1110                           
  1111                           ; 2 bytes @ 0x2E
  1112  00002F                     	ds	1
  1113  000030                     SENO_1@j:
  1114                           	opt stack 0
  1115  000030                     TRI_1@j:
  1116                           	opt stack 0
  1117                           
  1118                           ; 2 bytes @ 0x2F
  1119  000030                     	ds	1
  1120  000031                     Conv_Entero@i:
  1121                           	opt stack 0
  1122                           
  1123                           ; 1 bytes @ 0x30
  1124  000031                     	ds	1
  1125  000032                     Conv_Entero@punteroActual:
  1126                           	opt stack 0
  1127  000032                     SENO_1@i:
  1128                           	opt stack 0
  1129  000032                     TRI_1@i:
  1130                           	opt stack 0
  1131                           
  1132                           ; 2 bytes @ 0x31
  1133  000032                     	ds	2
  1134  000034                     Conv_Entero@numeroReg:
  1135                           	opt stack 0
  1136                           
  1137                           ; 4 bytes @ 0x33
  1138  000034                     	ds	2
  1139  000036                     TRI_2@k:
  1140                           	opt stack 0
  1141  000036                     TRI_3@k:
  1142                           	opt stack 0
  1143                           
  1144                           ; 2 bytes @ 0x35
  1145  000036                     	ds	2
  1146  000038                     TRI_2@j:
  1147                           	opt stack 0
  1148  000038                     TRI_3@j:
  1149                           	opt stack 0
  1150                           
  1151                           ; 2 bytes @ 0x37
  1152  000038                     	ds	2
  1153  00003A                     TRI_2@i:
  1154                           	opt stack 0
  1155  00003A                     TRI_3@i:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0x39
  1159  00003A                     	ds	2
  1160  00003C                     ??_main:
  1161                           
  1162                           ; 0 bytes @ 0x3B
  1163  00003C                     	ds	1
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           postdec1	equ	0xFE5
  1171                           fsr1l	equ	0xFE1
  1172                           
  1173 ;;
  1174 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1175 ;;
  1176 ;; *************** function _main *****************
  1177 ;; Defined at:
  1178 ;;		line 27 in file "main.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  fre             1   42[BANK0 ] unsigned char 
  1183 ;;  cadena         20   20[BANK0 ] unsigned char [20]
  1184 ;;  cad            20    0[BANK0 ] unsigned char [20]
  1185 ;;  Z               2   47[BANK0 ] unsigned int 
  1186 ;;  X               2   45[BANK0 ] unsigned int 
  1187 ;;  V               2   40[BANK0 ] unsigned int 
  1188 ;;  A               1   49[BANK0 ] unsigned char 
  1189 ;;  cant            1   44[BANK0 ] unsigned char 
  1190 ;;  cantidad        1   43[BANK0 ] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;		None               void
  1193 ;; Registers used:
  1194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1200 ;;      Params:         0       0       0       0       0       0       0       0       0
  1201 ;;      Locals:         0      50       0       0       0       0       0       0       0
  1202 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1203 ;;      Totals:         1      50       0       0       0       0       0       0       0
  1204 ;;Total ram usage:       51 bytes
  1205 ;; Hardware stack levels required when called:    2
  1206 ;; This function calls:
  1207 ;;		_Conv_Entero
  1208 ;;		_Lcd_Chr_CP
  1209 ;;		_Lcd_Cmd
  1210 ;;		_Lcd_Init
  1211 ;;		_Lcd_Out
  1212 ;;		_Lcd_Out2
  1213 ;;		_PWM_generar
  1214 ;;		_SENO_1
  1215 ;;		_SENO_2
  1216 ;;		_SENO_3
  1217 ;;		_TRI_1
  1218 ;;		_TRI_2
  1219 ;;		_TRI_3
  1220 ;;		___wmul
  1221 ;;		_lcd_goto
  1222 ;;		_tm_1s
  1223 ;; This function is called by:
  1224 ;;		Startup code after reset
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text0
  1229  006DE8                     __ptext0:
  1230                           	opt stack 0
  1231  006DE8                     _main:
  1232                           	opt stack 29
  1233                           
  1234                           ;main.c: 29: unsigned char A=47,cantidad=0,cant=0;
  1235                           
  1236                           ;incstack = 0
  1237  006DE8  0E2F               	movlw	47
  1238  006DEA  0100               	movlb	0	; () banked
  1239  006DEC  6FD3               	movwf	main@A& (0+255),b
  1240  006DEE  0E00               	movlw	0
  1241  006DF0  0100               	movlb	0	; () banked
  1242  006DF2  6FCD               	movwf	main@cantidad& (0+255),b
  1243  006DF4  0E00               	movlw	0
  1244  006DF6  0100               	movlb	0	; () banked
  1245  006DF8  6FCE               	movwf	main@cant& (0+255),b
  1246                           
  1247                           ;main.c: 30: char cadena[20],cad[20];
  1248                           ;main.c: 31: unsigned int Z=0,X=0,V=0;
  1249  006DFA  0E00               	movlw	0
  1250  006DFC  0100               	movlb	0	; () banked
  1251  006DFE  6FD2               	movwf	(main@Z+1)& (0+255),b
  1252  006E00  0E00               	movlw	0
  1253  006E02  0100               	movlb	0	; () banked
  1254  006E04  6FD1               	movwf	main@Z& (0+255),b
  1255  006E06  0E00               	movlw	0
  1256  006E08  0100               	movlb	0	; () banked
  1257  006E0A  6FD0               	movwf	(main@X+1)& (0+255),b
  1258  006E0C  0E00               	movlw	0
  1259  006E0E  0100               	movlb	0	; () banked
  1260  006E10  6FCF               	movwf	main@X& (0+255),b
  1261  006E12  0E00               	movlw	0
  1262  006E14  0100               	movlb	0	; () banked
  1263  006E16  6FCB               	movwf	(main@V+1)& (0+255),b
  1264  006E18  0E00               	movlw	0
  1265  006E1A  0100               	movlb	0	; () banked
  1266  006E1C  6FCA               	movwf	main@V& (0+255),b
  1267                           
  1268                           ;main.c: 32: PORTA=0;
  1269  006E1E  0E00               	movlw	0
  1270  006E20  6E80               	movwf	3968,c	;volatile
  1271                           
  1272                           ;main.c: 33: OSCCON=0b01010111;
  1273  006E22  0E57               	movlw	87
  1274  006E24  6ED3               	movwf	4051,c	;volatile
  1275                           
  1276                           ;main.c: 34: ANSELD=0;
  1277  006E26  0E00               	movlw	0
  1278  006E28  010F               	movlb	15	; () banked
  1279  006E2A  6F5E               	movwf	94,b	;volatile
  1280                           
  1281                           ; BSR set to: 15
  1282                           ;main.c: 35: Lcd_Init();
  1283  006E2C  EC7D  F032         	call	_Lcd_Init	;wreg free
  1284                           
  1285                           ;main.c: 37: TRISA=0;
  1286  006E30  0E00               	movlw	0
  1287  006E32  6E92               	movwf	3986,c	;volatile
  1288                           
  1289                           ;main.c: 38: ANSELA=0;
  1290  006E34  0E00               	movlw	0
  1291  006E36  010F               	movlb	15	; () banked
  1292  006E38  6F5B               	movwf	91,b	;volatile
  1293  006E3A                     l3040:
  1294                           
  1295                           ;main.c: 41: if(PORTAbits.RA0==1)
  1296  006E3A  A080               	btfss	3968,0,c	;volatile
  1297  006E3C  D00A               	goto	l3046
  1298                           
  1299                           ;main.c: 42: {
  1300                           ;main.c: 43: B++;
  1301  006E3E  0100               	movlb	0	; () banked
  1302  006E40  4BD4               	infsnz	_B& (0+255),f,b
  1303  006E42  2BD5               	incf	(_B+1)& (0+255),f,b
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;main.c: 44: _delay((unsigned long)((10)*(4000000/4000.0)));
  1307  006E44  0E0D               	movlw	13
  1308  006E46  6E3C               	movwf	??_main& (0+255),c
  1309  006E48  0EFC               	movlw	252
  1310  006E4A                     u3477:
  1311  006E4A  2EE8               	decfsz	wreg,f,c
  1312  006E4C  D7FE               	goto	u3477
  1313  006E4E  2E3C               	decfsz	??_main& (0+255),f,c
  1314  006E50  D7FC               	goto	u3477
  1315  006E52                     l3046:
  1316                           
  1317                           ;main.c: 45: }
  1318                           ;main.c: 47: if(PORTAbits.RA1==1)
  1319  006E52  A280               	btfss	3968,1,c	;volatile
  1320  006E54  D00B               	goto	l123
  1321                           
  1322                           ;main.c: 48: {
  1323                           ;main.c: 49: B--;
  1324  006E56  0100               	movlb	0	; () banked
  1325  006E58  07D4               	decf	_B& (0+255),f,b
  1326  006E5A  A0D8               	btfss	status,0,c
  1327  006E5C  07D5               	decf	(_B+1)& (0+255),f,b
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;main.c: 50: _delay((unsigned long)((10)*(4000000/4000.0)));
  1331  006E5E  0E0D               	movlw	13
  1332  006E60  6E3C               	movwf	??_main& (0+255),c
  1333  006E62  0EFC               	movlw	252
  1334  006E64                     u3487:
  1335  006E64  2EE8               	decfsz	wreg,f,c
  1336  006E66  D7FE               	goto	u3487
  1337  006E68  2E3C               	decfsz	??_main& (0+255),f,c
  1338  006E6A  D7FC               	goto	u3487
  1339  006E6C                     l123:
  1340                           
  1341                           ;main.c: 51: }
  1342                           ;main.c: 53: if(B==0){
  1343  006E6C  0100               	movlb	0	; () banked
  1344  006E6E  51D5               	movf	(_B+1)& (0+255),w,b
  1345  006E70  11D4               	iorwf	_B& (0+255),w,b
  1346  006E72  A4D8               	btfss	status,2,c
  1347  006E74  D01C               	goto	l3060
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;main.c: 54: Lcd_Init();
  1351  006E76  EC7D  F032         	call	_Lcd_Init	;wreg free
  1352                           
  1353                           ;main.c: 55: Lcd_Cmd(1);
  1354  006E7A  0E01               	movlw	1
  1355  006E7C  ECEA  F031         	call	_Lcd_Cmd
  1356                           
  1357                           ;main.c: 56: Lcd_Cmd(12);
  1358  006E80  0E0C               	movlw	12
  1359  006E82  ECEA  F031         	call	_Lcd_Cmd
  1360                           
  1361                           ;main.c: 57: Lcd_Out2(1,1,"     DICIS");
  1362  006E86  0E01               	movlw	1
  1363  006E88  6E04               	movwf	Lcd_Out2@x,c
  1364  006E8A  0E7E               	movlw	high STR_1
  1365  006E8C  6E06               	movwf	Lcd_Out2@buffer+1,c
  1366  006E8E  0EF5               	movlw	low STR_1
  1367  006E90  6E05               	movwf	Lcd_Out2@buffer,c
  1368  006E92  0E01               	movlw	1
  1369  006E94  ECAC  F02D         	call	_Lcd_Out2
  1370                           
  1371                           ;main.c: 58: Lcd_Out2(2,1,"Proyecto Final ");
  1372  006E98  0E01               	movlw	1
  1373  006E9A  6E04               	movwf	Lcd_Out2@x,c
  1374  006E9C  0E7E               	movlw	high STR_2
  1375  006E9E  6E06               	movwf	Lcd_Out2@buffer+1,c
  1376  006EA0  0E73               	movlw	low STR_2
  1377  006EA2  6E05               	movwf	Lcd_Out2@buffer,c
  1378  006EA4  0E02               	movlw	2
  1379  006EA6  ECAC  F02D         	call	_Lcd_Out2
  1380                           
  1381                           ;main.c: 59: tm_1s();
  1382  006EAA  EC21  F02E         	call	_tm_1s	;wreg free
  1383  006EAE                     l3060:
  1384                           
  1385                           ;main.c: 62: }
  1386                           ;main.c: 64: if(B==1){
  1387  006EAE  0100               	movlb	0	; () banked
  1388  006EB0  05D4               	decf	_B& (0+255),w,b
  1389  006EB2  11D5               	iorwf	(_B+1)& (0+255),w,b
  1390  006EB4  A4D8               	btfss	status,2,c
  1391  006EB6  EFCD  F03C         	goto	l3486
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;main.c: 65: Lcd_Init();
  1395  006EBA  EC7D  F032         	call	_Lcd_Init	;wreg free
  1396                           
  1397                           ;main.c: 66: Lcd_Cmd(1);
  1398  006EBE  0E01               	movlw	1
  1399  006EC0  ECEA  F031         	call	_Lcd_Cmd
  1400                           
  1401                           ;main.c: 67: Lcd_Cmd(12);
  1402  006EC4  0E0C               	movlw	12
  1403  006EC6  ECEA  F031         	call	_Lcd_Cmd
  1404                           
  1405                           ;main.c: 68: Lcd_Out2(1,1,"=> PWM");
  1406  006ECA  0E01               	movlw	1
  1407  006ECC  6E04               	movwf	Lcd_Out2@x,c
  1408  006ECE  0E7F               	movlw	high STR_3
  1409  006ED0  6E06               	movwf	Lcd_Out2@buffer+1,c
  1410  006ED2  0E8C               	movlw	low STR_3
  1411  006ED4  6E05               	movwf	Lcd_Out2@buffer,c
  1412  006ED6  0E01               	movlw	1
  1413  006ED8  ECAC  F02D         	call	_Lcd_Out2
  1414                           
  1415                           ;main.c: 69: Lcd_Out2(2,1,"   Senoidal");
  1416  006EDC  0E01               	movlw	1
  1417  006EDE  6E04               	movwf	Lcd_Out2@x,c
  1418  006EE0  0E7E               	movlw	high STR_4
  1419  006EE2  6E06               	movwf	Lcd_Out2@buffer+1,c
  1420  006EE4  0EAD               	movlw	low STR_4
  1421  006EE6  6E05               	movwf	Lcd_Out2@buffer,c
  1422  006EE8  0E02               	movlw	2
  1423  006EEA  ECAC  F02D         	call	_Lcd_Out2
  1424                           
  1425                           ;main.c: 70: tm_1s();
  1426  006EEE  EC21  F02E         	call	_tm_1s	;wreg free
  1427                           
  1428                           ;main.c: 73: if(PORTAbits.RA2==1){
  1429  006EF2  A480               	btfss	3968,2,c	;volatile
  1430  006EF4  EFCD  F03C         	goto	l3486
  1431  006EF8                     l3072:
  1432                           
  1433                           ;main.c: 75: w=0;
  1434  006EF8  0E00               	movlw	0
  1435  006EFA  0100               	movlb	0	; () banked
  1436  006EFC  6FE3               	movwf	(_w+1)& (0+255),b
  1437  006EFE  0E00               	movlw	0
  1438  006F00  0100               	movlb	0	; () banked
  1439  006F02  6FE2               	movwf	_w& (0+255),b
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;main.c: 76: if(B==0){
  1443  006F04  0100               	movlb	0	; () banked
  1444  006F06  51D5               	movf	(_B+1)& (0+255),w,b
  1445  006F08  11D4               	iorwf	_B& (0+255),w,b
  1446  006F0A  A4D8               	btfss	status,2,c
  1447  006F0C  D01C               	goto	l3084
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;main.c: 77: Lcd_Init();
  1451  006F0E  EC7D  F032         	call	_Lcd_Init	;wreg free
  1452                           
  1453                           ;main.c: 78: Lcd_Cmd(1);
  1454  006F12  0E01               	movlw	1
  1455  006F14  ECEA  F031         	call	_Lcd_Cmd
  1456                           
  1457                           ;main.c: 79: Lcd_Cmd(12);
  1458  006F18  0E0C               	movlw	12
  1459  006F1A  ECEA  F031         	call	_Lcd_Cmd
  1460                           
  1461                           ;main.c: 80: Lcd_Out2(1,1,"   Ingresar");
  1462  006F1E  0E01               	movlw	1
  1463  006F20  6E04               	movwf	Lcd_Out2@x,c
  1464  006F22  0E7E               	movlw	high STR_5
  1465  006F24  6E06               	movwf	Lcd_Out2@buffer+1,c
  1466  006F26  0EC5               	movlw	low STR_5
  1467  006F28  6E05               	movwf	Lcd_Out2@buffer,c
  1468  006F2A  0E01               	movlw	1
  1469  006F2C  ECAC  F02D         	call	_Lcd_Out2
  1470                           
  1471                           ;main.c: 81: Lcd_Out2(2,1,"   Comenzar");
  1472  006F30  0E01               	movlw	1
  1473  006F32  6E04               	movwf	Lcd_Out2@x,c
  1474  006F34  0E7E               	movlw	high STR_6
  1475  006F36  6E06               	movwf	Lcd_Out2@buffer+1,c
  1476  006F38  0EDD               	movlw	low STR_6
  1477  006F3A  6E05               	movwf	Lcd_Out2@buffer,c
  1478  006F3C  0E02               	movlw	2
  1479  006F3E  ECAC  F02D         	call	_Lcd_Out2
  1480                           
  1481                           ;main.c: 82: tm_1s();
  1482  006F42  EC21  F02E         	call	_tm_1s	;wreg free
  1483  006F46                     l3084:
  1484                           
  1485                           ;main.c: 83: }
  1486                           ;main.c: 84: if(B==1){
  1487  006F46  0100               	movlb	0	; () banked
  1488  006F48  05D4               	decf	_B& (0+255),w,b
  1489  006F4A  11D5               	iorwf	(_B+1)& (0+255),w,b
  1490  006F4C  A4D8               	btfss	status,2,c
  1491  006F4E  EFE3  F03B         	goto	l3416
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;main.c: 85: Lcd_Init();
  1495  006F52  EC7D  F032         	call	_Lcd_Init	;wreg free
  1496                           
  1497                           ;main.c: 86: Lcd_Cmd(1);
  1498  006F56  0E01               	movlw	1
  1499  006F58  ECEA  F031         	call	_Lcd_Cmd
  1500                           
  1501                           ;main.c: 87: Lcd_Cmd(12);
  1502  006F5C  0E0C               	movlw	12
  1503  006F5E  ECEA  F031         	call	_Lcd_Cmd
  1504                           
  1505                           ;main.c: 88: Lcd_Out2(1,1,"=> Ingresar");
  1506  006F62  0E01               	movlw	1
  1507  006F64  6E04               	movwf	Lcd_Out2@x,c
  1508  006F66  0E7E               	movlw	high STR_7
  1509  006F68  6E06               	movwf	Lcd_Out2@buffer+1,c
  1510  006F6A  0ED1               	movlw	low STR_7
  1511  006F6C  6E05               	movwf	Lcd_Out2@buffer,c
  1512  006F6E  0E01               	movlw	1
  1513  006F70  ECAC  F02D         	call	_Lcd_Out2
  1514                           
  1515                           ;main.c: 89: Lcd_Out2(2,1,"   Comenzar");
  1516  006F74  0E01               	movlw	1
  1517  006F76  6E04               	movwf	Lcd_Out2@x,c
  1518  006F78  0E7E               	movlw	high STR_6
  1519  006F7A  6E06               	movwf	Lcd_Out2@buffer+1,c
  1520  006F7C  0EDD               	movlw	low STR_6
  1521  006F7E  6E05               	movwf	Lcd_Out2@buffer,c
  1522  006F80  0E02               	movlw	2
  1523  006F82  ECAC  F02D         	call	_Lcd_Out2
  1524                           
  1525                           ;main.c: 90: tm_1s();
  1526  006F86  EC21  F02E         	call	_tm_1s	;wreg free
  1527                           
  1528                           ;main.c: 93: if(PORTAbits.RA2==1){
  1529  006F8A  A480               	btfss	3968,2,c	;volatile
  1530  006F8C  EFE3  F03B         	goto	l3416
  1531  006F90                     l3096:
  1532                           
  1533                           ;main.c: 95: e=0;
  1534  006F90  0E00               	movlw	0
  1535  006F92  0100               	movlb	0	; () banked
  1536  006F94  6FD9               	movwf	(_e+1)& (0+255),b
  1537  006F96  0E00               	movlw	0
  1538  006F98  0100               	movlb	0	; () banked
  1539  006F9A  6FD8               	movwf	_e& (0+255),b
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;main.c: 96: if(B==0){
  1543  006F9C  0100               	movlb	0	; () banked
  1544  006F9E  51D5               	movf	(_B+1)& (0+255),w,b
  1545  006FA0  11D4               	iorwf	_B& (0+255),w,b
  1546  006FA2  A4D8               	btfss	status,2,c
  1547  006FA4  D01C               	goto	l3108
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;main.c: 97: Lcd_Init();
  1551  006FA6  EC7D  F032         	call	_Lcd_Init	;wreg free
  1552                           
  1553                           ;main.c: 98: Lcd_Cmd(1);
  1554  006FAA  0E01               	movlw	1
  1555  006FAC  ECEA  F031         	call	_Lcd_Cmd
  1556                           
  1557                           ;main.c: 99: Lcd_Cmd(12);
  1558  006FB0  0E0C               	movlw	12
  1559  006FB2  ECEA  F031         	call	_Lcd_Cmd
  1560                           
  1561                           ;main.c: 100: Lcd_Out2(1,1,"   Frecuencia");
  1562  006FB6  0E01               	movlw	1
  1563  006FB8  6E04               	movwf	Lcd_Out2@x,c
  1564  006FBA  0E7E               	movlw	high STR_9
  1565  006FBC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1566  006FBE  0E83               	movlw	low STR_9
  1567  006FC0  6E05               	movwf	Lcd_Out2@buffer,c
  1568  006FC2  0E01               	movlw	1
  1569  006FC4  ECAC  F02D         	call	_Lcd_Out2
  1570                           
  1571                           ;main.c: 101: Lcd_Out2(2,1,"   Ciclo");
  1572  006FC8  0E01               	movlw	1
  1573  006FCA  6E04               	movwf	Lcd_Out2@x,c
  1574  006FCC  0E7F               	movlw	high STR_10
  1575  006FCE  6E06               	movwf	Lcd_Out2@buffer+1,c
  1576  006FD0  0E6A               	movlw	low STR_10
  1577  006FD2  6E05               	movwf	Lcd_Out2@buffer,c
  1578  006FD4  0E02               	movlw	2
  1579  006FD6  ECAC  F02D         	call	_Lcd_Out2
  1580                           
  1581                           ;main.c: 102: tm_1s();
  1582  006FDA  EC21  F02E         	call	_tm_1s	;wreg free
  1583  006FDE                     l3108:
  1584                           
  1585                           ;main.c: 104: }
  1586                           ;main.c: 105: if(B==1){
  1587  006FDE  0100               	movlb	0	; () banked
  1588  006FE0  05D4               	decf	_B& (0+255),w,b
  1589  006FE2  11D5               	iorwf	(_B+1)& (0+255),w,b
  1590  006FE4  A4D8               	btfss	status,2,c
  1591  006FE6  D0AC               	goto	l3174
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;main.c: 107: Lcd_Init();
  1595  006FE8  EC7D  F032         	call	_Lcd_Init	;wreg free
  1596                           
  1597                           ;main.c: 108: Lcd_Cmd(1);
  1598  006FEC  0E01               	movlw	1
  1599  006FEE  ECEA  F031         	call	_Lcd_Cmd
  1600                           
  1601                           ;main.c: 109: Lcd_Cmd(12);
  1602  006FF2  0E0C               	movlw	12
  1603  006FF4  ECEA  F031         	call	_Lcd_Cmd
  1604                           
  1605                           ;main.c: 110: Lcd_Out2(1,1,"=> Frecuencia");
  1606  006FF8  0E01               	movlw	1
  1607  006FFA  6E04               	movwf	Lcd_Out2@x,c
  1608  006FFC  0E7E               	movlw	high STR_11
  1609  006FFE  6E06               	movwf	Lcd_Out2@buffer+1,c
  1610  007000  0E91               	movlw	low STR_11
  1611  007002  6E05               	movwf	Lcd_Out2@buffer,c
  1612  007004  0E01               	movlw	1
  1613  007006  ECAC  F02D         	call	_Lcd_Out2
  1614                           
  1615                           ;main.c: 111: Lcd_Out2(2,1,"   Ciclo");
  1616  00700A  0E01               	movlw	1
  1617  00700C  6E04               	movwf	Lcd_Out2@x,c
  1618  00700E  0E7F               	movlw	high STR_10
  1619  007010  6E06               	movwf	Lcd_Out2@buffer+1,c
  1620  007012  0E6A               	movlw	low STR_10
  1621  007014  6E05               	movwf	Lcd_Out2@buffer,c
  1622  007016  0E02               	movlw	2
  1623  007018  ECAC  F02D         	call	_Lcd_Out2
  1624                           
  1625                           ;main.c: 112: tm_1s();
  1626  00701C  EC21  F02E         	call	_tm_1s	;wreg free
  1627                           
  1628                           ;main.c: 115: if(PORTAbits.RA2==1){
  1629  007020  A480               	btfss	3968,2,c	;volatile
  1630  007022  D08E               	goto	l3174
  1631                           
  1632                           ;main.c: 116: r=0;
  1633  007024  0E00               	movlw	0
  1634  007026  0100               	movlb	0	; () banked
  1635  007028  6FDF               	movwf	(_r+1)& (0+255),b
  1636  00702A  0E00               	movlw	0
  1637  00702C  0100               	movlb	0	; () banked
  1638  00702E  6FDE               	movwf	_r& (0+255),b
  1639  007030                     l3122:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main.c: 118: Lcd_Init();
  1643  007030  EC7D  F032         	call	_Lcd_Init	;wreg free
  1644                           
  1645                           ;main.c: 119: Lcd_Cmd(1);
  1646  007034  0E01               	movlw	1
  1647  007036  ECEA  F031         	call	_Lcd_Cmd
  1648                           
  1649                           ;main.c: 120: Lcd_Cmd(12);
  1650  00703A  0E0C               	movlw	12
  1651  00703C  ECEA  F031         	call	_Lcd_Cmd
  1652                           
  1653                           ;main.c: 121: Lcd_Out2(1,1,"  000 Hz");
  1654  007040  0E01               	movlw	1
  1655  007042  6E04               	movwf	Lcd_Out2@x,c
  1656  007044  0E7F               	movlw	high STR_13
  1657  007046  6E06               	movwf	Lcd_Out2@buffer+1,c
  1658  007048  0E7C               	movlw	low STR_13
  1659  00704A  6E05               	movwf	Lcd_Out2@buffer,c
  1660  00704C  0E01               	movlw	1
  1661  00704E  ECAC  F02D         	call	_Lcd_Out2
  1662                           
  1663                           ;main.c: 122: tm_1s();
  1664  007052  EC21  F02E         	call	_tm_1s	;wreg free
  1665                           
  1666                           ;main.c: 124: if(PORTAbits.RA0==1){
  1667  007056  A080               	btfss	3968,0,c	;volatile
  1668  007058  D05F               	goto	l3164
  1669                           
  1670                           ;main.c: 125: A++;
  1671  00705A  0100               	movlb	0	; () banked
  1672  00705C  2BD3               	incf	main@A& (0+255),f,b
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;main.c: 126: lcd_goto(2,1);
  1676  00705E  0E00               	movlw	0
  1677  007060  6E05               	movwf	lcd_goto@x+1,c
  1678  007062  0E02               	movlw	2
  1679  007064  6E04               	movwf	lcd_goto@x,c
  1680  007066  0E00               	movlw	0
  1681  007068  6E07               	movwf	lcd_goto@y+1,c
  1682  00706A  0E01               	movlw	1
  1683  00706C  6E06               	movwf	lcd_goto@y,c
  1684  00706E  ECF8  F02C         	call	_lcd_goto	;wreg free
  1685                           
  1686                           ;main.c: 127: Lcd_Chr_CP(A);
  1687  007072  0100               	movlb	0	; () banked
  1688  007074  51D3               	movf	main@A& (0+255),w,b
  1689  007076  EC11  F033         	call	_Lcd_Chr_CP
  1690                           
  1691                           ;main.c: 128: tm_1s();
  1692  00707A  EC21  F02E         	call	_tm_1s	;wreg free
  1693                           
  1694                           ;main.c: 129: switch(A){
  1695  00707E  D02F               	goto	l3162
  1696  007080                     l3142:
  1697  007080  0E03               	movlw	3
  1698  007082  0100               	movlb	0	; () banked
  1699  007084  6FD7               	movwf	(_M+1)& (0+255),b
  1700  007086  0EE8               	movlw	232
  1701  007088  D027               	goto	L8
  1702  00708A                     l3144:
  1703                           
  1704                           ; BSR set to: 0
  1705  00708A  0E07               	movlw	7
  1706  00708C  0100               	movlb	0	; () banked
  1707  00708E  6FD7               	movwf	(_M+1)& (0+255),b
  1708  007090  0ED0               	movlw	208
  1709  007092  D022               	goto	L8
  1710  007094                     l3146:
  1711                           
  1712                           ; BSR set to: 0
  1713  007094  0E0B               	movlw	11
  1714  007096  0100               	movlb	0	; () banked
  1715  007098  6FD7               	movwf	(_M+1)& (0+255),b
  1716  00709A  0EB8               	movlw	184
  1717  00709C  D01D               	goto	L8
  1718  00709E                     l3148:
  1719                           
  1720                           ; BSR set to: 0
  1721  00709E  0E0F               	movlw	15
  1722  0070A0  0100               	movlb	0	; () banked
  1723  0070A2  6FD7               	movwf	(_M+1)& (0+255),b
  1724  0070A4  0EA0               	movlw	160
  1725  0070A6  D018               	goto	L8
  1726  0070A8                     l3150:
  1727                           
  1728                           ; BSR set to: 0
  1729  0070A8  0E13               	movlw	19
  1730  0070AA  0100               	movlb	0	; () banked
  1731  0070AC  6FD7               	movwf	(_M+1)& (0+255),b
  1732  0070AE  0E88               	movlw	136
  1733  0070B0  D013               	goto	L8
  1734  0070B2                     l3152:
  1735                           
  1736                           ; BSR set to: 0
  1737  0070B2  0E17               	movlw	23
  1738  0070B4  0100               	movlb	0	; () banked
  1739  0070B6  6FD7               	movwf	(_M+1)& (0+255),b
  1740  0070B8  0E70               	movlw	112
  1741  0070BA  D00E               	goto	L8
  1742  0070BC                     l3154:
  1743                           
  1744                           ; BSR set to: 0
  1745  0070BC  0E1B               	movlw	27
  1746  0070BE  0100               	movlb	0	; () banked
  1747  0070C0  6FD7               	movwf	(_M+1)& (0+255),b
  1748  0070C2  0E58               	movlw	88
  1749  0070C4  D009               	goto	L8
  1750  0070C6                     l3156:
  1751                           
  1752                           ; BSR set to: 0
  1753  0070C6  0E1F               	movlw	31
  1754  0070C8  0100               	movlb	0	; () banked
  1755  0070CA  6FD7               	movwf	(_M+1)& (0+255),b
  1756  0070CC  0E40               	movlw	64
  1757  0070CE  D004               	goto	L8
  1758  0070D0                     l3158:
  1759                           
  1760                           ; BSR set to: 0
  1761  0070D0  0E23               	movlw	35
  1762  0070D2  0100               	movlb	0	; () banked
  1763  0070D4  6FD7               	movwf	(_M+1)& (0+255),b
  1764  0070D6  0E28               	movlw	40
  1765  0070D8                     L8:
  1766  0070D8  0100               	movlb	0	; () banked
  1767  0070DA  6FD6               	movwf	_M& (0+255),b
  1768                           
  1769                           ;main.c: 147: break;
  1770  0070DC  D01D               	goto	l3164
  1771  0070DE                     l3162:
  1772  0070DE  0100               	movlb	0	; () banked
  1773  0070E0  51D3               	movf	main@A& (0+255),w,b
  1774                           
  1775                           ; Switch size 1, requested type "space"
  1776                           ; Number of cases is 9, Range of values is 49 to 57
  1777                           ; switch strategies available:
  1778                           ; Name         Instructions Cycles
  1779                           ; simple_byte           28    15 (average)
  1780                           ;	Chosen strategy is simple_byte
  1781  0070E2  0A31               	xorlw	49	; case 49
  1782  0070E4  B4D8               	btfsc	status,2,c
  1783  0070E6  D7CC               	goto	l3142
  1784  0070E8  0A03               	xorlw	3	; case 50
  1785  0070EA  B4D8               	btfsc	status,2,c
  1786  0070EC  D7CE               	goto	l3144
  1787  0070EE  0A01               	xorlw	1	; case 51
  1788  0070F0  B4D8               	btfsc	status,2,c
  1789  0070F2  D7D0               	goto	l3146
  1790  0070F4  0A07               	xorlw	7	; case 52
  1791  0070F6  B4D8               	btfsc	status,2,c
  1792  0070F8  D7D2               	goto	l3148
  1793  0070FA  0A01               	xorlw	1	; case 53
  1794  0070FC  B4D8               	btfsc	status,2,c
  1795  0070FE  D7D4               	goto	l3150
  1796  007100  0A03               	xorlw	3	; case 54
  1797  007102  B4D8               	btfsc	status,2,c
  1798  007104  D7D6               	goto	l3152
  1799  007106  0A01               	xorlw	1	; case 55
  1800  007108  B4D8               	btfsc	status,2,c
  1801  00710A  D7D8               	goto	l3154
  1802  00710C  0A0F               	xorlw	15	; case 56
  1803  00710E  B4D8               	btfsc	status,2,c
  1804  007110  D7DA               	goto	l3156
  1805  007112  0A01               	xorlw	1	; case 57
  1806  007114  B4D8               	btfsc	status,2,c
  1807  007116  D7DC               	goto	l3158
  1808  007118                     l3164:
  1809                           
  1810                           ;main.c: 149: }
  1811                           ;main.c: 150: if(A>57){
  1812  007118  0E39               	movlw	57
  1813  00711A  0100               	movlb	0	; () banked
  1814  00711C  65D3               	cpfsgt	main@A& (0+255),b
  1815  00711E  D003               	goto	l3168
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;main.c: 151: A=47;
  1819  007120  0E2F               	movlw	47
  1820  007122  0100               	movlb	0	; () banked
  1821  007124  6FD3               	movwf	main@A& (0+255),b
  1822  007126                     l3168:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main.c: 152: }
  1826                           ;main.c: 153: if(PORTAbits.RA1==1){
  1827  007126  A280               	btfss	3968,1,c	;volatile
  1828  007128  D006               	goto	l3172
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;main.c: 154: r=1;
  1832  00712A  0E00               	movlw	0
  1833  00712C  0100               	movlb	0	; () banked
  1834  00712E  6FDF               	movwf	(_r+1)& (0+255),b
  1835  007130  0E01               	movlw	1
  1836  007132  0100               	movlb	0	; () banked
  1837  007134  6FDE               	movwf	_r& (0+255),b
  1838  007136                     l3172:
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;main.c: 155: }
  1842                           ;main.c: 157: }while(r==0);
  1843  007136  0100               	movlb	0	; () banked
  1844  007138  51DF               	movf	(_r+1)& (0+255),w,b
  1845  00713A  11DE               	iorwf	_r& (0+255),w,b
  1846  00713C  B4D8               	btfsc	status,2,c
  1847  00713E  D778               	goto	l3122
  1848  007140                     l3174:
  1849                           
  1850                           ;main.c: 159: }
  1851                           ;main.c: 160: }
  1852                           ;main.c: 162: if(B==2){
  1853  007140  0100               	movlb	0	; () banked
  1854  007142  51D4               	movf	_B& (0+255),w,b
  1855  007144  0A02               	xorlw	2
  1856  007146  11D5               	iorwf	(_B+1)& (0+255),w,b
  1857  007148  A4D8               	btfss	status,2,c
  1858  00714A  D307               	goto	l151
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;main.c: 163: Lcd_Init();
  1862  00714C  EC7D  F032         	call	_Lcd_Init	;wreg free
  1863                           
  1864                           ;main.c: 164: Lcd_Cmd(1);
  1865  007150  0E01               	movlw	1
  1866  007152  ECEA  F031         	call	_Lcd_Cmd
  1867                           
  1868                           ;main.c: 165: Lcd_Cmd(12);
  1869  007156  0E0C               	movlw	12
  1870  007158  ECEA  F031         	call	_Lcd_Cmd
  1871                           
  1872                           ;main.c: 166: Lcd_Out2(1,1,"   Frecuencia");
  1873  00715C  0E01               	movlw	1
  1874  00715E  6E04               	movwf	Lcd_Out2@x,c
  1875  007160  0E7E               	movlw	high STR_9
  1876  007162  6E06               	movwf	Lcd_Out2@buffer+1,c
  1877  007164  0E83               	movlw	low STR_9
  1878  007166  6E05               	movwf	Lcd_Out2@buffer,c
  1879  007168  0E01               	movlw	1
  1880  00716A  ECAC  F02D         	call	_Lcd_Out2
  1881                           
  1882                           ;main.c: 167: Lcd_Out2(2,1,"=> Ciclo");
  1883  00716E  0E01               	movlw	1
  1884  007170  6E04               	movwf	Lcd_Out2@x,c
  1885  007172  0E7F               	movlw	high STR_15
  1886  007174  6E06               	movwf	Lcd_Out2@buffer+1,c
  1887  007176  0E73               	movlw	low STR_15
  1888  007178  6E05               	movwf	Lcd_Out2@buffer,c
  1889  00717A  0E02               	movlw	2
  1890  00717C  ECAC  F02D         	call	_Lcd_Out2
  1891                           
  1892                           ;main.c: 168: tm_1s();
  1893  007180  EC21  F02E         	call	_tm_1s	;wreg free
  1894                           
  1895                           ;main.c: 170: if(PORTAbits.RA2==1){
  1896  007184  A480               	btfss	3968,2,c	;volatile
  1897  007186  D2E9               	goto	l151
  1898  007188                     l3186:
  1899                           
  1900                           ;main.c: 173: t=0;
  1901  007188  0E00               	movlw	0
  1902  00718A  0100               	movlb	0	; () banked
  1903  00718C  6FE1               	movwf	(_t+1)& (0+255),b
  1904  00718E  0E00               	movlw	0
  1905  007190  0100               	movlb	0	; () banked
  1906  007192  6FE0               	movwf	_t& (0+255),b
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;main.c: 176: if(B==1){
  1910  007194  0100               	movlb	0	; () banked
  1911  007196  05D4               	decf	_B& (0+255),w,b
  1912  007198  11D5               	iorwf	(_B+1)& (0+255),w,b
  1913  00719A  A4D8               	btfss	status,2,c
  1914  00719C  D046               	goto	l3208
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main.c: 177: Lcd_Init();
  1918  00719E  EC7D  F032         	call	_Lcd_Init	;wreg free
  1919                           
  1920                           ;main.c: 178: Lcd_Cmd(1);
  1921  0071A2  0E01               	movlw	1
  1922  0071A4  ECEA  F031         	call	_Lcd_Cmd
  1923                           
  1924                           ;main.c: 179: Lcd_Cmd(12);
  1925  0071A8  0E0C               	movlw	12
  1926  0071AA  ECEA  F031         	call	_Lcd_Cmd
  1927                           
  1928                           ;main.c: 180: Lcd_Out2(1,0,"*10%");
  1929  0071AE  0E00               	movlw	0
  1930  0071B0  6E04               	movwf	Lcd_Out2@x,c
  1931  0071B2  0E7F               	movlw	high STR_16
  1932  0071B4  6E06               	movwf	Lcd_Out2@buffer+1,c
  1933  0071B6  0EAA               	movlw	low STR_16
  1934  0071B8  6E05               	movwf	Lcd_Out2@buffer,c
  1935  0071BA  0E01               	movlw	1
  1936  0071BC  ECAC  F02D         	call	_Lcd_Out2
  1937                           
  1938                           ;main.c: 181: Lcd_Out2(2,0," 20%");
  1939  0071C0  0E00               	movlw	0
  1940  0071C2  6E04               	movwf	Lcd_Out2@x,c
  1941  0071C4  0E7F               	movlw	high STR_17
  1942  0071C6  6E06               	movwf	Lcd_Out2@buffer+1,c
  1943  0071C8  0EAF               	movlw	low STR_17
  1944  0071CA  6E05               	movwf	Lcd_Out2@buffer,c
  1945  0071CC  0E02               	movlw	2
  1946  0071CE  ECAC  F02D         	call	_Lcd_Out2
  1947                           
  1948                           ;main.c: 182: Lcd_Out2(1,5," 30%");
  1949  0071D2  0E05               	movlw	5
  1950  0071D4  6E04               	movwf	Lcd_Out2@x,c
  1951  0071D6  0E7F               	movlw	high STR_18
  1952  0071D8  6E06               	movwf	Lcd_Out2@buffer+1,c
  1953  0071DA  0EB9               	movlw	low STR_18
  1954  0071DC  6E05               	movwf	Lcd_Out2@buffer,c
  1955  0071DE  0E01               	movlw	1
  1956  0071E0  ECAC  F02D         	call	_Lcd_Out2
  1957                           
  1958                           ;main.c: 183: Lcd_Out2(2,5," 40%");
  1959  0071E4  0E05               	movlw	5
  1960  0071E6  6E04               	movwf	Lcd_Out2@x,c
  1961  0071E8  0E7F               	movlw	high STR_19
  1962  0071EA  6E06               	movwf	Lcd_Out2@buffer+1,c
  1963  0071EC  0EC3               	movlw	low STR_19
  1964  0071EE  6E05               	movwf	Lcd_Out2@buffer,c
  1965  0071F0  0E02               	movlw	2
  1966  0071F2  ECAC  F02D         	call	_Lcd_Out2
  1967                           
  1968                           ;main.c: 184: Lcd_Out2(1,10," 50%");
  1969  0071F6  0E0A               	movlw	10
  1970  0071F8  6E04               	movwf	Lcd_Out2@x,c
  1971  0071FA  0E7F               	movlw	high STR_20
  1972  0071FC  6E06               	movwf	Lcd_Out2@buffer+1,c
  1973  0071FE  0ECD               	movlw	low STR_20
  1974  007200  6E05               	movwf	Lcd_Out2@buffer,c
  1975  007202  0E01               	movlw	1
  1976  007204  ECAC  F02D         	call	_Lcd_Out2
  1977                           
  1978                           ;main.c: 185: Lcd_Out2(2,10," 60%");
  1979  007208  0E0A               	movlw	10
  1980  00720A  6E04               	movwf	Lcd_Out2@x,c
  1981  00720C  0E7F               	movlw	high STR_21
  1982  00720E  6E06               	movwf	Lcd_Out2@buffer+1,c
  1983  007210  0ED7               	movlw	low STR_21
  1984  007212  6E05               	movwf	Lcd_Out2@buffer,c
  1985  007214  0E02               	movlw	2
  1986  007216  ECAC  F02D         	call	_Lcd_Out2
  1987                           
  1988                           ;main.c: 186: tm_1s();
  1989  00721A  EC21  F02E         	call	_tm_1s	;wreg free
  1990                           
  1991                           ;main.c: 187: Z=10;
  1992  00721E  0E00               	movlw	0
  1993  007220  0100               	movlb	0	; () banked
  1994  007222  6FD2               	movwf	(main@Z+1)& (0+255),b
  1995  007224  0E0A               	movlw	10
  1996  007226  0100               	movlb	0	; () banked
  1997  007228  6FD1               	movwf	main@Z& (0+255),b
  1998  00722A                     l3208:
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;main.c: 189: }
  2002                           ;main.c: 190: if(B==2){
  2003  00722A  0100               	movlb	0	; () banked
  2004  00722C  51D4               	movf	_B& (0+255),w,b
  2005  00722E  0A02               	xorlw	2
  2006  007230  11D5               	iorwf	(_B+1)& (0+255),w,b
  2007  007232  A4D8               	btfss	status,2,c
  2008  007234  D046               	goto	l3228
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;main.c: 191: Lcd_Init();
  2012  007236  EC7D  F032         	call	_Lcd_Init	;wreg free
  2013                           
  2014                           ;main.c: 192: Lcd_Cmd(1);
  2015  00723A  0E01               	movlw	1
  2016  00723C  ECEA  F031         	call	_Lcd_Cmd
  2017                           
  2018                           ;main.c: 193: Lcd_Cmd(12);
  2019  007240  0E0C               	movlw	12
  2020  007242  ECEA  F031         	call	_Lcd_Cmd
  2021                           
  2022                           ;main.c: 194: Lcd_Out2(1,0," 10%");
  2023  007246  0E00               	movlw	0
  2024  007248  6E04               	movwf	Lcd_Out2@x,c
  2025  00724A  0E7F               	movlw	high STR_22
  2026  00724C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2027  00724E  0EA5               	movlw	low STR_22
  2028  007250  6E05               	movwf	Lcd_Out2@buffer,c
  2029  007252  0E01               	movlw	1
  2030  007254  ECAC  F02D         	call	_Lcd_Out2
  2031                           
  2032                           ;main.c: 195: Lcd_Out2(2,0,"*20%");
  2033  007258  0E00               	movlw	0
  2034  00725A  6E04               	movwf	Lcd_Out2@x,c
  2035  00725C  0E7F               	movlw	high STR_23
  2036  00725E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2037  007260  0EB4               	movlw	low STR_23
  2038  007262  6E05               	movwf	Lcd_Out2@buffer,c
  2039  007264  0E02               	movlw	2
  2040  007266  ECAC  F02D         	call	_Lcd_Out2
  2041                           
  2042                           ;main.c: 196: Lcd_Out2(1,5," 30%");
  2043  00726A  0E05               	movlw	5
  2044  00726C  6E04               	movwf	Lcd_Out2@x,c
  2045  00726E  0E7F               	movlw	high STR_18
  2046  007270  6E06               	movwf	Lcd_Out2@buffer+1,c
  2047  007272  0EB9               	movlw	low STR_18
  2048  007274  6E05               	movwf	Lcd_Out2@buffer,c
  2049  007276  0E01               	movlw	1
  2050  007278  ECAC  F02D         	call	_Lcd_Out2
  2051                           
  2052                           ;main.c: 197: Lcd_Out2(2,5," 40%");
  2053  00727C  0E05               	movlw	5
  2054  00727E  6E04               	movwf	Lcd_Out2@x,c
  2055  007280  0E7F               	movlw	high STR_19
  2056  007282  6E06               	movwf	Lcd_Out2@buffer+1,c
  2057  007284  0EC3               	movlw	low STR_19
  2058  007286  6E05               	movwf	Lcd_Out2@buffer,c
  2059  007288  0E02               	movlw	2
  2060  00728A  ECAC  F02D         	call	_Lcd_Out2
  2061                           
  2062                           ;main.c: 198: Lcd_Out2(1,10," 50%");
  2063  00728E  0E0A               	movlw	10
  2064  007290  6E04               	movwf	Lcd_Out2@x,c
  2065  007292  0E7F               	movlw	high STR_20
  2066  007294  6E06               	movwf	Lcd_Out2@buffer+1,c
  2067  007296  0ECD               	movlw	low STR_20
  2068  007298  6E05               	movwf	Lcd_Out2@buffer,c
  2069  00729A  0E01               	movlw	1
  2070  00729C  ECAC  F02D         	call	_Lcd_Out2
  2071                           
  2072                           ;main.c: 199: Lcd_Out2(2,10," 60%");
  2073  0072A0  0E0A               	movlw	10
  2074  0072A2  6E04               	movwf	Lcd_Out2@x,c
  2075  0072A4  0E7F               	movlw	high STR_21
  2076  0072A6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2077  0072A8  0ED7               	movlw	low STR_21
  2078  0072AA  6E05               	movwf	Lcd_Out2@buffer,c
  2079  0072AC  0E02               	movlw	2
  2080  0072AE  ECAC  F02D         	call	_Lcd_Out2
  2081                           
  2082                           ;main.c: 200: tm_1s();
  2083  0072B2  EC21  F02E         	call	_tm_1s	;wreg free
  2084                           
  2085                           ;main.c: 201: Z=20;
  2086  0072B6  0E00               	movlw	0
  2087  0072B8  0100               	movlb	0	; () banked
  2088  0072BA  6FD2               	movwf	(main@Z+1)& (0+255),b
  2089  0072BC  0E14               	movlw	20
  2090  0072BE  0100               	movlb	0	; () banked
  2091  0072C0  6FD1               	movwf	main@Z& (0+255),b
  2092  0072C2                     l3228:
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;main.c: 203: }
  2096                           ;main.c: 204: if(B==3){
  2097  0072C2  0100               	movlb	0	; () banked
  2098  0072C4  51D4               	movf	_B& (0+255),w,b
  2099  0072C6  0A03               	xorlw	3
  2100  0072C8  11D5               	iorwf	(_B+1)& (0+255),w,b
  2101  0072CA  A4D8               	btfss	status,2,c
  2102  0072CC  D046               	goto	l3248
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;main.c: 205: Lcd_Init();
  2106  0072CE  EC7D  F032         	call	_Lcd_Init	;wreg free
  2107                           
  2108                           ;main.c: 206: Lcd_Cmd(1);
  2109  0072D2  0E01               	movlw	1
  2110  0072D4  ECEA  F031         	call	_Lcd_Cmd
  2111                           
  2112                           ;main.c: 207: Lcd_Cmd(12);
  2113  0072D8  0E0C               	movlw	12
  2114  0072DA  ECEA  F031         	call	_Lcd_Cmd
  2115                           
  2116                           ;main.c: 208: Lcd_Out2(1,0," 10%");
  2117  0072DE  0E00               	movlw	0
  2118  0072E0  6E04               	movwf	Lcd_Out2@x,c
  2119  0072E2  0E7F               	movlw	high STR_22
  2120  0072E4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2121  0072E6  0EA5               	movlw	low STR_22
  2122  0072E8  6E05               	movwf	Lcd_Out2@buffer,c
  2123  0072EA  0E01               	movlw	1
  2124  0072EC  ECAC  F02D         	call	_Lcd_Out2
  2125                           
  2126                           ;main.c: 209: Lcd_Out2(2,0," 20%");
  2127  0072F0  0E00               	movlw	0
  2128  0072F2  6E04               	movwf	Lcd_Out2@x,c
  2129  0072F4  0E7F               	movlw	high STR_17
  2130  0072F6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2131  0072F8  0EAF               	movlw	low STR_17
  2132  0072FA  6E05               	movwf	Lcd_Out2@buffer,c
  2133  0072FC  0E02               	movlw	2
  2134  0072FE  ECAC  F02D         	call	_Lcd_Out2
  2135                           
  2136                           ;main.c: 210: Lcd_Out2(1,5,"*30%");
  2137  007302  0E05               	movlw	5
  2138  007304  6E04               	movwf	Lcd_Out2@x,c
  2139  007306  0E7F               	movlw	high STR_30
  2140  007308  6E06               	movwf	Lcd_Out2@buffer+1,c
  2141  00730A  0EBE               	movlw	low STR_30
  2142  00730C  6E05               	movwf	Lcd_Out2@buffer,c
  2143  00730E  0E01               	movlw	1
  2144  007310  ECAC  F02D         	call	_Lcd_Out2
  2145                           
  2146                           ;main.c: 211: Lcd_Out2(2,5," 40%");
  2147  007314  0E05               	movlw	5
  2148  007316  6E04               	movwf	Lcd_Out2@x,c
  2149  007318  0E7F               	movlw	high STR_19
  2150  00731A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2151  00731C  0EC3               	movlw	low STR_19
  2152  00731E  6E05               	movwf	Lcd_Out2@buffer,c
  2153  007320  0E02               	movlw	2
  2154  007322  ECAC  F02D         	call	_Lcd_Out2
  2155                           
  2156                           ;main.c: 212: Lcd_Out2(1,10," 50%");
  2157  007326  0E0A               	movlw	10
  2158  007328  6E04               	movwf	Lcd_Out2@x,c
  2159  00732A  0E7F               	movlw	high STR_20
  2160  00732C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2161  00732E  0ECD               	movlw	low STR_20
  2162  007330  6E05               	movwf	Lcd_Out2@buffer,c
  2163  007332  0E01               	movlw	1
  2164  007334  ECAC  F02D         	call	_Lcd_Out2
  2165                           
  2166                           ;main.c: 213: Lcd_Out2(2,10," 60%");
  2167  007338  0E0A               	movlw	10
  2168  00733A  6E04               	movwf	Lcd_Out2@x,c
  2169  00733C  0E7F               	movlw	high STR_21
  2170  00733E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2171  007340  0ED7               	movlw	low STR_21
  2172  007342  6E05               	movwf	Lcd_Out2@buffer,c
  2173  007344  0E02               	movlw	2
  2174  007346  ECAC  F02D         	call	_Lcd_Out2
  2175                           
  2176                           ;main.c: 214: tm_1s();
  2177  00734A  EC21  F02E         	call	_tm_1s	;wreg free
  2178                           
  2179                           ;main.c: 215: Z=30;
  2180  00734E  0E00               	movlw	0
  2181  007350  0100               	movlb	0	; () banked
  2182  007352  6FD2               	movwf	(main@Z+1)& (0+255),b
  2183  007354  0E1E               	movlw	30
  2184  007356  0100               	movlb	0	; () banked
  2185  007358  6FD1               	movwf	main@Z& (0+255),b
  2186  00735A                     l3248:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;main.c: 218: }
  2190                           ;main.c: 219: if(B==4){
  2191  00735A  0100               	movlb	0	; () banked
  2192  00735C  51D4               	movf	_B& (0+255),w,b
  2193  00735E  0A04               	xorlw	4
  2194  007360  11D5               	iorwf	(_B+1)& (0+255),w,b
  2195  007362  A4D8               	btfss	status,2,c
  2196  007364  D046               	goto	l3268
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;main.c: 220: Lcd_Init();
  2200  007366  EC7D  F032         	call	_Lcd_Init	;wreg free
  2201                           
  2202                           ;main.c: 221: Lcd_Cmd(1);
  2203  00736A  0E01               	movlw	1
  2204  00736C  ECEA  F031         	call	_Lcd_Cmd
  2205                           
  2206                           ;main.c: 222: Lcd_Cmd(12);
  2207  007370  0E0C               	movlw	12
  2208  007372  ECEA  F031         	call	_Lcd_Cmd
  2209                           
  2210                           ;main.c: 223: Lcd_Out2(1,0," 10%");
  2211  007376  0E00               	movlw	0
  2212  007378  6E04               	movwf	Lcd_Out2@x,c
  2213  00737A  0E7F               	movlw	high STR_22
  2214  00737C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2215  00737E  0EA5               	movlw	low STR_22
  2216  007380  6E05               	movwf	Lcd_Out2@buffer,c
  2217  007382  0E01               	movlw	1
  2218  007384  ECAC  F02D         	call	_Lcd_Out2
  2219                           
  2220                           ;main.c: 224: Lcd_Out2(2,0," 20%");
  2221  007388  0E00               	movlw	0
  2222  00738A  6E04               	movwf	Lcd_Out2@x,c
  2223  00738C  0E7F               	movlw	high STR_17
  2224  00738E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2225  007390  0EAF               	movlw	low STR_17
  2226  007392  6E05               	movwf	Lcd_Out2@buffer,c
  2227  007394  0E02               	movlw	2
  2228  007396  ECAC  F02D         	call	_Lcd_Out2
  2229                           
  2230                           ;main.c: 225: Lcd_Out2(1,5," 30%");
  2231  00739A  0E05               	movlw	5
  2232  00739C  6E04               	movwf	Lcd_Out2@x,c
  2233  00739E  0E7F               	movlw	high STR_18
  2234  0073A0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2235  0073A2  0EB9               	movlw	low STR_18
  2236  0073A4  6E05               	movwf	Lcd_Out2@buffer,c
  2237  0073A6  0E01               	movlw	1
  2238  0073A8  ECAC  F02D         	call	_Lcd_Out2
  2239                           
  2240                           ;main.c: 226: Lcd_Out2(2,5,"*40%");
  2241  0073AC  0E05               	movlw	5
  2242  0073AE  6E04               	movwf	Lcd_Out2@x,c
  2243  0073B0  0E7F               	movlw	high STR_37
  2244  0073B2  6E06               	movwf	Lcd_Out2@buffer+1,c
  2245  0073B4  0EC8               	movlw	low STR_37
  2246  0073B6  6E05               	movwf	Lcd_Out2@buffer,c
  2247  0073B8  0E02               	movlw	2
  2248  0073BA  ECAC  F02D         	call	_Lcd_Out2
  2249                           
  2250                           ;main.c: 227: Lcd_Out2(1,10," 50%");
  2251  0073BE  0E0A               	movlw	10
  2252  0073C0  6E04               	movwf	Lcd_Out2@x,c
  2253  0073C2  0E7F               	movlw	high STR_20
  2254  0073C4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2255  0073C6  0ECD               	movlw	low STR_20
  2256  0073C8  6E05               	movwf	Lcd_Out2@buffer,c
  2257  0073CA  0E01               	movlw	1
  2258  0073CC  ECAC  F02D         	call	_Lcd_Out2
  2259                           
  2260                           ;main.c: 228: Lcd_Out2(2,10," 60%");
  2261  0073D0  0E0A               	movlw	10
  2262  0073D2  6E04               	movwf	Lcd_Out2@x,c
  2263  0073D4  0E7F               	movlw	high STR_21
  2264  0073D6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2265  0073D8  0ED7               	movlw	low STR_21
  2266  0073DA  6E05               	movwf	Lcd_Out2@buffer,c
  2267  0073DC  0E02               	movlw	2
  2268  0073DE  ECAC  F02D         	call	_Lcd_Out2
  2269                           
  2270                           ;main.c: 229: tm_1s();
  2271  0073E2  EC21  F02E         	call	_tm_1s	;wreg free
  2272                           
  2273                           ;main.c: 230: Z=40;
  2274  0073E6  0E00               	movlw	0
  2275  0073E8  0100               	movlb	0	; () banked
  2276  0073EA  6FD2               	movwf	(main@Z+1)& (0+255),b
  2277  0073EC  0E28               	movlw	40
  2278  0073EE  0100               	movlb	0	; () banked
  2279  0073F0  6FD1               	movwf	main@Z& (0+255),b
  2280  0073F2                     l3268:
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;main.c: 233: }
  2284                           ;main.c: 234: if(B==5){
  2285  0073F2  0100               	movlb	0	; () banked
  2286  0073F4  51D4               	movf	_B& (0+255),w,b
  2287  0073F6  0A05               	xorlw	5
  2288  0073F8  11D5               	iorwf	(_B+1)& (0+255),w,b
  2289  0073FA  A4D8               	btfss	status,2,c
  2290  0073FC  D046               	goto	l3288
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;main.c: 235: Lcd_Init();
  2294  0073FE  EC7D  F032         	call	_Lcd_Init	;wreg free
  2295                           
  2296                           ;main.c: 236: Lcd_Cmd(1);
  2297  007402  0E01               	movlw	1
  2298  007404  ECEA  F031         	call	_Lcd_Cmd
  2299                           
  2300                           ;main.c: 237: Lcd_Cmd(12);
  2301  007408  0E0C               	movlw	12
  2302  00740A  ECEA  F031         	call	_Lcd_Cmd
  2303                           
  2304                           ;main.c: 238: Lcd_Out2(1,0," 10%");
  2305  00740E  0E00               	movlw	0
  2306  007410  6E04               	movwf	Lcd_Out2@x,c
  2307  007412  0E7F               	movlw	high STR_22
  2308  007414  6E06               	movwf	Lcd_Out2@buffer+1,c
  2309  007416  0EA5               	movlw	low STR_22
  2310  007418  6E05               	movwf	Lcd_Out2@buffer,c
  2311  00741A  0E01               	movlw	1
  2312  00741C  ECAC  F02D         	call	_Lcd_Out2
  2313                           
  2314                           ;main.c: 239: Lcd_Out2(2,0," 20%");
  2315  007420  0E00               	movlw	0
  2316  007422  6E04               	movwf	Lcd_Out2@x,c
  2317  007424  0E7F               	movlw	high STR_17
  2318  007426  6E06               	movwf	Lcd_Out2@buffer+1,c
  2319  007428  0EAF               	movlw	low STR_17
  2320  00742A  6E05               	movwf	Lcd_Out2@buffer,c
  2321  00742C  0E02               	movlw	2
  2322  00742E  ECAC  F02D         	call	_Lcd_Out2
  2323                           
  2324                           ;main.c: 240: Lcd_Out2(1,5," 30%");
  2325  007432  0E05               	movlw	5
  2326  007434  6E04               	movwf	Lcd_Out2@x,c
  2327  007436  0E7F               	movlw	high STR_18
  2328  007438  6E06               	movwf	Lcd_Out2@buffer+1,c
  2329  00743A  0EB9               	movlw	low STR_18
  2330  00743C  6E05               	movwf	Lcd_Out2@buffer,c
  2331  00743E  0E01               	movlw	1
  2332  007440  ECAC  F02D         	call	_Lcd_Out2
  2333                           
  2334                           ;main.c: 241: Lcd_Out2(2,5," 40%");
  2335  007444  0E05               	movlw	5
  2336  007446  6E04               	movwf	Lcd_Out2@x,c
  2337  007448  0E7F               	movlw	high STR_19
  2338  00744A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2339  00744C  0EC3               	movlw	low STR_19
  2340  00744E  6E05               	movwf	Lcd_Out2@buffer,c
  2341  007450  0E02               	movlw	2
  2342  007452  ECAC  F02D         	call	_Lcd_Out2
  2343                           
  2344                           ;main.c: 242: Lcd_Out2(1,10,"*50%");
  2345  007456  0E0A               	movlw	10
  2346  007458  6E04               	movwf	Lcd_Out2@x,c
  2347  00745A  0E7F               	movlw	high STR_44
  2348  00745C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2349  00745E  0ED2               	movlw	low STR_44
  2350  007460  6E05               	movwf	Lcd_Out2@buffer,c
  2351  007462  0E01               	movlw	1
  2352  007464  ECAC  F02D         	call	_Lcd_Out2
  2353                           
  2354                           ;main.c: 243: Lcd_Out2(2,10," 60%");
  2355  007468  0E0A               	movlw	10
  2356  00746A  6E04               	movwf	Lcd_Out2@x,c
  2357  00746C  0E7F               	movlw	high STR_21
  2358  00746E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2359  007470  0ED7               	movlw	low STR_21
  2360  007472  6E05               	movwf	Lcd_Out2@buffer,c
  2361  007474  0E02               	movlw	2
  2362  007476  ECAC  F02D         	call	_Lcd_Out2
  2363                           
  2364                           ;main.c: 244: tm_1s();
  2365  00747A  EC21  F02E         	call	_tm_1s	;wreg free
  2366                           
  2367                           ;main.c: 245: Z=50;
  2368  00747E  0E00               	movlw	0
  2369  007480  0100               	movlb	0	; () banked
  2370  007482  6FD2               	movwf	(main@Z+1)& (0+255),b
  2371  007484  0E32               	movlw	50
  2372  007486  0100               	movlb	0	; () banked
  2373  007488  6FD1               	movwf	main@Z& (0+255),b
  2374  00748A                     l3288:
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;main.c: 248: }
  2378                           ;main.c: 249: if(B==6){
  2379  00748A  0100               	movlb	0	; () banked
  2380  00748C  51D4               	movf	_B& (0+255),w,b
  2381  00748E  0A06               	xorlw	6
  2382  007490  11D5               	iorwf	(_B+1)& (0+255),w,b
  2383  007492  A4D8               	btfss	status,2,c
  2384  007494  D046               	goto	l3308
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;main.c: 250: Lcd_Init();
  2388  007496  EC7D  F032         	call	_Lcd_Init	;wreg free
  2389                           
  2390                           ;main.c: 251: Lcd_Cmd(1);
  2391  00749A  0E01               	movlw	1
  2392  00749C  ECEA  F031         	call	_Lcd_Cmd
  2393                           
  2394                           ;main.c: 252: Lcd_Cmd(12);
  2395  0074A0  0E0C               	movlw	12
  2396  0074A2  ECEA  F031         	call	_Lcd_Cmd
  2397                           
  2398                           ;main.c: 253: Lcd_Out2(1,0," 10%");
  2399  0074A6  0E00               	movlw	0
  2400  0074A8  6E04               	movwf	Lcd_Out2@x,c
  2401  0074AA  0E7F               	movlw	high STR_22
  2402  0074AC  6E06               	movwf	Lcd_Out2@buffer+1,c
  2403  0074AE  0EA5               	movlw	low STR_22
  2404  0074B0  6E05               	movwf	Lcd_Out2@buffer,c
  2405  0074B2  0E01               	movlw	1
  2406  0074B4  ECAC  F02D         	call	_Lcd_Out2
  2407                           
  2408                           ;main.c: 254: Lcd_Out2(2,0," 20%");
  2409  0074B8  0E00               	movlw	0
  2410  0074BA  6E04               	movwf	Lcd_Out2@x,c
  2411  0074BC  0E7F               	movlw	high STR_17
  2412  0074BE  6E06               	movwf	Lcd_Out2@buffer+1,c
  2413  0074C0  0EAF               	movlw	low STR_17
  2414  0074C2  6E05               	movwf	Lcd_Out2@buffer,c
  2415  0074C4  0E02               	movlw	2
  2416  0074C6  ECAC  F02D         	call	_Lcd_Out2
  2417                           
  2418                           ;main.c: 255: Lcd_Out2(1,5," 30%");
  2419  0074CA  0E05               	movlw	5
  2420  0074CC  6E04               	movwf	Lcd_Out2@x,c
  2421  0074CE  0E7F               	movlw	high STR_18
  2422  0074D0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2423  0074D2  0EB9               	movlw	low STR_18
  2424  0074D4  6E05               	movwf	Lcd_Out2@buffer,c
  2425  0074D6  0E01               	movlw	1
  2426  0074D8  ECAC  F02D         	call	_Lcd_Out2
  2427                           
  2428                           ;main.c: 256: Lcd_Out2(2,5," 40%");
  2429  0074DC  0E05               	movlw	5
  2430  0074DE  6E04               	movwf	Lcd_Out2@x,c
  2431  0074E0  0E7F               	movlw	high STR_19
  2432  0074E2  6E06               	movwf	Lcd_Out2@buffer+1,c
  2433  0074E4  0EC3               	movlw	low STR_19
  2434  0074E6  6E05               	movwf	Lcd_Out2@buffer,c
  2435  0074E8  0E02               	movlw	2
  2436  0074EA  ECAC  F02D         	call	_Lcd_Out2
  2437                           
  2438                           ;main.c: 257: Lcd_Out2(1,10," 50%");
  2439  0074EE  0E0A               	movlw	10
  2440  0074F0  6E04               	movwf	Lcd_Out2@x,c
  2441  0074F2  0E7F               	movlw	high STR_20
  2442  0074F4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2443  0074F6  0ECD               	movlw	low STR_20
  2444  0074F8  6E05               	movwf	Lcd_Out2@buffer,c
  2445  0074FA  0E01               	movlw	1
  2446  0074FC  ECAC  F02D         	call	_Lcd_Out2
  2447                           
  2448                           ;main.c: 258: Lcd_Out2(2,10,"*60%");
  2449  007500  0E0A               	movlw	10
  2450  007502  6E04               	movwf	Lcd_Out2@x,c
  2451  007504  0E7F               	movlw	high STR_51
  2452  007506  6E06               	movwf	Lcd_Out2@buffer+1,c
  2453  007508  0EDC               	movlw	low STR_51
  2454  00750A  6E05               	movwf	Lcd_Out2@buffer,c
  2455  00750C  0E02               	movlw	2
  2456  00750E  ECAC  F02D         	call	_Lcd_Out2
  2457                           
  2458                           ;main.c: 259: tm_1s();
  2459  007512  EC21  F02E         	call	_tm_1s	;wreg free
  2460                           
  2461                           ;main.c: 260: Z=60;
  2462  007516  0E00               	movlw	0
  2463  007518  0100               	movlb	0	; () banked
  2464  00751A  6FD2               	movwf	(main@Z+1)& (0+255),b
  2465  00751C  0E3C               	movlw	60
  2466  00751E  0100               	movlb	0	; () banked
  2467  007520  6FD1               	movwf	main@Z& (0+255),b
  2468  007522                     l3308:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;main.c: 263: }
  2472                           ;main.c: 264: if(B==7){
  2473  007522  0100               	movlb	0	; () banked
  2474  007524  51D4               	movf	_B& (0+255),w,b
  2475  007526  0A07               	xorlw	7
  2476  007528  11D5               	iorwf	(_B+1)& (0+255),w,b
  2477  00752A  A4D8               	btfss	status,2,c
  2478  00752C  D034               	goto	l3324
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;main.c: 267: Lcd_Init();
  2482  00752E  EC7D  F032         	call	_Lcd_Init	;wreg free
  2483                           
  2484                           ;main.c: 268: Lcd_Cmd(1);
  2485  007532  0E01               	movlw	1
  2486  007534  ECEA  F031         	call	_Lcd_Cmd
  2487                           
  2488                           ;main.c: 269: Lcd_Cmd(12);
  2489  007538  0E0C               	movlw	12
  2490  00753A  ECEA  F031         	call	_Lcd_Cmd
  2491                           
  2492                           ;main.c: 270: Lcd_Out2(1,1," *70%");
  2493  00753E  0E01               	movlw	1
  2494  007540  6E04               	movwf	Lcd_Out2@x,c
  2495  007542  0E7F               	movlw	high STR_52
  2496  007544  6E06               	movwf	Lcd_Out2@buffer+1,c
  2497  007546  0E9F               	movlw	low STR_52
  2498  007548  6E05               	movwf	Lcd_Out2@buffer,c
  2499  00754A  0E01               	movlw	1
  2500  00754C  ECAC  F02D         	call	_Lcd_Out2
  2501                           
  2502                           ;main.c: 271: Lcd_Out2(2,1," 80%");
  2503  007550  0E01               	movlw	1
  2504  007552  6E04               	movwf	Lcd_Out2@x,c
  2505  007554  0E7F               	movlw	high STR_53
  2506  007556  6E06               	movwf	Lcd_Out2@buffer+1,c
  2507  007558  0EE6               	movlw	low STR_53
  2508  00755A  6E05               	movwf	Lcd_Out2@buffer,c
  2509  00755C  0E02               	movlw	2
  2510  00755E  ECAC  F02D         	call	_Lcd_Out2
  2511                           
  2512                           ;main.c: 272: Lcd_Out2(1,6," 90%");
  2513  007562  0E06               	movlw	6
  2514  007564  6E04               	movwf	Lcd_Out2@x,c
  2515  007566  0E7F               	movlw	high STR_54
  2516  007568  6E06               	movwf	Lcd_Out2@buffer+1,c
  2517  00756A  0EF0               	movlw	low STR_54
  2518  00756C  6E05               	movwf	Lcd_Out2@buffer,c
  2519  00756E  0E01               	movlw	1
  2520  007570  ECAC  F02D         	call	_Lcd_Out2
  2521                           
  2522                           ;main.c: 273: Lcd_Out2(2,6," 100%");
  2523  007574  0E06               	movlw	6
  2524  007576  6E04               	movwf	Lcd_Out2@x,c
  2525  007578  0E7F               	movlw	high STR_55
  2526  00757A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2527  00757C  0E93               	movlw	low STR_55
  2528  00757E  6E05               	movwf	Lcd_Out2@buffer,c
  2529  007580  0E02               	movlw	2
  2530  007582  ECAC  F02D         	call	_Lcd_Out2
  2531                           
  2532                           ;main.c: 274: tm_1s();
  2533  007586  EC21  F02E         	call	_tm_1s	;wreg free
  2534                           
  2535                           ;main.c: 275: Z=70;
  2536  00758A  0E00               	movlw	0
  2537  00758C  0100               	movlb	0	; () banked
  2538  00758E  6FD2               	movwf	(main@Z+1)& (0+255),b
  2539  007590  0E46               	movlw	70
  2540  007592  0100               	movlb	0	; () banked
  2541  007594  6FD1               	movwf	main@Z& (0+255),b
  2542  007596                     l3324:
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;main.c: 277: }
  2546                           ;main.c: 279: if(B==8){
  2547  007596  0100               	movlb	0	; () banked
  2548  007598  51D4               	movf	_B& (0+255),w,b
  2549  00759A  0A08               	xorlw	8
  2550  00759C  11D5               	iorwf	(_B+1)& (0+255),w,b
  2551  00759E  A4D8               	btfss	status,2,c
  2552  0075A0  D034               	goto	l3340
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;main.c: 283: Lcd_Init();
  2556  0075A2  EC7D  F032         	call	_Lcd_Init	;wreg free
  2557                           
  2558                           ;main.c: 284: Lcd_Cmd(1);
  2559  0075A6  0E01               	movlw	1
  2560  0075A8  ECEA  F031         	call	_Lcd_Cmd
  2561                           
  2562                           ;main.c: 285: Lcd_Cmd(12);
  2563  0075AC  0E0C               	movlw	12
  2564  0075AE  ECEA  F031         	call	_Lcd_Cmd
  2565                           
  2566                           ;main.c: 286: Lcd_Out2(1,1," 70%");
  2567  0075B2  0E01               	movlw	1
  2568  0075B4  6E04               	movwf	Lcd_Out2@x,c
  2569  0075B6  0E7F               	movlw	high STR_56
  2570  0075B8  6E06               	movwf	Lcd_Out2@buffer+1,c
  2571  0075BA  0EE1               	movlw	low STR_56
  2572  0075BC  6E05               	movwf	Lcd_Out2@buffer,c
  2573  0075BE  0E01               	movlw	1
  2574  0075C0  ECAC  F02D         	call	_Lcd_Out2
  2575                           
  2576                           ;main.c: 287: Lcd_Out2(2,1,"*80%");
  2577  0075C4  0E01               	movlw	1
  2578  0075C6  6E04               	movwf	Lcd_Out2@x,c
  2579  0075C8  0E7F               	movlw	high STR_57
  2580  0075CA  6E06               	movwf	Lcd_Out2@buffer+1,c
  2581  0075CC  0EEB               	movlw	low STR_57
  2582  0075CE  6E05               	movwf	Lcd_Out2@buffer,c
  2583  0075D0  0E02               	movlw	2
  2584  0075D2  ECAC  F02D         	call	_Lcd_Out2
  2585                           
  2586                           ;main.c: 288: Lcd_Out2(1,6," 90%");
  2587  0075D6  0E06               	movlw	6
  2588  0075D8  6E04               	movwf	Lcd_Out2@x,c
  2589  0075DA  0E7F               	movlw	high STR_54
  2590  0075DC  6E06               	movwf	Lcd_Out2@buffer+1,c
  2591  0075DE  0EF0               	movlw	low STR_54
  2592  0075E0  6E05               	movwf	Lcd_Out2@buffer,c
  2593  0075E2  0E01               	movlw	1
  2594  0075E4  ECAC  F02D         	call	_Lcd_Out2
  2595                           
  2596                           ;main.c: 289: Lcd_Out2(2,6," 100%");
  2597  0075E8  0E06               	movlw	6
  2598  0075EA  6E04               	movwf	Lcd_Out2@x,c
  2599  0075EC  0E7F               	movlw	high STR_55
  2600  0075EE  6E06               	movwf	Lcd_Out2@buffer+1,c
  2601  0075F0  0E93               	movlw	low STR_55
  2602  0075F2  6E05               	movwf	Lcd_Out2@buffer,c
  2603  0075F4  0E02               	movlw	2
  2604  0075F6  ECAC  F02D         	call	_Lcd_Out2
  2605                           
  2606                           ;main.c: 290: tm_1s();
  2607  0075FA  EC21  F02E         	call	_tm_1s	;wreg free
  2608                           
  2609                           ;main.c: 291: Z=80;
  2610  0075FE  0E00               	movlw	0
  2611  007600  0100               	movlb	0	; () banked
  2612  007602  6FD2               	movwf	(main@Z+1)& (0+255),b
  2613  007604  0E50               	movlw	80
  2614  007606  0100               	movlb	0	; () banked
  2615  007608  6FD1               	movwf	main@Z& (0+255),b
  2616  00760A                     l3340:
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;main.c: 293: }
  2620                           ;main.c: 294: if(B==9){
  2621  00760A  0100               	movlb	0	; () banked
  2622  00760C  51D4               	movf	_B& (0+255),w,b
  2623  00760E  0A09               	xorlw	9
  2624  007610  11D5               	iorwf	(_B+1)& (0+255),w,b
  2625  007612  A4D8               	btfss	status,2,c
  2626  007614  D034               	goto	l3356
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;main.c: 297: Lcd_Init();
  2630  007616  EC7D  F032         	call	_Lcd_Init	;wreg free
  2631                           
  2632                           ;main.c: 298: Lcd_Cmd(1);
  2633  00761A  0E01               	movlw	1
  2634  00761C  ECEA  F031         	call	_Lcd_Cmd
  2635                           
  2636                           ;main.c: 299: Lcd_Cmd(12);
  2637  007620  0E0C               	movlw	12
  2638  007622  ECEA  F031         	call	_Lcd_Cmd
  2639                           
  2640                           ;main.c: 300: Lcd_Out2(1,1," 70%");
  2641  007626  0E01               	movlw	1
  2642  007628  6E04               	movwf	Lcd_Out2@x,c
  2643  00762A  0E7F               	movlw	high STR_56
  2644  00762C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2645  00762E  0EE1               	movlw	low STR_56
  2646  007630  6E05               	movwf	Lcd_Out2@buffer,c
  2647  007632  0E01               	movlw	1
  2648  007634  ECAC  F02D         	call	_Lcd_Out2
  2649                           
  2650                           ;main.c: 301: Lcd_Out2(2,1," 80%");
  2651  007638  0E01               	movlw	1
  2652  00763A  6E04               	movwf	Lcd_Out2@x,c
  2653  00763C  0E7F               	movlw	high STR_53
  2654  00763E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2655  007640  0EE6               	movlw	low STR_53
  2656  007642  6E05               	movwf	Lcd_Out2@buffer,c
  2657  007644  0E02               	movlw	2
  2658  007646  ECAC  F02D         	call	_Lcd_Out2
  2659                           
  2660                           ;main.c: 302: Lcd_Out2(1,6,"*90%");
  2661  00764A  0E06               	movlw	6
  2662  00764C  6E04               	movwf	Lcd_Out2@x,c
  2663  00764E  0E7F               	movlw	high STR_62
  2664  007650  6E06               	movwf	Lcd_Out2@buffer+1,c
  2665  007652  0EF5               	movlw	low STR_62
  2666  007654  6E05               	movwf	Lcd_Out2@buffer,c
  2667  007656  0E01               	movlw	1
  2668  007658  ECAC  F02D         	call	_Lcd_Out2
  2669                           
  2670                           ;main.c: 303: Lcd_Out2(2,6," 100%");
  2671  00765C  0E06               	movlw	6
  2672  00765E  6E04               	movwf	Lcd_Out2@x,c
  2673  007660  0E7F               	movlw	high STR_55
  2674  007662  6E06               	movwf	Lcd_Out2@buffer+1,c
  2675  007664  0E93               	movlw	low STR_55
  2676  007666  6E05               	movwf	Lcd_Out2@buffer,c
  2677  007668  0E02               	movlw	2
  2678  00766A  ECAC  F02D         	call	_Lcd_Out2
  2679                           
  2680                           ;main.c: 304: tm_1s();
  2681  00766E  EC21  F02E         	call	_tm_1s	;wreg free
  2682                           
  2683                           ;main.c: 305: Z=90;
  2684  007672  0E00               	movlw	0
  2685  007674  0100               	movlb	0	; () banked
  2686  007676  6FD2               	movwf	(main@Z+1)& (0+255),b
  2687  007678  0E5A               	movlw	90
  2688  00767A  0100               	movlb	0	; () banked
  2689  00767C  6FD1               	movwf	main@Z& (0+255),b
  2690  00767E                     l3356:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;main.c: 307: }
  2694                           ;main.c: 309: if(B==10){
  2695  00767E  0100               	movlb	0	; () banked
  2696  007680  51D4               	movf	_B& (0+255),w,b
  2697  007682  0A0A               	xorlw	10
  2698  007684  11D5               	iorwf	(_B+1)& (0+255),w,b
  2699  007686  A4D8               	btfss	status,2,c
  2700  007688  D034               	goto	l3372
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;main.c: 313: Lcd_Init();
  2704  00768A  EC7D  F032         	call	_Lcd_Init	;wreg free
  2705                           
  2706                           ;main.c: 314: Lcd_Cmd(1);
  2707  00768E  0E01               	movlw	1
  2708  007690  ECEA  F031         	call	_Lcd_Cmd
  2709                           
  2710                           ;main.c: 315: Lcd_Cmd(12);
  2711  007694  0E0C               	movlw	12
  2712  007696  ECEA  F031         	call	_Lcd_Cmd
  2713                           
  2714                           ;main.c: 316: Lcd_Out2(1,1," 70%");
  2715  00769A  0E01               	movlw	1
  2716  00769C  6E04               	movwf	Lcd_Out2@x,c
  2717  00769E  0E7F               	movlw	high STR_56
  2718  0076A0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2719  0076A2  0EE1               	movlw	low STR_56
  2720  0076A4  6E05               	movwf	Lcd_Out2@buffer,c
  2721  0076A6  0E01               	movlw	1
  2722  0076A8  ECAC  F02D         	call	_Lcd_Out2
  2723                           
  2724                           ;main.c: 317: Lcd_Out2(2,1," 80%");
  2725  0076AC  0E01               	movlw	1
  2726  0076AE  6E04               	movwf	Lcd_Out2@x,c
  2727  0076B0  0E7F               	movlw	high STR_53
  2728  0076B2  6E06               	movwf	Lcd_Out2@buffer+1,c
  2729  0076B4  0EE6               	movlw	low STR_53
  2730  0076B6  6E05               	movwf	Lcd_Out2@buffer,c
  2731  0076B8  0E02               	movlw	2
  2732  0076BA  ECAC  F02D         	call	_Lcd_Out2
  2733                           
  2734                           ;main.c: 318: Lcd_Out2(1,6," 90%");
  2735  0076BE  0E06               	movlw	6
  2736  0076C0  6E04               	movwf	Lcd_Out2@x,c
  2737  0076C2  0E7F               	movlw	high STR_54
  2738  0076C4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2739  0076C6  0EF0               	movlw	low STR_54
  2740  0076C8  6E05               	movwf	Lcd_Out2@buffer,c
  2741  0076CA  0E01               	movlw	1
  2742  0076CC  ECAC  F02D         	call	_Lcd_Out2
  2743                           
  2744                           ;main.c: 319: Lcd_Out2(2,6,"*100%");
  2745  0076D0  0E06               	movlw	6
  2746  0076D2  6E04               	movwf	Lcd_Out2@x,c
  2747  0076D4  0E7F               	movlw	high STR_67
  2748  0076D6  6E06               	movwf	Lcd_Out2@buffer+1,c
  2749  0076D8  0E99               	movlw	low STR_67
  2750  0076DA  6E05               	movwf	Lcd_Out2@buffer,c
  2751  0076DC  0E02               	movlw	2
  2752  0076DE  ECAC  F02D         	call	_Lcd_Out2
  2753                           
  2754                           ;main.c: 320: tm_1s();
  2755  0076E2  EC21  F02E         	call	_tm_1s	;wreg free
  2756                           
  2757                           ;main.c: 321: Z=100;
  2758  0076E6  0E00               	movlw	0
  2759  0076E8  0100               	movlb	0	; () banked
  2760  0076EA  6FD2               	movwf	(main@Z+1)& (0+255),b
  2761  0076EC  0E64               	movlw	100
  2762  0076EE  0100               	movlb	0	; () banked
  2763  0076F0  6FD1               	movwf	main@Z& (0+255),b
  2764  0076F2                     l3372:
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;main.c: 323: }
  2768                           ;main.c: 324: if(PORTAbits.RA0==1)
  2769  0076F2  A080               	btfss	3968,0,c	;volatile
  2770  0076F4  D00A               	goto	l3378
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;main.c: 325: {
  2774                           ;main.c: 326: B++;
  2775  0076F6  0100               	movlb	0	; () banked
  2776  0076F8  4BD4               	infsnz	_B& (0+255),f,b
  2777  0076FA  2BD5               	incf	(_B+1)& (0+255),f,b
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;main.c: 327: _delay((unsigned long)((10)*(4000000/4000.0)));
  2781  0076FC  0E0D               	movlw	13
  2782  0076FE  6E3C               	movwf	??_main& (0+255),c
  2783  007700  0EFC               	movlw	252
  2784  007702                     u3497:
  2785  007702  2EE8               	decfsz	wreg,f,c
  2786  007704  D7FE               	goto	u3497
  2787  007706  2E3C               	decfsz	??_main& (0+255),f,c
  2788  007708  D7FC               	goto	u3497
  2789  00770A                     l3378:
  2790                           
  2791                           ;main.c: 328: }
  2792                           ;main.c: 330: if(PORTAbits.RA1==1)
  2793  00770A  A280               	btfss	3968,1,c	;volatile
  2794  00770C  D00B               	goto	l165
  2795                           
  2796                           ;main.c: 331: {
  2797                           ;main.c: 332: B--;
  2798  00770E  0100               	movlb	0	; () banked
  2799  007710  07D4               	decf	_B& (0+255),f,b
  2800  007712  A0D8               	btfss	status,0,c
  2801  007714  07D5               	decf	(_B+1)& (0+255),f,b
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;main.c: 333: _delay((unsigned long)((10)*(4000000/4000.0)));
  2805  007716  0E0D               	movlw	13
  2806  007718  6E3C               	movwf	??_main& (0+255),c
  2807  00771A  0EFC               	movlw	252
  2808  00771C                     u3507:
  2809  00771C  2EE8               	decfsz	wreg,f,c
  2810  00771E  D7FE               	goto	u3507
  2811  007720  2E3C               	decfsz	??_main& (0+255),f,c
  2812  007722  D7FC               	goto	u3507
  2813  007724                     l165:
  2814                           
  2815                           ;main.c: 334: }
  2816                           ;main.c: 336: if(B>10){
  2817  007724  0E0B               	movlw	11
  2818  007726  0100               	movlb	0	; () banked
  2819  007728  5DD4               	subwf	_B& (0+255),w,b
  2820  00772A  0E00               	movlw	0
  2821  00772C  0100               	movlb	0	; () banked
  2822  00772E  59D5               	subwfb	(_B+1)& (0+255),w,b
  2823  007730  A0D8               	btfss	status,0,c
  2824  007732  D006               	goto	l3388
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;main.c: 337: B=1;
  2828  007734  0E00               	movlw	0
  2829  007736  0100               	movlb	0	; () banked
  2830  007738  6FD5               	movwf	(_B+1)& (0+255),b
  2831  00773A  0E01               	movlw	1
  2832  00773C  0100               	movlb	0	; () banked
  2833  00773E  6FD4               	movwf	_B& (0+255),b
  2834  007740                     l3388:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;main.c: 342: }
  2838                           ;main.c: 344: if(PORTAbits.RA2==1){
  2839  007740  A480               	btfss	3968,2,c	;volatile
  2840  007742  D006               	goto	l3392
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;main.c: 345: t=1;
  2844  007744  0E00               	movlw	0
  2845  007746  0100               	movlb	0	; () banked
  2846  007748  6FE1               	movwf	(_t+1)& (0+255),b
  2847  00774A  0E01               	movlw	1
  2848  00774C  0100               	movlb	0	; () banked
  2849  00774E  6FE0               	movwf	_t& (0+255),b
  2850  007750                     l3392:
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;main.c: 346: }
  2854                           ;main.c: 348: }while(t==0);
  2855  007750  0100               	movlb	0	; () banked
  2856  007752  51E1               	movf	(_t+1)& (0+255),w,b
  2857  007754  11E0               	iorwf	_t& (0+255),w,b
  2858  007756  B4D8               	btfsc	status,2,c
  2859  007758  D517               	goto	l3186
  2860  00775A                     l151:
  2861                           
  2862                           ;main.c: 350: }
  2863                           ;main.c: 352: }
  2864                           ;main.c: 353: if(PORTAbits.RA0==1)
  2865  00775A  A080               	btfss	3968,0,c	;volatile
  2866  00775C  D00A               	goto	l3398
  2867                           
  2868                           ;main.c: 354: {
  2869                           ;main.c: 355: B++;
  2870  00775E  0100               	movlb	0	; () banked
  2871  007760  4BD4               	infsnz	_B& (0+255),f,b
  2872  007762  2BD5               	incf	(_B+1)& (0+255),f,b
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;main.c: 356: _delay((unsigned long)((10)*(4000000/4000.0)));
  2876  007764  0E0D               	movlw	13
  2877  007766  6E3C               	movwf	??_main& (0+255),c
  2878  007768  0EFC               	movlw	252
  2879  00776A                     u3517:
  2880  00776A  2EE8               	decfsz	wreg,f,c
  2881  00776C  D7FE               	goto	u3517
  2882  00776E  2E3C               	decfsz	??_main& (0+255),f,c
  2883  007770  D7FC               	goto	u3517
  2884  007772                     l3398:
  2885                           
  2886                           ;main.c: 357: }
  2887                           ;main.c: 359: if(PORTAbits.RA1==1)
  2888  007772  A280               	btfss	3968,1,c	;volatile
  2889  007774  D00B               	goto	l171
  2890                           
  2891                           ;main.c: 360: {
  2892                           ;main.c: 361: B--;
  2893  007776  0100               	movlb	0	; () banked
  2894  007778  07D4               	decf	_B& (0+255),f,b
  2895  00777A  A0D8               	btfss	status,0,c
  2896  00777C  07D5               	decf	(_B+1)& (0+255),f,b
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;main.c: 362: _delay((unsigned long)((10)*(4000000/4000.0)));
  2900  00777E  0E0D               	movlw	13
  2901  007780  6E3C               	movwf	??_main& (0+255),c
  2902  007782  0EFC               	movlw	252
  2903  007784                     u3527:
  2904  007784  2EE8               	decfsz	wreg,f,c
  2905  007786  D7FE               	goto	u3527
  2906  007788  2E3C               	decfsz	??_main& (0+255),f,c
  2907  00778A  D7FC               	goto	u3527
  2908  00778C                     l171:
  2909                           
  2910                           ;main.c: 363: }
  2911                           ;main.c: 365: if(B>2){
  2912  00778C  0E03               	movlw	3
  2913  00778E  0100               	movlb	0	; () banked
  2914  007790  5DD4               	subwf	_B& (0+255),w,b
  2915  007792  0E00               	movlw	0
  2916  007794  0100               	movlb	0	; () banked
  2917  007796  59D5               	subwfb	(_B+1)& (0+255),w,b
  2918  007798  A0D8               	btfss	status,0,c
  2919  00779A  D006               	goto	l3408
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;main.c: 366: B=1;
  2923  00779C  0E00               	movlw	0
  2924  00779E  0100               	movlb	0	; () banked
  2925  0077A0  6FD5               	movwf	(_B+1)& (0+255),b
  2926  0077A2  0E01               	movlw	1
  2927  0077A4  0100               	movlb	0	; () banked
  2928  0077A6  6FD4               	movwf	_B& (0+255),b
  2929  0077A8                     l3408:
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;main.c: 372: }
  2933                           ;main.c: 374: if(PORTAbits.RA0==1 && PORTAbits.RA1==1){
  2934  0077A8  B080               	btfsc	3968,0,c	;volatile
  2935                           
  2936                           ; BSR set to: 0
  2937  0077AA  A280               	btfss	3968,1,c	;volatile
  2938  0077AC  D006               	goto	l3414
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;main.c: 375: e=1;
  2942  0077AE  0E00               	movlw	0
  2943  0077B0  0100               	movlb	0	; () banked
  2944  0077B2  6FD9               	movwf	(_e+1)& (0+255),b
  2945  0077B4  0E01               	movlw	1
  2946  0077B6  0100               	movlb	0	; () banked
  2947  0077B8  6FD8               	movwf	_e& (0+255),b
  2948  0077BA                     l3414:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;main.c: 376: }
  2952                           ;main.c: 377: }
  2953                           ;main.c: 378: while(e==0);
  2954  0077BA  0100               	movlb	0	; () banked
  2955  0077BC  51D9               	movf	(_e+1)& (0+255),w,b
  2956  0077BE  11D8               	iorwf	_e& (0+255),w,b
  2957  0077C0  B4D8               	btfsc	status,2,c
  2958  0077C2  EFC8  F037         	goto	l3096
  2959  0077C6                     l3416:
  2960                           
  2961                           ;main.c: 379: }
  2962                           ;main.c: 380: }
  2963                           ;main.c: 381: if(B==2){
  2964  0077C6  0100               	movlb	0	; () banked
  2965  0077C8  51D4               	movf	_B& (0+255),w,b
  2966  0077CA  0A02               	xorlw	2
  2967  0077CC  11D5               	iorwf	(_B+1)& (0+255),w,b
  2968  0077CE  A4D8               	btfss	status,2,c
  2969  0077D0  D01C               	goto	l3426
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;main.c: 382: Lcd_Init();
  2973  0077D2  EC7D  F032         	call	_Lcd_Init	;wreg free
  2974                           
  2975                           ;main.c: 383: Lcd_Cmd(1);
  2976  0077D6  0E01               	movlw	1
  2977  0077D8  ECEA  F031         	call	_Lcd_Cmd
  2978                           
  2979                           ;main.c: 384: Lcd_Cmd(12);
  2980  0077DC  0E0C               	movlw	12
  2981  0077DE  ECEA  F031         	call	_Lcd_Cmd
  2982                           
  2983                           ;main.c: 385: Lcd_Out2(1,1,"   Ingresar");
  2984  0077E2  0E01               	movlw	1
  2985  0077E4  6E04               	movwf	Lcd_Out2@x,c
  2986  0077E6  0E7E               	movlw	high STR_5
  2987  0077E8  6E06               	movwf	Lcd_Out2@buffer+1,c
  2988  0077EA  0EC5               	movlw	low STR_5
  2989  0077EC  6E05               	movwf	Lcd_Out2@buffer,c
  2990  0077EE  0E01               	movlw	1
  2991  0077F0  ECAC  F02D         	call	_Lcd_Out2
  2992                           
  2993                           ;main.c: 386: Lcd_Out2(2,1,"=> Comenzar");
  2994  0077F4  0E01               	movlw	1
  2995  0077F6  6E04               	movwf	Lcd_Out2@x,c
  2996  0077F8  0E7E               	movlw	high STR_69
  2997  0077FA  6E06               	movwf	Lcd_Out2@buffer+1,c
  2998  0077FC  0EE9               	movlw	low STR_69
  2999  0077FE  6E05               	movwf	Lcd_Out2@buffer,c
  3000  007800  0E02               	movlw	2
  3001  007802  ECAC  F02D         	call	_Lcd_Out2
  3002                           
  3003                           ;main.c: 387: tm_1s();
  3004  007806  EC21  F02E         	call	_tm_1s	;wreg free
  3005  00780A                     l3426:
  3006                           
  3007                           ;main.c: 389: }
  3008                           ;main.c: 390: if(PORTAbits.RA2==1){
  3009  00780A  A480               	btfss	3968,2,c	;volatile
  3010  00780C  D090               	goto	l177
  3011                           
  3012                           ;main.c: 391: p=0;
  3013  00780E  0E00               	movlw	0
  3014  007810  0100               	movlb	0	; () banked
  3015  007812  6FDB               	movwf	(_p+1)& (0+255),b
  3016  007814  0E00               	movlw	0
  3017  007816  0100               	movlb	0	; () banked
  3018  007818  6FDA               	movwf	_p& (0+255),b
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;main.c: 392: Lcd_Init();
  3022  00781A  EC7D  F032         	call	_Lcd_Init	;wreg free
  3023                           
  3024                           ;main.c: 393: Lcd_Cmd(1);
  3025  00781E  0E01               	movlw	1
  3026  007820  ECEA  F031         	call	_Lcd_Cmd
  3027                           
  3028                           ;main.c: 394: Lcd_Cmd(12);
  3029  007824  0E0C               	movlw	12
  3030  007826  ECEA  F031         	call	_Lcd_Cmd
  3031                           
  3032                           ;main.c: 398: X=A*1000;
  3033  00782A  0100               	movlb	0	; () banked
  3034  00782C  C0D3  F001         	movff	main@A,___wmul@multiplier
  3035  007830  6A02               	clrf	___wmul@multiplier+1,c
  3036  007832  0E03               	movlw	3
  3037  007834  6E04               	movwf	___wmul@multiplicand+1,c
  3038  007836  0EE8               	movlw	232
  3039  007838  6E03               	movwf	___wmul@multiplicand,c
  3040  00783A  ECC4  F02C         	call	___wmul	;wreg free
  3041  00783E  C001  F0CF         	movff	?___wmul,main@X
  3042  007842  C002  F0D0         	movff	?___wmul+1,main@X+1
  3043                           
  3044                           ;main.c: 400: cant = Conv_Entero(X,cad);
  3045  007846  0100               	movlb	0	; () banked
  3046  007848  C0CF  F00F         	movff	main@X,Conv_Entero@numero
  3047  00784C  0100               	movlb	0	; () banked
  3048  00784E  C0D0  F010         	movff	main@X+1,Conv_Entero@numero+1
  3049  007852  6A11               	clrf	Conv_Entero@numero+2,c
  3050  007854  6A12               	clrf	Conv_Entero@numero+3,c
  3051  007856  0100               	movlb	0	; () banked
  3052  007858  0E00               	movlw	high main@cad
  3053  00785A  6E14               	movwf	Conv_Entero@conv+1,c
  3054  00785C  0100               	movlb	0	; () banked
  3055  00785E  0EA2               	movlw	low main@cad
  3056  007860  6E13               	movwf	Conv_Entero@conv,c
  3057  007862  ECF1  F034         	call	_Conv_Entero	;wreg free
  3058  007866  500F               	movf	?_Conv_Entero,w,c
  3059  007868  0100               	movlb	0	; () banked
  3060  00786A  6FCE               	movwf	main@cant& (0+255),b
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;main.c: 401: unsigned char fre=0;
  3064  00786C  0E00               	movlw	0
  3065  00786E  0100               	movlb	0	; () banked
  3066  007870  6FCC               	movwf	main@fre& (0+255),b
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;main.c: 403: PWM_generar(Z,M);
  3070  007872  C0D1  F00E         	movff	main@Z,PWM_generar@ciclo
  3071  007876  C0D2  F00F         	movff	main@Z+1,PWM_generar@ciclo+1
  3072  00787A  C0D6  F010         	movff	_M,PWM_generar@frecuencia
  3073  00787E  C0D7  F011         	movff	_M+1,PWM_generar@frecuencia+1
  3074  007882  ECDD  F035         	call	_PWM_generar	;wreg free
  3075                           
  3076                           ;main.c: 405: Lcd_Out2(1,1,"F:  000 hz");
  3077  007886  0E01               	movlw	1
  3078  007888  6E04               	movwf	Lcd_Out2@x,c
  3079  00788A  0E7F               	movlw	high STR_70
  3080  00788C  6E06               	movwf	Lcd_Out2@buffer+1,c
  3081  00788E  0E00               	movlw	low STR_70
  3082  007890  6E05               	movwf	Lcd_Out2@buffer,c
  3083  007892  0E01               	movlw	1
  3084  007894  ECAC  F02D         	call	_Lcd_Out2
  3085                           
  3086                           ;main.c: 406: lcd_goto(4,1);
  3087  007898  0E00               	movlw	0
  3088  00789A  6E05               	movwf	lcd_goto@x+1,c
  3089  00789C  0E04               	movlw	4
  3090  00789E  6E04               	movwf	lcd_goto@x,c
  3091  0078A0  0E00               	movlw	0
  3092  0078A2  6E07               	movwf	lcd_goto@y+1,c
  3093  0078A4  0E01               	movlw	1
  3094  0078A6  6E06               	movwf	lcd_goto@y,c
  3095  0078A8  ECF8  F02C         	call	_lcd_goto	;wreg free
  3096                           
  3097                           ;main.c: 407: Lcd_Chr_CP(A);
  3098  0078AC  0100               	movlb	0	; () banked
  3099  0078AE  51D3               	movf	main@A& (0+255),w,b
  3100  0078B0  EC11  F033         	call	_Lcd_Chr_CP
  3101                           
  3102                           ;main.c: 408: Lcd_Out2(2,1,"C: ");
  3103  0078B4  0E01               	movlw	1
  3104  0078B6  6E04               	movwf	Lcd_Out2@x,c
  3105  0078B8  0E7F               	movlw	high STR_71
  3106  0078BA  6E06               	movwf	Lcd_Out2@buffer+1,c
  3107  0078BC  0EFA               	movlw	low STR_71
  3108  0078BE  6E05               	movwf	Lcd_Out2@buffer,c
  3109  0078C0  0E02               	movlw	2
  3110  0078C2  ECAC  F02D         	call	_Lcd_Out2
  3111                           
  3112                           ;main.c: 409: Lcd_Out2(2,7,"%");
  3113  0078C6  0E07               	movlw	7
  3114  0078C8  6E04               	movwf	Lcd_Out2@x,c
  3115  0078CA  0E7F               	movlw	high (STR_55+4)
  3116  0078CC  6E06               	movwf	Lcd_Out2@buffer+1,c
  3117  0078CE  0E97               	movlw	low (STR_55+4)
  3118  0078D0  6E05               	movwf	Lcd_Out2@buffer,c
  3119  0078D2  0E02               	movlw	2
  3120  0078D4  ECAC  F02D         	call	_Lcd_Out2
  3121                           
  3122                           ;main.c: 410: cantidad = Conv_Entero(Z,cadena);
  3123  0078D8  0100               	movlb	0	; () banked
  3124  0078DA  C0D1  F00F         	movff	main@Z,Conv_Entero@numero
  3125  0078DE  0100               	movlb	0	; () banked
  3126  0078E0  C0D2  F010         	movff	main@Z+1,Conv_Entero@numero+1
  3127  0078E4  6A11               	clrf	Conv_Entero@numero+2,c
  3128  0078E6  6A12               	clrf	Conv_Entero@numero+3,c
  3129  0078E8  0100               	movlb	0	; () banked
  3130  0078EA  0E00               	movlw	high main@cadena
  3131  0078EC  6E14               	movwf	Conv_Entero@conv+1,c
  3132  0078EE  0100               	movlb	0	; () banked
  3133  0078F0  0EB6               	movlw	low main@cadena
  3134  0078F2  6E13               	movwf	Conv_Entero@conv,c
  3135  0078F4  ECF1  F034         	call	_Conv_Entero	;wreg free
  3136  0078F8  500F               	movf	?_Conv_Entero,w,c
  3137  0078FA  0100               	movlb	0	; () banked
  3138  0078FC  6FCD               	movwf	main@cantidad& (0+255),b
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;main.c: 411: Lcd_Out(2,4,cadena);
  3142  0078FE  0E04               	movlw	4
  3143  007900  6E04               	movwf	Lcd_Out@x,c
  3144  007902  0100               	movlb	0	; () banked
  3145  007904  0E00               	movlw	high main@cadena
  3146  007906  6E06               	movwf	Lcd_Out@buffer+1,c
  3147  007908  0100               	movlb	0	; () banked
  3148  00790A  0EB6               	movlw	low main@cadena
  3149  00790C  6E05               	movwf	Lcd_Out@buffer,c
  3150  00790E  0E02               	movlw	2
  3151  007910  EC4A  F02D         	call	_Lcd_Out
  3152  007914                     l3458:
  3153                           
  3154                           ;main.c: 415: if(PORTAbits.RA0==1){
  3155  007914  A080               	btfss	3968,0,c	;volatile
  3156  007916  D006               	goto	l3462
  3157                           
  3158                           ;main.c: 416: p=1;
  3159  007918  0E00               	movlw	0
  3160  00791A  0100               	movlb	0	; () banked
  3161  00791C  6FDB               	movwf	(_p+1)& (0+255),b
  3162  00791E  0E01               	movlw	1
  3163  007920  0100               	movlb	0	; () banked
  3164  007922  6FDA               	movwf	_p& (0+255),b
  3165  007924                     l3462:
  3166                           
  3167                           ;main.c: 417: }
  3168                           ;main.c: 418: }while(p==0);
  3169  007924  0100               	movlb	0	; () banked
  3170  007926  51DB               	movf	(_p+1)& (0+255),w,b
  3171  007928  11DA               	iorwf	_p& (0+255),w,b
  3172  00792A  B4D8               	btfsc	status,2,c
  3173  00792C  D7F3               	goto	l3458
  3174  00792E                     l177:
  3175                           
  3176                           ;main.c: 419: }
  3177                           ;main.c: 420: if(PORTAbits.RA0==1 && PORTAbits.RA1==1){
  3178  00792E  B080               	btfsc	3968,0,c	;volatile
  3179  007930  A280               	btfss	3968,1,c	;volatile
  3180  007932  D006               	goto	l3468
  3181                           
  3182                           ;main.c: 421: w=1;
  3183  007934  0E00               	movlw	0
  3184  007936  0100               	movlb	0	; () banked
  3185  007938  6FE3               	movwf	(_w+1)& (0+255),b
  3186  00793A  0E01               	movlw	1
  3187  00793C  0100               	movlb	0	; () banked
  3188  00793E  6FE2               	movwf	_w& (0+255),b
  3189  007940                     l3468:
  3190                           
  3191                           ;main.c: 422: }
  3192                           ;main.c: 424: if(PORTAbits.RA0==1)
  3193  007940  A080               	btfss	3968,0,c	;volatile
  3194  007942  D00A               	goto	l3474
  3195                           
  3196                           ;main.c: 425: {
  3197                           ;main.c: 426: B++;
  3198  007944  0100               	movlb	0	; () banked
  3199  007946  4BD4               	infsnz	_B& (0+255),f,b
  3200  007948  2BD5               	incf	(_B+1)& (0+255),f,b
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;main.c: 427: _delay((unsigned long)((10)*(4000000/4000.0)));
  3204  00794A  0E0D               	movlw	13
  3205  00794C  6E3C               	movwf	??_main& (0+255),c
  3206  00794E  0EFC               	movlw	252
  3207  007950                     u3537:
  3208  007950  2EE8               	decfsz	wreg,f,c
  3209  007952  D7FE               	goto	u3537
  3210  007954  2E3C               	decfsz	??_main& (0+255),f,c
  3211  007956  D7FC               	goto	u3537
  3212  007958                     l3474:
  3213                           
  3214                           ;main.c: 428: }
  3215                           ;main.c: 430: if(PORTAbits.RA1==1)
  3216  007958  A280               	btfss	3968,1,c	;volatile
  3217  00795A  D00B               	goto	l183
  3218                           
  3219                           ;main.c: 431: {
  3220                           ;main.c: 432: B--;
  3221  00795C  0100               	movlb	0	; () banked
  3222  00795E  07D4               	decf	_B& (0+255),f,b
  3223  007960  A0D8               	btfss	status,0,c
  3224  007962  07D5               	decf	(_B+1)& (0+255),f,b
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;main.c: 433: _delay((unsigned long)((10)*(4000000/4000.0)));
  3228  007964  0E0D               	movlw	13
  3229  007966  6E3C               	movwf	??_main& (0+255),c
  3230  007968  0EFC               	movlw	252
  3231  00796A                     u3547:
  3232  00796A  2EE8               	decfsz	wreg,f,c
  3233  00796C  D7FE               	goto	u3547
  3234  00796E  2E3C               	decfsz	??_main& (0+255),f,c
  3235  007970  D7FC               	goto	u3547
  3236  007972                     l183:
  3237                           
  3238                           ;main.c: 434: }
  3239                           ;main.c: 435: if(B>3){
  3240  007972  0E04               	movlw	4
  3241  007974  0100               	movlb	0	; () banked
  3242  007976  5DD4               	subwf	_B& (0+255),w,b
  3243  007978  0E00               	movlw	0
  3244  00797A  0100               	movlb	0	; () banked
  3245  00797C  59D5               	subwfb	(_B+1)& (0+255),w,b
  3246  00797E  A0D8               	btfss	status,0,c
  3247  007980  D006               	goto	l3484
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;main.c: 436: B=1;
  3251  007982  0E00               	movlw	0
  3252  007984  0100               	movlb	0	; () banked
  3253  007986  6FD5               	movwf	(_B+1)& (0+255),b
  3254  007988  0E01               	movlw	1
  3255  00798A  0100               	movlb	0	; () banked
  3256  00798C  6FD4               	movwf	_B& (0+255),b
  3257  00798E                     l3484:
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;main.c: 441: }
  3261                           ;main.c: 442: } while(w==0);
  3262  00798E  0100               	movlb	0	; () banked
  3263  007990  51E3               	movf	(_w+1)& (0+255),w,b
  3264  007992  11E2               	iorwf	_w& (0+255),w,b
  3265  007994  B4D8               	btfsc	status,2,c
  3266  007996  EF7C  F037         	goto	l3072
  3267  00799A                     l3486:
  3268                           
  3269                           ;main.c: 443: }
  3270                           ;main.c: 449: }
  3271                           ;main.c: 451: if(B==2){
  3272  00799A  0100               	movlb	0	; () banked
  3273  00799C  51D4               	movf	_B& (0+255),w,b
  3274  00799E  0A02               	xorlw	2
  3275  0079A0  11D5               	iorwf	(_B+1)& (0+255),w,b
  3276  0079A2  A4D8               	btfss	status,2,c
  3277  0079A4  D12C               	goto	l3610
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;main.c: 452: Lcd_Init();
  3281  0079A6  EC7D  F032         	call	_Lcd_Init	;wreg free
  3282                           
  3283                           ;main.c: 453: Lcd_Cmd(1);
  3284  0079AA  0E01               	movlw	1
  3285  0079AC  ECEA  F031         	call	_Lcd_Cmd
  3286                           
  3287                           ;main.c: 454: Lcd_Cmd(12);
  3288  0079B0  0E0C               	movlw	12
  3289  0079B2  ECEA  F031         	call	_Lcd_Cmd
  3290                           
  3291                           ;main.c: 455: Lcd_Out2(1,1,"   PWM");
  3292  0079B6  0E01               	movlw	1
  3293  0079B8  6E04               	movwf	Lcd_Out2@x,c
  3294  0079BA  0E7F               	movlw	high STR_73
  3295  0079BC  6E06               	movwf	Lcd_Out2@buffer+1,c
  3296  0079BE  0E85               	movlw	low STR_73
  3297  0079C0  6E05               	movwf	Lcd_Out2@buffer,c
  3298  0079C2  0E01               	movlw	1
  3299  0079C4  ECAC  F02D         	call	_Lcd_Out2
  3300                           
  3301                           ;main.c: 456: Lcd_Out2(2,1,"=> Senoidal");
  3302  0079C8  0E01               	movlw	1
  3303  0079CA  6E04               	movwf	Lcd_Out2@x,c
  3304  0079CC  0E7E               	movlw	high STR_74
  3305  0079CE  6E06               	movwf	Lcd_Out2@buffer+1,c
  3306  0079D0  0EB9               	movlw	low STR_74
  3307  0079D2  6E05               	movwf	Lcd_Out2@buffer,c
  3308  0079D4  0E02               	movlw	2
  3309  0079D6  ECAC  F02D         	call	_Lcd_Out2
  3310                           
  3311                           ;main.c: 457: tm_1s();
  3312  0079DA  EC21  F02E         	call	_tm_1s	;wreg free
  3313                           
  3314                           ;main.c: 459: if(PORTAbits.RA2==1){
  3315  0079DE  A480               	btfss	3968,2,c	;volatile
  3316  0079E0  D10E               	goto	l3610
  3317                           
  3318                           ;main.c: 460: w=0;
  3319  0079E2  0E00               	movlw	0
  3320  0079E4  0100               	movlb	0	; () banked
  3321  0079E6  6FE3               	movwf	(_w+1)& (0+255),b
  3322  0079E8  0E00               	movlw	0
  3323  0079EA  0100               	movlb	0	; () banked
  3324  0079EC  6FE2               	movwf	_w& (0+255),b
  3325  0079EE                     l3500:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;main.c: 463: if(B==0){
  3329  0079EE  0100               	movlb	0	; () banked
  3330  0079F0  51D5               	movf	(_B+1)& (0+255),w,b
  3331  0079F2  11D4               	iorwf	_B& (0+255),w,b
  3332  0079F4  A4D8               	btfss	status,2,c
  3333  0079F6  D044               	goto	l3530
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;main.c: 464: Lcd_Init();
  3337  0079F8  EC7D  F032         	call	_Lcd_Init	;wreg free
  3338                           
  3339                           ;main.c: 465: Lcd_Cmd(1);
  3340  0079FC  0E01               	movlw	1
  3341  0079FE  ECEA  F031         	call	_Lcd_Cmd
  3342                           
  3343                           ;main.c: 466: Lcd_Cmd(12);
  3344  007A02  0E0C               	movlw	12
  3345  007A04  ECEA  F031         	call	_Lcd_Cmd
  3346                           
  3347                           ;main.c: 467: Lcd_Out2(1,1,"=> Sin 1");
  3348  007A08  0E01               	movlw	1
  3349  007A0A  6E04               	movwf	Lcd_Out2@x,c
  3350  007A0C  0E7F               	movlw	high STR_75
  3351  007A0E  6E06               	movwf	Lcd_Out2@buffer+1,c
  3352  007A10  0E46               	movlw	low STR_75
  3353  007A12  6E05               	movwf	Lcd_Out2@buffer,c
  3354  007A14  0E01               	movlw	1
  3355  007A16  ECAC  F02D         	call	_Lcd_Out2
  3356                           
  3357                           ;main.c: 468: Lcd_Out2(2,1,"   Sin 2");
  3358  007A1A  0E01               	movlw	1
  3359  007A1C  6E04               	movwf	Lcd_Out2@x,c
  3360  007A1E  0E7F               	movlw	high STR_76
  3361  007A20  6E06               	movwf	Lcd_Out2@buffer+1,c
  3362  007A22  0E4F               	movlw	low STR_76
  3363  007A24  6E05               	movwf	Lcd_Out2@buffer,c
  3364  007A26  0E02               	movlw	2
  3365  007A28  ECAC  F02D         	call	_Lcd_Out2
  3366                           
  3367                           ;main.c: 469: tm_1s();
  3368  007A2C  EC21  F02E         	call	_tm_1s	;wreg free
  3369                           
  3370                           ;main.c: 470: if(PORTAbits.RA2==1){
  3371  007A30  A480               	btfss	3968,2,c	;volatile
  3372  007A32  D026               	goto	l3530
  3373                           
  3374                           ;main.c: 471: q=0;
  3375  007A34  0E00               	movlw	0
  3376  007A36  0100               	movlb	0	; () banked
  3377  007A38  6FDD               	movwf	(_q+1)& (0+255),b
  3378  007A3A  0E00               	movlw	0
  3379  007A3C  0100               	movlb	0	; () banked
  3380  007A3E  6FDC               	movwf	_q& (0+255),b
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;main.c: 472: Lcd_Init();
  3384  007A40  EC7D  F032         	call	_Lcd_Init	;wreg free
  3385                           
  3386                           ;main.c: 473: Lcd_Cmd(1);
  3387  007A44  0E01               	movlw	1
  3388  007A46  ECEA  F031         	call	_Lcd_Cmd
  3389                           
  3390                           ;main.c: 474: Lcd_Cmd(12);
  3391  007A4A  0E0C               	movlw	12
  3392  007A4C  ECEA  F031         	call	_Lcd_Cmd
  3393                           
  3394                           ;main.c: 475: Lcd_Out2(1,1," Sin 1");
  3395  007A50  0E01               	movlw	1
  3396  007A52  6E04               	movwf	Lcd_Out2@x,c
  3397  007A54  0E7F               	movlw	high (STR_78+2)
  3398  007A56  6E06               	movwf	Lcd_Out2@buffer+1,c
  3399  007A58  0E3F               	movlw	low (STR_78+2)
  3400  007A5A  6E05               	movwf	Lcd_Out2@buffer,c
  3401  007A5C  0E01               	movlw	1
  3402  007A5E  ECAC  F02D         	call	_Lcd_Out2
  3403  007A62                     l3522:
  3404                           
  3405                           ;main.c: 477: SENO_1();
  3406  007A62  EC78  F02F         	call	_SENO_1	;wreg free
  3407                           
  3408                           ;main.c: 478: if(PORTAbits.RA1==1){
  3409  007A66  A280               	btfss	3968,1,c	;volatile
  3410  007A68  D006               	goto	l3528
  3411                           
  3412                           ;main.c: 479: q=1;
  3413  007A6A  0E00               	movlw	0
  3414  007A6C  0100               	movlb	0	; () banked
  3415  007A6E  6FDD               	movwf	(_q+1)& (0+255),b
  3416  007A70  0E01               	movlw	1
  3417  007A72  0100               	movlb	0	; () banked
  3418  007A74  6FDC               	movwf	_q& (0+255),b
  3419  007A76                     l3528:
  3420                           
  3421                           ;main.c: 480: }
  3422                           ;main.c: 481: }while(q==0);
  3423  007A76  0100               	movlb	0	; () banked
  3424  007A78  51DD               	movf	(_q+1)& (0+255),w,b
  3425  007A7A  11DC               	iorwf	_q& (0+255),w,b
  3426  007A7C  B4D8               	btfsc	status,2,c
  3427  007A7E  D7F1               	goto	l3522
  3428  007A80                     l3530:
  3429                           
  3430                           ;main.c: 482: }
  3431                           ;main.c: 483: }
  3432                           ;main.c: 485: if(B==1){
  3433  007A80  0100               	movlb	0	; () banked
  3434  007A82  05D4               	decf	_B& (0+255),w,b
  3435  007A84  11D5               	iorwf	(_B+1)& (0+255),w,b
  3436  007A86  A4D8               	btfss	status,2,c
  3437  007A88  D044               	goto	l3560
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;main.c: 486: Lcd_Init();
  3441  007A8A  EC7D  F032         	call	_Lcd_Init	;wreg free
  3442                           
  3443                           ;main.c: 487: Lcd_Cmd(1);
  3444  007A8E  0E01               	movlw	1
  3445  007A90  ECEA  F031         	call	_Lcd_Cmd
  3446                           
  3447                           ;main.c: 488: Lcd_Cmd(12);
  3448  007A94  0E0C               	movlw	12
  3449  007A96  ECEA  F031         	call	_Lcd_Cmd
  3450                           
  3451                           ;main.c: 489: Lcd_Out2(1,1,"   Sin 1");
  3452  007A9A  0E01               	movlw	1
  3453  007A9C  6E04               	movwf	Lcd_Out2@x,c
  3454  007A9E  0E7F               	movlw	high STR_78
  3455  007AA0  6E06               	movwf	Lcd_Out2@buffer+1,c
  3456  007AA2  0E3D               	movlw	low STR_78
  3457  007AA4  6E05               	movwf	Lcd_Out2@buffer,c
  3458  007AA6  0E01               	movlw	1
  3459  007AA8  ECAC  F02D         	call	_Lcd_Out2
  3460                           
  3461                           ;main.c: 490: Lcd_Out2(2,1,"=> Sin 2");
  3462  007AAC  0E01               	movlw	1
  3463  007AAE  6E04               	movwf	Lcd_Out2@x,c
  3464  007AB0  0E7F               	movlw	high STR_79
  3465  007AB2  6E06               	movwf	Lcd_Out2@buffer+1,c
  3466  007AB4  0E58               	movlw	low STR_79
  3467  007AB6  6E05               	movwf	Lcd_Out2@buffer,c
  3468  007AB8  0E02               	movlw	2
  3469  007ABA  ECAC  F02D         	call	_Lcd_Out2
  3470                           
  3471                           ;main.c: 491: tm_1s();
  3472  007ABE  EC21  F02E         	call	_tm_1s	;wreg free
  3473                           
  3474                           ;main.c: 492: if(PORTAbits.RA2==1){
  3475  007AC2  A480               	btfss	3968,2,c	;volatile
  3476  007AC4  D026               	goto	l3560
  3477                           
  3478                           ;main.c: 493: q=0;
  3479  007AC6  0E00               	movlw	0
  3480  007AC8  0100               	movlb	0	; () banked
  3481  007ACA  6FDD               	movwf	(_q+1)& (0+255),b
  3482  007ACC  0E00               	movlw	0
  3483  007ACE  0100               	movlb	0	; () banked
  3484  007AD0  6FDC               	movwf	_q& (0+255),b
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;main.c: 494: Lcd_Init();
  3488  007AD2  EC7D  F032         	call	_Lcd_Init	;wreg free
  3489                           
  3490                           ;main.c: 495: Lcd_Cmd(1);
  3491  007AD6  0E01               	movlw	1
  3492  007AD8  ECEA  F031         	call	_Lcd_Cmd
  3493                           
  3494                           ;main.c: 496: Lcd_Cmd(12);
  3495  007ADC  0E0C               	movlw	12
  3496  007ADE  ECEA  F031         	call	_Lcd_Cmd
  3497                           
  3498                           ;main.c: 497: Lcd_Out2(1,1," Sin 2");
  3499  007AE2  0E01               	movlw	1
  3500  007AE4  6E04               	movwf	Lcd_Out2@x,c
  3501  007AE6  0E7F               	movlw	high (STR_76+2)
  3502  007AE8  6E06               	movwf	Lcd_Out2@buffer+1,c
  3503  007AEA  0E51               	movlw	low (STR_76+2)
  3504  007AEC  6E05               	movwf	Lcd_Out2@buffer,c
  3505  007AEE  0E01               	movlw	1
  3506  007AF0  ECAC  F02D         	call	_Lcd_Out2
  3507  007AF4                     l3552:
  3508                           
  3509                           ;main.c: 499: SENO_2();
  3510  007AF4  ECF5  F02F         	call	_SENO_2	;wreg free
  3511                           
  3512                           ;main.c: 500: if(PORTAbits.RA1==1){
  3513  007AF8  A280               	btfss	3968,1,c	;volatile
  3514  007AFA  D006               	goto	l3558
  3515                           
  3516                           ;main.c: 501: q=1;
  3517  007AFC  0E00               	movlw	0
  3518  007AFE  0100               	movlb	0	; () banked
  3519  007B00  6FDD               	movwf	(_q+1)& (0+255),b
  3520  007B02  0E01               	movlw	1
  3521  007B04  0100               	movlb	0	; () banked
  3522  007B06  6FDC               	movwf	_q& (0+255),b
  3523  007B08                     l3558:
  3524                           
  3525                           ;main.c: 502: }
  3526                           ;main.c: 503: }while(q==0);
  3527  007B08  0100               	movlb	0	; () banked
  3528  007B0A  51DD               	movf	(_q+1)& (0+255),w,b
  3529  007B0C  11DC               	iorwf	_q& (0+255),w,b
  3530  007B0E  B4D8               	btfsc	status,2,c
  3531  007B10  D7F1               	goto	l3552
  3532  007B12                     l3560:
  3533                           
  3534                           ;main.c: 504: }
  3535                           ;main.c: 505: }
  3536                           ;main.c: 507: if(B==2){
  3537  007B12  0100               	movlb	0	; () banked
  3538  007B14  51D4               	movf	_B& (0+255),w,b
  3539  007B16  0A02               	xorlw	2
  3540  007B18  11D5               	iorwf	(_B+1)& (0+255),w,b
  3541  007B1A  A4D8               	btfss	status,2,c
  3542  007B1C  D03B               	goto	l200
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;main.c: 508: Lcd_Init();
  3546  007B1E  EC7D  F032         	call	_Lcd_Init	;wreg free
  3547                           
  3548                           ;main.c: 509: Lcd_Cmd(1);
  3549  007B22  0E01               	movlw	1
  3550  007B24  ECEA  F031         	call	_Lcd_Cmd
  3551                           
  3552                           ;main.c: 510: Lcd_Cmd(12);
  3553  007B28  0E0C               	movlw	12
  3554  007B2A  ECEA  F031         	call	_Lcd_Cmd
  3555                           
  3556                           ;main.c: 511: Lcd_Out2(1,1,"=> Sin 3");
  3557  007B2E  0E01               	movlw	1
  3558  007B30  6E04               	movwf	Lcd_Out2@x,c
  3559  007B32  0E7F               	movlw	high STR_81
  3560  007B34  6E06               	movwf	Lcd_Out2@buffer+1,c
  3561  007B36  0E61               	movlw	low STR_81
  3562  007B38  6E05               	movwf	Lcd_Out2@buffer,c
  3563  007B3A  0E01               	movlw	1
  3564  007B3C  ECAC  F02D         	call	_Lcd_Out2
  3565                           
  3566                           ;main.c: 512: tm_1s();
  3567  007B40  EC21  F02E         	call	_tm_1s	;wreg free
  3568                           
  3569                           ;main.c: 513: if(PORTAbits.RA2==1){
  3570  007B44  A480               	btfss	3968,2,c	;volatile
  3571  007B46  D026               	goto	l200
  3572                           
  3573                           ;main.c: 514: q=0;
  3574  007B48  0E00               	movlw	0
  3575  007B4A  0100               	movlb	0	; () banked
  3576  007B4C  6FDD               	movwf	(_q+1)& (0+255),b
  3577  007B4E  0E00               	movlw	0
  3578  007B50  0100               	movlb	0	; () banked
  3579  007B52  6FDC               	movwf	_q& (0+255),b
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;main.c: 515: Lcd_Init();
  3583  007B54  EC7D  F032         	call	_Lcd_Init	;wreg free
  3584                           
  3585                           ;main.c: 516: Lcd_Cmd(1);
  3586  007B58  0E01               	movlw	1
  3587  007B5A  ECEA  F031         	call	_Lcd_Cmd
  3588                           
  3589                           ;main.c: 517: Lcd_Cmd(12);
  3590  007B5E  0E0C               	movlw	12
  3591  007B60  ECEA  F031         	call	_Lcd_Cmd
  3592                           
  3593                           ;main.c: 518: Lcd_Out2(1,1," Sin 3");
  3594  007B64  0E01               	movlw	1
  3595  007B66  6E04               	movwf	Lcd_Out2@x,c
  3596  007B68  0E7F               	movlw	high (STR_81+2)
  3597  007B6A  6E06               	movwf	Lcd_Out2@buffer+1,c
  3598  007B6C  0E63               	movlw	low (STR_81+2)
  3599  007B6E  6E05               	movwf	Lcd_Out2@buffer,c
  3600  007B70  0E01               	movlw	1
  3601  007B72  ECAC  F02D         	call	_Lcd_Out2
  3602  007B76                     l3580:
  3603                           
  3604                           ;main.c: 520: SENO_3();
  3605  007B76  EC72  F030         	call	_SENO_3	;wreg free
  3606                           
  3607                           ;main.c: 521: if(PORTAbits.RA1==1){
  3608  007B7A  A280               	btfss	3968,1,c	;volatile
  3609  007B7C  D006               	goto	l3586
  3610                           
  3611                           ;main.c: 522: q=1;
  3612  007B7E  0E00               	movlw	0
  3613  007B80  0100               	movlb	0	; () banked
  3614  007B82  6FDD               	movwf	(_q+1)& (0+255),b
  3615  007B84  0E01               	movlw	1
  3616  007B86  0100               	movlb	0	; () banked
  3617  007B88  6FDC               	movwf	_q& (0+255),b
  3618  007B8A                     l3586:
  3619                           
  3620                           ;main.c: 523: }
  3621                           ;main.c: 524: }while(q==0);
  3622  007B8A  0100               	movlb	0	; () banked
  3623  007B8C  51DD               	movf	(_q+1)& (0+255),w,b
  3624  007B8E  11DC               	iorwf	_q& (0+255),w,b
  3625  007B90  B4D8               	btfsc	status,2,c
  3626  007B92  D7F1               	goto	l3580
  3627  007B94                     l200:
  3628                           
  3629                           ;main.c: 525: }
  3630                           ;main.c: 526: }
  3631                           ;main.c: 528: if(PORTAbits.RA0==1)
  3632  007B94  A080               	btfss	3968,0,c	;volatile
  3633  007B96  D00A               	goto	l3592
  3634                           
  3635                           ;main.c: 529: {
  3636                           ;main.c: 530: B++;
  3637  007B98  0100               	movlb	0	; () banked
  3638  007B9A  4BD4               	infsnz	_B& (0+255),f,b
  3639  007B9C  2BD5               	incf	(_B+1)& (0+255),f,b
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;main.c: 531: _delay((unsigned long)((10)*(4000000/4000.0)));
  3643  007B9E  0E0D               	movlw	13
  3644  007BA0  6E3C               	movwf	??_main& (0+255),c
  3645  007BA2  0EFC               	movlw	252
  3646  007BA4                     u3557:
  3647  007BA4  2EE8               	decfsz	wreg,f,c
  3648  007BA6  D7FE               	goto	u3557
  3649  007BA8  2E3C               	decfsz	??_main& (0+255),f,c
  3650  007BAA  D7FC               	goto	u3557
  3651  007BAC                     l3592:
  3652                           
  3653                           ;main.c: 532: }
  3654                           ;main.c: 534: if(PORTAbits.RA1==1)
  3655  007BAC  A280               	btfss	3968,1,c	;volatile
  3656  007BAE  D00B               	goto	l206
  3657                           
  3658                           ;main.c: 535: {
  3659                           ;main.c: 536: B--;
  3660  007BB0  0100               	movlb	0	; () banked
  3661  007BB2  07D4               	decf	_B& (0+255),f,b
  3662  007BB4  A0D8               	btfss	status,0,c
  3663  007BB6  07D5               	decf	(_B+1)& (0+255),f,b
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;main.c: 537: _delay((unsigned long)((10)*(4000000/4000.0)));
  3667  007BB8  0E0D               	movlw	13
  3668  007BBA  6E3C               	movwf	??_main& (0+255),c
  3669  007BBC  0EFC               	movlw	252
  3670  007BBE                     u3567:
  3671  007BBE  2EE8               	decfsz	wreg,f,c
  3672  007BC0  D7FE               	goto	u3567
  3673  007BC2  2E3C               	decfsz	??_main& (0+255),f,c
  3674  007BC4  D7FC               	goto	u3567
  3675  007BC6                     l206:
  3676                           
  3677                           ;main.c: 538: }
  3678                           ;main.c: 539: if(B>2){
  3679  007BC6  0E03               	movlw	3
  3680  007BC8  0100               	movlb	0	; () banked
  3681  007BCA  5DD4               	subwf	_B& (0+255),w,b
  3682  007BCC  0E00               	movlw	0
  3683  007BCE  0100               	movlb	0	; () banked
  3684  007BD0  59D5               	subwfb	(_B+1)& (0+255),w,b
  3685  007BD2  A0D8               	btfss	status,0,c
  3686  007BD4  D006               	goto	l3602
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;main.c: 540: B=0;
  3690  007BD6  0E00               	movlw	0
  3691  007BD8  0100               	movlb	0	; () banked
  3692  007BDA  6FD5               	movwf	(_B+1)& (0+255),b
  3693  007BDC  0E00               	movlw	0
  3694  007BDE  0100               	movlb	0	; () banked
  3695  007BE0  6FD4               	movwf	_B& (0+255),b
  3696  007BE2                     l3602:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;main.c: 545: }
  3700                           ;main.c: 546: if(PORTAbits.RA1==1 && PORTAbits.RA0==1 ){
  3701  007BE2  B280               	btfsc	3968,1,c	;volatile
  3702                           
  3703                           ; BSR set to: 0
  3704  007BE4  A080               	btfss	3968,0,c	;volatile
  3705  007BE6  D006               	goto	l3608
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;main.c: 547: w=1;
  3709  007BE8  0E00               	movlw	0
  3710  007BEA  0100               	movlb	0	; () banked
  3711  007BEC  6FE3               	movwf	(_w+1)& (0+255),b
  3712  007BEE  0E01               	movlw	1
  3713  007BF0  0100               	movlb	0	; () banked
  3714  007BF2  6FE2               	movwf	_w& (0+255),b
  3715  007BF4                     l3608:
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;main.c: 548: }
  3719                           ;main.c: 549: }while(w==0);
  3720  007BF4  0100               	movlb	0	; () banked
  3721  007BF6  51E3               	movf	(_w+1)& (0+255),w,b
  3722  007BF8  11E2               	iorwf	_w& (0+255),w,b
  3723  007BFA  B4D8               	btfsc	status,2,c
  3724  007BFC  D6F8               	goto	l3500
  3725  007BFE                     l3610:
  3726                           
  3727                           ;main.c: 551: }
  3728                           ;main.c: 554: }
  3729                           ;main.c: 556: if(B==3){
  3730  007BFE  0100               	movlb	0	; () banked
  3731  007C00  51D4               	movf	_B& (0+255),w,b
  3732  007C02  0A03               	xorlw	3
  3733  007C04  11D5               	iorwf	(_B+1)& (0+255),w,b
  3734  007C06  A4D8               	btfss	status,2,c
  3735  007C08  D123               	goto	l3732
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;main.c: 557: Lcd_Init();
  3739  007C0A  EC7D  F032         	call	_Lcd_Init	;wreg free
  3740                           
  3741                           ;main.c: 558: Lcd_Cmd(1);
  3742  007C0E  0E01               	movlw	1
  3743  007C10  ECEA  F031         	call	_Lcd_Cmd
  3744                           
  3745                           ;main.c: 559: Lcd_Cmd(12);
  3746  007C14  0E0C               	movlw	12
  3747  007C16  ECEA  F031         	call	_Lcd_Cmd
  3748                           
  3749                           ;main.c: 560: Lcd_Out2(1,1,"=> Triangular");
  3750  007C1A  0E01               	movlw	1
  3751  007C1C  6E04               	movwf	Lcd_Out2@x,c
  3752  007C1E  0E7E               	movlw	high STR_83
  3753  007C20  6E06               	movwf	Lcd_Out2@buffer+1,c
  3754  007C22  0E9F               	movlw	low STR_83
  3755  007C24  6E05               	movwf	Lcd_Out2@buffer,c
  3756  007C26  0E01               	movlw	1
  3757  007C28  ECAC  F02D         	call	_Lcd_Out2
  3758                           
  3759                           ;main.c: 561: tm_1s();
  3760  007C2C  EC21  F02E         	call	_tm_1s	;wreg free
  3761                           
  3762                           ;main.c: 564: if(PORTAbits.RA2==1){
  3763  007C30  A480               	btfss	3968,2,c	;volatile
  3764  007C32  D10E               	goto	l3732
  3765                           
  3766                           ;main.c: 565: w=0;
  3767  007C34  0E00               	movlw	0
  3768  007C36  0100               	movlb	0	; () banked
  3769  007C38  6FE3               	movwf	(_w+1)& (0+255),b
  3770  007C3A  0E00               	movlw	0
  3771  007C3C  0100               	movlb	0	; () banked
  3772  007C3E  6FE2               	movwf	_w& (0+255),b
  3773  007C40                     l3622:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;main.c: 568: if(B==0){
  3777  007C40  0100               	movlb	0	; () banked
  3778  007C42  51D5               	movf	(_B+1)& (0+255),w,b
  3779  007C44  11D4               	iorwf	_B& (0+255),w,b
  3780  007C46  A4D8               	btfss	status,2,c
  3781  007C48  D044               	goto	l3652
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;main.c: 569: Lcd_Init();
  3785  007C4A  EC7D  F032         	call	_Lcd_Init	;wreg free
  3786                           
  3787                           ;main.c: 570: Lcd_Cmd(1);
  3788  007C4E  0E01               	movlw	1
  3789  007C50  ECEA  F031         	call	_Lcd_Cmd
  3790                           
  3791                           ;main.c: 571: Lcd_Cmd(12);
  3792  007C54  0E0C               	movlw	12
  3793  007C56  ECEA  F031         	call	_Lcd_Cmd
  3794                           
  3795                           ;main.c: 572: Lcd_Out2(1,1,"=> Trin 1");
  3796  007C5A  0E01               	movlw	1
  3797  007C5C  6E04               	movwf	Lcd_Out2@x,c
  3798  007C5E  0E7F               	movlw	high STR_84
  3799  007C60  6E06               	movwf	Lcd_Out2@buffer+1,c
  3800  007C62  0E15               	movlw	low STR_84
  3801  007C64  6E05               	movwf	Lcd_Out2@buffer,c
  3802  007C66  0E01               	movlw	1
  3803  007C68  ECAC  F02D         	call	_Lcd_Out2
  3804                           
  3805                           ;main.c: 573: Lcd_Out2(2,1,"   Trin 2");
  3806  007C6C  0E01               	movlw	1
  3807  007C6E  6E04               	movwf	Lcd_Out2@x,c
  3808  007C70  0E7F               	movlw	high STR_85
  3809  007C72  6E06               	movwf	Lcd_Out2@buffer+1,c
  3810  007C74  0E1F               	movlw	low STR_85
  3811  007C76  6E05               	movwf	Lcd_Out2@buffer,c
  3812  007C78  0E02               	movlw	2
  3813  007C7A  ECAC  F02D         	call	_Lcd_Out2
  3814                           
  3815                           ;main.c: 574: tm_1s();
  3816  007C7E  EC21  F02E         	call	_tm_1s	;wreg free
  3817                           
  3818                           ;main.c: 575: if(PORTAbits.RA2==1){
  3819  007C82  A480               	btfss	3968,2,c	;volatile
  3820  007C84  D026               	goto	l3652
  3821                           
  3822                           ;main.c: 576: q=0;
  3823  007C86  0E00               	movlw	0
  3824  007C88  0100               	movlb	0	; () banked
  3825  007C8A  6FDD               	movwf	(_q+1)& (0+255),b
  3826  007C8C  0E00               	movlw	0
  3827  007C8E  0100               	movlb	0	; () banked
  3828  007C90  6FDC               	movwf	_q& (0+255),b
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;main.c: 577: Lcd_Init();
  3832  007C92  EC7D  F032         	call	_Lcd_Init	;wreg free
  3833                           
  3834                           ;main.c: 578: Lcd_Cmd(1);
  3835  007C96  0E01               	movlw	1
  3836  007C98  ECEA  F031         	call	_Lcd_Cmd
  3837                           
  3838                           ;main.c: 579: Lcd_Cmd(12);
  3839  007C9C  0E0C               	movlw	12
  3840  007C9E  ECEA  F031         	call	_Lcd_Cmd
  3841                           
  3842                           ;main.c: 580: Lcd_Out2(1,1," Trin 1");
  3843  007CA2  0E01               	movlw	1
  3844  007CA4  6E04               	movwf	Lcd_Out2@x,c
  3845  007CA6  0E7F               	movlw	high (STR_87+2)
  3846  007CA8  6E06               	movwf	Lcd_Out2@buffer+1,c
  3847  007CAA  0E0D               	movlw	low (STR_87+2)
  3848  007CAC  6E05               	movwf	Lcd_Out2@buffer,c
  3849  007CAE  0E01               	movlw	1
  3850  007CB0  ECAC  F02D         	call	_Lcd_Out2
  3851  007CB4                     l3644:
  3852                           
  3853                           ;main.c: 582: TRI_1();
  3854  007CB4  ECEF  F030         	call	_TRI_1	;wreg free
  3855                           
  3856                           ;main.c: 583: if(PORTAbits.RA0==1){
  3857  007CB8  A080               	btfss	3968,0,c	;volatile
  3858  007CBA  D006               	goto	l3650
  3859                           
  3860                           ;main.c: 584: q=1;
  3861  007CBC  0E00               	movlw	0
  3862  007CBE  0100               	movlb	0	; () banked
  3863  007CC0  6FDD               	movwf	(_q+1)& (0+255),b
  3864  007CC2  0E01               	movlw	1
  3865  007CC4  0100               	movlb	0	; () banked
  3866  007CC6  6FDC               	movwf	_q& (0+255),b
  3867  007CC8                     l3650:
  3868                           
  3869                           ;main.c: 585: }
  3870                           ;main.c: 586: }while(q==0);
  3871  007CC8  0100               	movlb	0	; () banked
  3872  007CCA  51DD               	movf	(_q+1)& (0+255),w,b
  3873  007CCC  11DC               	iorwf	_q& (0+255),w,b
  3874  007CCE  B4D8               	btfsc	status,2,c
  3875  007CD0  D7F1               	goto	l3644
  3876  007CD2                     l3652:
  3877                           
  3878                           ;main.c: 587: }
  3879                           ;main.c: 588: }
  3880                           ;main.c: 590: if(B==1){
  3881  007CD2  0100               	movlb	0	; () banked
  3882  007CD4  05D4               	decf	_B& (0+255),w,b
  3883  007CD6  11D5               	iorwf	(_B+1)& (0+255),w,b
  3884  007CD8  A4D8               	btfss	status,2,c
  3885  007CDA  D044               	goto	l3682
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;main.c: 591: Lcd_Init();
  3889  007CDC  EC7D  F032         	call	_Lcd_Init	;wreg free
  3890                           
  3891                           ;main.c: 592: Lcd_Cmd(1);
  3892  007CE0  0E01               	movlw	1
  3893  007CE2  ECEA  F031         	call	_Lcd_Cmd
  3894                           
  3895                           ;main.c: 593: Lcd_Cmd(12);
  3896  007CE6  0E0C               	movlw	12
  3897  007CE8  ECEA  F031         	call	_Lcd_Cmd
  3898                           
  3899                           ;main.c: 594: Lcd_Out2(1,1,"   Trin 1");
  3900  007CEC  0E01               	movlw	1
  3901  007CEE  6E04               	movwf	Lcd_Out2@x,c
  3902  007CF0  0E7F               	movlw	high STR_87
  3903  007CF2  6E06               	movwf	Lcd_Out2@buffer+1,c
  3904  007CF4  0E0B               	movlw	low STR_87
  3905  007CF6  6E05               	movwf	Lcd_Out2@buffer,c
  3906  007CF8  0E01               	movlw	1
  3907  007CFA  ECAC  F02D         	call	_Lcd_Out2
  3908                           
  3909                           ;main.c: 595: Lcd_Out2(2,1,"=> Trin 2");
  3910  007CFE  0E01               	movlw	1
  3911  007D00  6E04               	movwf	Lcd_Out2@x,c
  3912  007D02  0E7F               	movlw	high STR_88
  3913  007D04  6E06               	movwf	Lcd_Out2@buffer+1,c
  3914  007D06  0E29               	movlw	low STR_88
  3915  007D08  6E05               	movwf	Lcd_Out2@buffer,c
  3916  007D0A  0E02               	movlw	2
  3917  007D0C  ECAC  F02D         	call	_Lcd_Out2
  3918                           
  3919                           ;main.c: 596: tm_1s();
  3920  007D10  EC21  F02E         	call	_tm_1s	;wreg free
  3921                           
  3922                           ;main.c: 597: if(PORTAbits.RA2==1){
  3923  007D14  A480               	btfss	3968,2,c	;volatile
  3924  007D16  D026               	goto	l3682
  3925                           
  3926                           ;main.c: 598: q=0;
  3927  007D18  0E00               	movlw	0
  3928  007D1A  0100               	movlb	0	; () banked
  3929  007D1C  6FDD               	movwf	(_q+1)& (0+255),b
  3930  007D1E  0E00               	movlw	0
  3931  007D20  0100               	movlb	0	; () banked
  3932  007D22  6FDC               	movwf	_q& (0+255),b
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;main.c: 599: Lcd_Init();
  3936  007D24  EC7D  F032         	call	_Lcd_Init	;wreg free
  3937                           
  3938                           ;main.c: 600: Lcd_Cmd(1);
  3939  007D28  0E01               	movlw	1
  3940  007D2A  ECEA  F031         	call	_Lcd_Cmd
  3941                           
  3942                           ;main.c: 601: Lcd_Cmd(12);
  3943  007D2E  0E0C               	movlw	12
  3944  007D30  ECEA  F031         	call	_Lcd_Cmd
  3945                           
  3946                           ;main.c: 602: Lcd_Out2(1,1," Trin 2");
  3947  007D34  0E01               	movlw	1
  3948  007D36  6E04               	movwf	Lcd_Out2@x,c
  3949  007D38  0E7F               	movlw	high (STR_85+2)
  3950  007D3A  6E06               	movwf	Lcd_Out2@buffer+1,c
  3951  007D3C  0E21               	movlw	low (STR_85+2)
  3952  007D3E  6E05               	movwf	Lcd_Out2@buffer,c
  3953  007D40  0E01               	movlw	1
  3954  007D42  ECAC  F02D         	call	_Lcd_Out2
  3955  007D46                     l3674:
  3956                           
  3957                           ;main.c: 604: TRI_2();
  3958  007D46  ECA7  F033         	call	_TRI_2	;wreg free
  3959                           
  3960                           ;main.c: 605: if(PORTAbits.RA0==1){
  3961  007D4A  A080               	btfss	3968,0,c	;volatile
  3962  007D4C  D006               	goto	l3680
  3963                           
  3964                           ;main.c: 606: q=1;
  3965  007D4E  0E00               	movlw	0
  3966  007D50  0100               	movlb	0	; () banked
  3967  007D52  6FDD               	movwf	(_q+1)& (0+255),b
  3968  007D54  0E01               	movlw	1
  3969  007D56  0100               	movlb	0	; () banked
  3970  007D58  6FDC               	movwf	_q& (0+255),b
  3971  007D5A                     l3680:
  3972                           
  3973                           ;main.c: 607: }
  3974                           ;main.c: 608: }while(q==0);
  3975  007D5A  0100               	movlb	0	; () banked
  3976  007D5C  51DD               	movf	(_q+1)& (0+255),w,b
  3977  007D5E  11DC               	iorwf	_q& (0+255),w,b
  3978  007D60  B4D8               	btfsc	status,2,c
  3979  007D62  D7F1               	goto	l3674
  3980  007D64                     l3682:
  3981                           
  3982                           ;main.c: 609: }
  3983                           ;main.c: 610: }
  3984                           ;main.c: 612: if(B==2){
  3985  007D64  0100               	movlb	0	; () banked
  3986  007D66  51D4               	movf	_B& (0+255),w,b
  3987  007D68  0A02               	xorlw	2
  3988  007D6A  11D5               	iorwf	(_B+1)& (0+255),w,b
  3989  007D6C  A4D8               	btfss	status,2,c
  3990  007D6E  D03B               	goto	l224
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;main.c: 613: Lcd_Init();
  3994  007D70  EC7D  F032         	call	_Lcd_Init	;wreg free
  3995                           
  3996                           ;main.c: 614: Lcd_Cmd(1);
  3997  007D74  0E01               	movlw	1
  3998  007D76  ECEA  F031         	call	_Lcd_Cmd
  3999                           
  4000                           ;main.c: 615: Lcd_Cmd(12);
  4001  007D7A  0E0C               	movlw	12
  4002  007D7C  ECEA  F031         	call	_Lcd_Cmd
  4003                           
  4004                           ;main.c: 616: Lcd_Out2(1,1,"=> Trin 3");
  4005  007D80  0E01               	movlw	1
  4006  007D82  6E04               	movwf	Lcd_Out2@x,c
  4007  007D84  0E7F               	movlw	high STR_90
  4008  007D86  6E06               	movwf	Lcd_Out2@buffer+1,c
  4009  007D88  0E33               	movlw	low STR_90
  4010  007D8A  6E05               	movwf	Lcd_Out2@buffer,c
  4011  007D8C  0E01               	movlw	1
  4012  007D8E  ECAC  F02D         	call	_Lcd_Out2
  4013                           
  4014                           ;main.c: 617: tm_1s();
  4015  007D92  EC21  F02E         	call	_tm_1s	;wreg free
  4016                           
  4017                           ;main.c: 618: if(PORTAbits.RA2==1){
  4018  007D96  A480               	btfss	3968,2,c	;volatile
  4019  007D98  D026               	goto	l224
  4020                           
  4021                           ;main.c: 619: q=0;
  4022  007D9A  0E00               	movlw	0
  4023  007D9C  0100               	movlb	0	; () banked
  4024  007D9E  6FDD               	movwf	(_q+1)& (0+255),b
  4025  007DA0  0E00               	movlw	0
  4026  007DA2  0100               	movlb	0	; () banked
  4027  007DA4  6FDC               	movwf	_q& (0+255),b
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;main.c: 620: Lcd_Init();
  4031  007DA6  EC7D  F032         	call	_Lcd_Init	;wreg free
  4032                           
  4033                           ;main.c: 621: Lcd_Cmd(1);
  4034  007DAA  0E01               	movlw	1
  4035  007DAC  ECEA  F031         	call	_Lcd_Cmd
  4036                           
  4037                           ;main.c: 622: Lcd_Cmd(12);
  4038  007DB0  0E0C               	movlw	12
  4039  007DB2  ECEA  F031         	call	_Lcd_Cmd
  4040                           
  4041                           ;main.c: 623: Lcd_Out2(1,1," Trin 3");
  4042  007DB6  0E01               	movlw	1
  4043  007DB8  6E04               	movwf	Lcd_Out2@x,c
  4044  007DBA  0E7F               	movlw	high (STR_90+2)
  4045  007DBC  6E06               	movwf	Lcd_Out2@buffer+1,c
  4046  007DBE  0E35               	movlw	low (STR_90+2)
  4047  007DC0  6E05               	movwf	Lcd_Out2@buffer,c
  4048  007DC2  0E01               	movlw	1
  4049  007DC4  ECAC  F02D         	call	_Lcd_Out2
  4050  007DC8                     l3702:
  4051                           
  4052                           ;main.c: 625: TRI_3();
  4053  007DC8  EC4C  F034         	call	_TRI_3	;wreg free
  4054                           
  4055                           ;main.c: 626: if(PORTAbits.RA0==1){
  4056  007DCC  A080               	btfss	3968,0,c	;volatile
  4057  007DCE  D006               	goto	l3708
  4058                           
  4059                           ;main.c: 627: q=1;
  4060  007DD0  0E00               	movlw	0
  4061  007DD2  0100               	movlb	0	; () banked
  4062  007DD4  6FDD               	movwf	(_q+1)& (0+255),b
  4063  007DD6  0E01               	movlw	1
  4064  007DD8  0100               	movlb	0	; () banked
  4065  007DDA  6FDC               	movwf	_q& (0+255),b
  4066  007DDC                     l3708:
  4067                           
  4068                           ;main.c: 628: }
  4069                           ;main.c: 629: }while(q==0);
  4070  007DDC  0100               	movlb	0	; () banked
  4071  007DDE  51DD               	movf	(_q+1)& (0+255),w,b
  4072  007DE0  11DC               	iorwf	_q& (0+255),w,b
  4073  007DE2  B4D8               	btfsc	status,2,c
  4074  007DE4  D7F1               	goto	l3702
  4075  007DE6                     l224:
  4076                           
  4077                           ;main.c: 630: }
  4078                           ;main.c: 631: }
  4079                           ;main.c: 633: if(PORTAbits.RA0==1)
  4080  007DE6  A080               	btfss	3968,0,c	;volatile
  4081  007DE8  D00A               	goto	l3714
  4082                           
  4083                           ;main.c: 634: {
  4084                           ;main.c: 635: B++;
  4085  007DEA  0100               	movlb	0	; () banked
  4086  007DEC  4BD4               	infsnz	_B& (0+255),f,b
  4087  007DEE  2BD5               	incf	(_B+1)& (0+255),f,b
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;main.c: 636: _delay((unsigned long)((10)*(4000000/4000.0)));
  4091  007DF0  0E0D               	movlw	13
  4092  007DF2  6E3C               	movwf	??_main& (0+255),c
  4093  007DF4  0EFC               	movlw	252
  4094  007DF6                     u3577:
  4095  007DF6  2EE8               	decfsz	wreg,f,c
  4096  007DF8  D7FE               	goto	u3577
  4097  007DFA  2E3C               	decfsz	??_main& (0+255),f,c
  4098  007DFC  D7FC               	goto	u3577
  4099  007DFE                     l3714:
  4100                           
  4101                           ;main.c: 637: }
  4102                           ;main.c: 639: if(PORTAbits.RA1==1)
  4103  007DFE  A280               	btfss	3968,1,c	;volatile
  4104  007E00  D00B               	goto	l230
  4105                           
  4106                           ;main.c: 640: {
  4107                           ;main.c: 641: B--;
  4108  007E02  0100               	movlb	0	; () banked
  4109  007E04  07D4               	decf	_B& (0+255),f,b
  4110  007E06  A0D8               	btfss	status,0,c
  4111  007E08  07D5               	decf	(_B+1)& (0+255),f,b
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;main.c: 642: _delay((unsigned long)((10)*(4000000/4000.0)));
  4115  007E0A  0E0D               	movlw	13
  4116  007E0C  6E3C               	movwf	??_main& (0+255),c
  4117  007E0E  0EFC               	movlw	252
  4118  007E10                     u3587:
  4119  007E10  2EE8               	decfsz	wreg,f,c
  4120  007E12  D7FE               	goto	u3587
  4121  007E14  2E3C               	decfsz	??_main& (0+255),f,c
  4122  007E16  D7FC               	goto	u3587
  4123  007E18                     l230:
  4124                           
  4125                           ;main.c: 643: }
  4126                           ;main.c: 644: if(B>2){
  4127  007E18  0E03               	movlw	3
  4128  007E1A  0100               	movlb	0	; () banked
  4129  007E1C  5DD4               	subwf	_B& (0+255),w,b
  4130  007E1E  0E00               	movlw	0
  4131  007E20  0100               	movlb	0	; () banked
  4132  007E22  59D5               	subwfb	(_B+1)& (0+255),w,b
  4133  007E24  A0D8               	btfss	status,0,c
  4134  007E26  D006               	goto	l3724
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;main.c: 645: B=0;
  4138  007E28  0E00               	movlw	0
  4139  007E2A  0100               	movlb	0	; () banked
  4140  007E2C  6FD5               	movwf	(_B+1)& (0+255),b
  4141  007E2E  0E00               	movlw	0
  4142  007E30  0100               	movlb	0	; () banked
  4143  007E32  6FD4               	movwf	_B& (0+255),b
  4144  007E34                     l3724:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;main.c: 650: }
  4148                           ;main.c: 651: if(PORTAbits.RA1==1 && PORTAbits.RA0==1 ){
  4149  007E34  B280               	btfsc	3968,1,c	;volatile
  4150                           
  4151                           ; BSR set to: 0
  4152  007E36  A080               	btfss	3968,0,c	;volatile
  4153  007E38  D006               	goto	l3730
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;main.c: 652: w=1;
  4157  007E3A  0E00               	movlw	0
  4158  007E3C  0100               	movlb	0	; () banked
  4159  007E3E  6FE3               	movwf	(_w+1)& (0+255),b
  4160  007E40  0E01               	movlw	1
  4161  007E42  0100               	movlb	0	; () banked
  4162  007E44  6FE2               	movwf	_w& (0+255),b
  4163  007E46                     l3730:
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;main.c: 653: }
  4167                           ;main.c: 654: }while(w==0);
  4168  007E46  0100               	movlb	0	; () banked
  4169  007E48  51E3               	movf	(_w+1)& (0+255),w,b
  4170  007E4A  11E2               	iorwf	_w& (0+255),w,b
  4171  007E4C  B4D8               	btfsc	status,2,c
  4172  007E4E  D6F8               	goto	l3622
  4173  007E50                     l3732:
  4174                           
  4175                           ;main.c: 656: }
  4176                           ;main.c: 658: }
  4177                           ;main.c: 661: if(B>3){
  4178  007E50  0E04               	movlw	4
  4179  007E52  0100               	movlb	0	; () banked
  4180  007E54  5DD4               	subwf	_B& (0+255),w,b
  4181  007E56  0E00               	movlw	0
  4182  007E58  0100               	movlb	0	; () banked
  4183  007E5A  59D5               	subwfb	(_B+1)& (0+255),w,b
  4184  007E5C  A0D8               	btfss	status,0,c
  4185  007E5E  EF1D  F037         	goto	l3040
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;main.c: 662: B=1;
  4189  007E62  0E00               	movlw	0
  4190  007E64  0100               	movlb	0	; () banked
  4191  007E66  6FD5               	movwf	(_B+1)& (0+255),b
  4192  007E68  0E01               	movlw	1
  4193  007E6A  0100               	movlb	0	; () banked
  4194  007E6C  6FD4               	movwf	_B& (0+255),b
  4195  007E6E  EF1D  F037         	goto	l3040
  4196  007E72                     __end_of_main:
  4197                           	opt stack 0
  4198                           tblptru	equ	0xFF8
  4199                           tblptrh	equ	0xFF7
  4200                           tblptrl	equ	0xFF6
  4201                           tablat	equ	0xFF5
  4202                           postinc0	equ	0xFEE
  4203                           wreg	equ	0xFE8
  4204                           postdec1	equ	0xFE5
  4205                           fsr1l	equ	0xFE1
  4206                           status	equ	0xFD8
  4207                           
  4208 ;; *************** function _tm_1s *****************
  4209 ;; Defined at:
  4210 ;;		line 4 in file "delays.h"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;		None               void
  4217 ;; Registers used:
  4218 ;;		wreg
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4226 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4227 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4228 ;;Total ram usage:        1 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_main
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text1
  4238  005C42                     __ptext1:
  4239                           	opt stack 0
  4240  005C42                     _tm_1s:
  4241                           	opt stack 30
  4242                           
  4243                           ;delays.h: 5: _delay((unsigned long)((100)*(4000000/4000.0)));
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;incstack = 0
  4247  005C42  0E82               	movlw	130
  4248  005C44  6E01               	movwf	??_tm_1s& (0+255),c
  4249  005C46  0EDE               	movlw	222
  4250  005C48                     u3597:
  4251  005C48  2EE8               	decfsz	wreg,f,c
  4252  005C4A  D7FE               	goto	u3597
  4253  005C4C  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4254  005C4E  D7FC               	goto	u3597
  4255                           
  4256                           ;delays.h: 6: _delay((unsigned long)((100)*(4000000/4000.0)));
  4257  005C50  0E82               	movlw	130
  4258  005C52  6E01               	movwf	??_tm_1s& (0+255),c
  4259  005C54  0EDE               	movlw	222
  4260  005C56                     u3607:
  4261  005C56  2EE8               	decfsz	wreg,f,c
  4262  005C58  D7FE               	goto	u3607
  4263  005C5A  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4264  005C5C  D7FC               	goto	u3607
  4265                           
  4266                           ;delays.h: 7: _delay((unsigned long)((100)*(4000000/4000.0)));
  4267  005C5E  0E82               	movlw	130
  4268  005C60  6E01               	movwf	??_tm_1s& (0+255),c
  4269  005C62  0EDE               	movlw	222
  4270  005C64                     u3617:
  4271  005C64  2EE8               	decfsz	wreg,f,c
  4272  005C66  D7FE               	goto	u3617
  4273  005C68  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4274  005C6A  D7FC               	goto	u3617
  4275                           
  4276                           ;delays.h: 8: _delay((unsigned long)((100)*(4000000/4000.0)));
  4277  005C6C  0E82               	movlw	130
  4278  005C6E  6E01               	movwf	??_tm_1s& (0+255),c
  4279  005C70  0EDE               	movlw	222
  4280  005C72                     u3627:
  4281  005C72  2EE8               	decfsz	wreg,f,c
  4282  005C74  D7FE               	goto	u3627
  4283  005C76  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4284  005C78  D7FC               	goto	u3627
  4285                           
  4286                           ;delays.h: 9: _delay((unsigned long)((100)*(4000000/4000.0)));
  4287  005C7A  0E82               	movlw	130
  4288  005C7C  6E01               	movwf	??_tm_1s& (0+255),c
  4289  005C7E  0EDE               	movlw	222
  4290  005C80                     u3637:
  4291  005C80  2EE8               	decfsz	wreg,f,c
  4292  005C82  D7FE               	goto	u3637
  4293  005C84  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4294  005C86  D7FC               	goto	u3637
  4295                           
  4296                           ;delays.h: 10: _delay((unsigned long)((100)*(4000000/4000.0)));
  4297  005C88  0E82               	movlw	130
  4298  005C8A  6E01               	movwf	??_tm_1s& (0+255),c
  4299  005C8C  0EDE               	movlw	222
  4300  005C8E                     u3647:
  4301  005C8E  2EE8               	decfsz	wreg,f,c
  4302  005C90  D7FE               	goto	u3647
  4303  005C92  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4304  005C94  D7FC               	goto	u3647
  4305                           
  4306                           ;delays.h: 11: _delay((unsigned long)((100)*(4000000/4000.0)));
  4307  005C96  0E82               	movlw	130
  4308  005C98  6E01               	movwf	??_tm_1s& (0+255),c
  4309  005C9A  0EDE               	movlw	222
  4310  005C9C                     u3657:
  4311  005C9C  2EE8               	decfsz	wreg,f,c
  4312  005C9E  D7FE               	goto	u3657
  4313  005CA0  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4314  005CA2  D7FC               	goto	u3657
  4315                           
  4316                           ;delays.h: 12: _delay((unsigned long)((100)*(4000000/4000.0)));
  4317  005CA4  0E82               	movlw	130
  4318  005CA6  6E01               	movwf	??_tm_1s& (0+255),c
  4319  005CA8  0EDE               	movlw	222
  4320  005CAA                     u3667:
  4321  005CAA  2EE8               	decfsz	wreg,f,c
  4322  005CAC  D7FE               	goto	u3667
  4323  005CAE  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4324  005CB0  D7FC               	goto	u3667
  4325                           
  4326                           ;delays.h: 13: _delay((unsigned long)((100)*(4000000/4000.0)));
  4327  005CB2  0E82               	movlw	130
  4328  005CB4  6E01               	movwf	??_tm_1s& (0+255),c
  4329  005CB6  0EDE               	movlw	222
  4330  005CB8                     u3677:
  4331  005CB8  2EE8               	decfsz	wreg,f,c
  4332  005CBA  D7FE               	goto	u3677
  4333  005CBC  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4334  005CBE  D7FC               	goto	u3677
  4335                           
  4336                           ;delays.h: 14: _delay((unsigned long)((100)*(4000000/4000.0)));
  4337  005CC0  0E82               	movlw	130
  4338  005CC2  6E01               	movwf	??_tm_1s& (0+255),c
  4339  005CC4  0EDE               	movlw	222
  4340  005CC6                     u3687:
  4341  005CC6  2EE8               	decfsz	wreg,f,c
  4342  005CC8  D7FE               	goto	u3687
  4343  005CCA  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4344  005CCC  D7FC               	goto	u3687
  4345  005CCE  0012               	return	
  4346  005CD0                     __end_of_tm_1s:
  4347                           	opt stack 0
  4348                           tblptru	equ	0xFF8
  4349                           tblptrh	equ	0xFF7
  4350                           tblptrl	equ	0xFF6
  4351                           tablat	equ	0xFF5
  4352                           postinc0	equ	0xFEE
  4353                           wreg	equ	0xFE8
  4354                           postdec1	equ	0xFE5
  4355                           fsr1l	equ	0xFE1
  4356                           status	equ	0xFD8
  4357                           
  4358 ;; *************** function _lcd_goto *****************
  4359 ;; Defined at:
  4360 ;;		line 161 in file "LCD.h"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  x               2    3[COMRAM] int 
  4363 ;;  y               2    5[COMRAM] int 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  data            1    9[COMRAM] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;		None               void
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4375 ;;      Params:         4       0       0       0       0       0       0       0       0
  4376 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4377 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4378 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4379 ;;Total ram usage:        7 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    1
  4382 ;; This function calls:
  4383 ;;		_Lcd_Cmd
  4384 ;; This function is called by:
  4385 ;;		_main
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text2
  4390  0059F0                     __ptext2:
  4391                           	opt stack 0
  4392  0059F0                     _lcd_goto:
  4393                           	opt stack 29
  4394                           
  4395                           ;LCD.h: 162: unsigned char data;
  4396                           ;LCD.h: 163: switch (y) {
  4397                           
  4398                           ;incstack = 0
  4399  0059F0  D00D               	goto	l2718
  4400  0059F2                     l2708:
  4401  0059F2  5004               	movf	lcd_goto@x,w,c
  4402  0059F4  0F80               	addlw	128
  4403  0059F6  D008               	goto	L11
  4404  0059F8                     l2710:
  4405  0059F8  5004               	movf	lcd_goto@x,w,c
  4406  0059FA  0FC0               	addlw	192
  4407  0059FC  D005               	goto	L11
  4408  0059FE                     l2712:
  4409  0059FE  5004               	movf	lcd_goto@x,w,c
  4410  005A00  0F94               	addlw	148
  4411  005A02  D002               	goto	L11
  4412  005A04                     l2714:
  4413  005A04  5004               	movf	lcd_goto@x,w,c
  4414  005A06  0FD4               	addlw	212
  4415  005A08                     L11:
  4416  005A08  6E0A               	movwf	lcd_goto@data,c
  4417  005A0A  D015               	goto	l2720
  4418  005A0C                     l2718:
  4419  005A0C  C006  F008         	movff	lcd_goto@y,??_lcd_goto
  4420  005A10  C007  F009         	movff	lcd_goto@y+1,??_lcd_goto+1
  4421                           
  4422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4423                           ; Switch size 1, requested type "space"
  4424                           ; Number of cases is 1, Range of values is 0 to 0
  4425                           ; switch strategies available:
  4426                           ; Name         Instructions Cycles
  4427                           ; simple_byte            4     3 (average)
  4428                           ;	Chosen strategy is simple_byte
  4429  005A14  5009               	movf	??_lcd_goto+1,w,c
  4430  005A16  0A00               	xorlw	0	; case 0
  4431  005A18  A4D8               	btfss	status,2,c
  4432  005A1A  D00D               	goto	l2720
  4433                           
  4434                           ; Switch size 1, requested type "space"
  4435                           ; Number of cases is 4, Range of values is 1 to 4
  4436                           ; switch strategies available:
  4437                           ; Name         Instructions Cycles
  4438                           ; simple_byte           13     7 (average)
  4439                           ;	Chosen strategy is simple_byte
  4440  005A1C  5008               	movf	??_lcd_goto,w,c
  4441  005A1E  0A01               	xorlw	1	; case 1
  4442  005A20  B4D8               	btfsc	status,2,c
  4443  005A22  D7E7               	goto	l2708
  4444  005A24  0A03               	xorlw	3	; case 2
  4445  005A26  B4D8               	btfsc	status,2,c
  4446  005A28  D7E7               	goto	l2710
  4447  005A2A  0A01               	xorlw	1	; case 3
  4448  005A2C  B4D8               	btfsc	status,2,c
  4449  005A2E  D7E7               	goto	l2712
  4450  005A30  0A07               	xorlw	7	; case 4
  4451  005A32  B4D8               	btfsc	status,2,c
  4452  005A34  D7E7               	goto	l2714
  4453  005A36                     l2720:
  4454                           
  4455                           ;LCD.h: 170: Lcd_Cmd(data);
  4456  005A36  500A               	movf	lcd_goto@data,w,c
  4457  005A38  ECEA  F031         	call	_Lcd_Cmd
  4458  005A3C  0012               	return	
  4459  005A3E                     __end_of_lcd_goto:
  4460                           	opt stack 0
  4461                           tblptru	equ	0xFF8
  4462                           tblptrh	equ	0xFF7
  4463                           tblptrl	equ	0xFF6
  4464                           tablat	equ	0xFF5
  4465                           postinc0	equ	0xFEE
  4466                           wreg	equ	0xFE8
  4467                           postdec1	equ	0xFE5
  4468                           fsr1l	equ	0xFE1
  4469                           status	equ	0xFD8
  4470                           
  4471 ;; *************** function ___wmul *****************
  4472 ;; Defined at:
  4473 ;;		line 15 in file "/opt/microchip/xc8/v1.32/sources/common/Umul16.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  multiplier      2    0[COMRAM] unsigned int 
  4476 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  product         2    4[COMRAM] unsigned int 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  2    0[COMRAM] unsigned int 
  4481 ;; Registers used:
  4482 ;;		wreg, status,2, status,0, prodl, prodh
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4488 ;;      Params:         4       0       0       0       0       0       0       0       0
  4489 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4491 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4492 ;;Total ram usage:        6 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		_main
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text3
  4502  005988                     __ptext3:
  4503                           	opt stack 0
  4504  005988                     ___wmul:
  4505                           	opt stack 30
  4506                           
  4507                           ;incstack = 0
  4508  005988  5001               	movf	___wmul@multiplier,w,c
  4509  00598A  0203               	mulwf	___wmul@multiplicand,c
  4510  00598C  CFF3 F005          	movff	prodl,___wmul@product
  4511  005990  CFF4 F006          	movff	prodh,___wmul@product+1
  4512  005994  5001               	movf	___wmul@multiplier,w,c
  4513  005996  0204               	mulwf	___wmul@multiplicand+1,c
  4514  005998  50F3               	movf	prodl,w,c
  4515  00599A  2606               	addwf	___wmul@product+1,f,c
  4516  00599C  5002               	movf	___wmul@multiplier+1,w,c
  4517  00599E  0203               	mulwf	___wmul@multiplicand,c
  4518  0059A0  50F3               	movf	prodl,w,c
  4519  0059A2  2606               	addwf	___wmul@product+1,f,c
  4520  0059A4  C005  F001         	movff	___wmul@product,?___wmul
  4521  0059A8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4522  0059AC  0012               	return	
  4523  0059AE                     __end_of___wmul:
  4524                           	opt stack 0
  4525                           tblptru	equ	0xFF8
  4526                           tblptrh	equ	0xFF7
  4527                           tblptrl	equ	0xFF6
  4528                           tablat	equ	0xFF5
  4529                           prodh	equ	0xFF4
  4530                           prodl	equ	0xFF3
  4531                           postinc0	equ	0xFEE
  4532                           wreg	equ	0xFE8
  4533                           postdec1	equ	0xFE5
  4534                           fsr1l	equ	0xFE1
  4535                           status	equ	0xFD8
  4536                           
  4537 ;; *************** function _TRI_3 *****************
  4538 ;; Defined at:
  4539 ;;		line 65 in file "TRIANGULAR.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  valoresSeno    40   13[COMRAM] int [20]
  4544 ;;  i               2   57[COMRAM] int 
  4545 ;;  j               2   55[COMRAM] int 
  4546 ;;  k               2   53[COMRAM] int 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;		None               void
  4549 ;; Registers used:
  4550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4556 ;;      Params:         0       0       0       0       0       0       0       0       0
  4557 ;;      Locals:        46       0       0       0       0       0       0       0       0
  4558 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4559 ;;      Totals:        51       0       0       0       0       0       0       0       0
  4560 ;;Total ram usage:       51 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    1
  4563 ;; This function calls:
  4564 ;;		___awdiv
  4565 ;; This function is called by:
  4566 ;;		_main
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text4
  4571  006898                     __ptext4:
  4572                           	opt stack 0
  4573  006898                     _TRI_3:
  4574                           	opt stack 29
  4575                           
  4576                           ;TRIANGULAR.c: 66: OSCCON=0b01010111;
  4577                           
  4578                           ;incstack = 0
  4579  006898  0E57               	movlw	87
  4580  00689A  6ED3               	movwf	4051,c	;volatile
  4581                           
  4582                           ;TRIANGULAR.c: 67: TRISAbits.RA6=0;
  4583  00689C  9C92               	bcf	3986,6,c	;volatile
  4584                           
  4585                           ;TRIANGULAR.c: 68: TRISCbits.RC2=0;
  4586  00689E  9494               	bcf	3988,2,c	;volatile
  4587                           
  4588                           ;TRIANGULAR.c: 69: int valoresSeno [20]= {10,20,30,40,50,60,70,80,90,100,90,80,70,60,50,
      +                          40,30,20,10,0};
  4589  0068A0  EE21  F078         	lfsr	2,TRI_3@F7364
  4590  0068A4  EE10  F00E         	lfsr	1,TRI_3@valoresSeno
  4591  0068A8  0E28               	movlw	40
  4592  0068AA                     u2511:
  4593  0068AA  CFDE FFE6          	movff	postinc2,postinc1
  4594  0068AE  2EE8               	decfsz	wreg,f,c
  4595  0068B0  D7FC               	goto	u2511
  4596                           
  4597                           ;TRIANGULAR.c: 70: int i, j,k;
  4598                           ;TRIANGULAR.c: 71: for (i=0;i<20;i++){
  4599  0068B2  0E00               	movlw	0
  4600  0068B4  6E3B               	movwf	TRI_3@i+1,c
  4601  0068B6  0E00               	movlw	0
  4602  0068B8  6E3A               	movwf	TRI_3@i,c
  4603  0068BA  503B               	movf	TRI_3@i+1,w,c
  4604  0068BC  0A80               	xorlw	128
  4605  0068BE  0F80               	addlw	-128
  4606  0068C0  0E14               	movlw	20
  4607  0068C2  B4D8               	btfsc	status,2,c
  4608  0068C4  5C3A               	subwf	TRI_3@i,w,c
  4609  0068C6  B0D8               	btfsc	status,0,c
  4610  0068C8  D02B               	goto	l3002
  4611                           
  4612                           ;TRIANGULAR.c: 72: valoresSeno [i]=valoresSeno [i]/4;
  4613  0068CA  0E0E               	movlw	low TRI_3@valoresSeno
  4614  0068CC  6E09               	movwf	??_TRI_3& (0+255),c
  4615  0068CE  0E00               	movlw	high TRI_3@valoresSeno
  4616  0068D0  6E0A               	movwf	(??_TRI_3+1)& (0+255),c
  4617  0068D2  90D8               	bcf	status,0,c
  4618  0068D4  343A               	rlcf	TRI_3@i,w,c
  4619  0068D6  6ED9               	movwf	fsr2l,c
  4620  0068D8  343B               	rlcf	TRI_3@i+1,w,c
  4621  0068DA  6EDA               	movwf	fsr2h,c
  4622  0068DC  5009               	movf	??_TRI_3,w,c
  4623  0068DE  26D9               	addwf	fsr2l,f,c
  4624  0068E0  500A               	movf	??_TRI_3+1,w,c
  4625  0068E2  22DA               	addwfc	fsr2h,f,c
  4626  0068E4  CFDE F001          	movff	postinc2,___awdiv@dividend
  4627  0068E8  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  4628  0068EC  0E00               	movlw	0
  4629  0068EE  6E04               	movwf	___awdiv@divisor+1,c
  4630  0068F0  0E04               	movlw	4
  4631  0068F2  6E03               	movwf	___awdiv@divisor,c
  4632  0068F4  ECB8  F02E         	call	___awdiv	;wreg free
  4633  0068F8  0E0E               	movlw	low TRI_3@valoresSeno
  4634  0068FA  6E0B               	movwf	(??_TRI_3+2)& (0+255),c
  4635  0068FC  0E00               	movlw	high TRI_3@valoresSeno
  4636  0068FE  6E0C               	movwf	(??_TRI_3+3)& (0+255),c
  4637  006900  90D8               	bcf	status,0,c
  4638  006902  343A               	rlcf	TRI_3@i,w,c
  4639  006904  6ED9               	movwf	fsr2l,c
  4640  006906  343B               	rlcf	TRI_3@i+1,w,c
  4641  006908  6EDA               	movwf	fsr2h,c
  4642  00690A  500B               	movf	??_TRI_3+2,w,c
  4643  00690C  26D9               	addwf	fsr2l,f,c
  4644  00690E  500C               	movf	??_TRI_3+3,w,c
  4645  006910  22DA               	addwfc	fsr2h,f,c
  4646  006912  C001  FFDE         	movff	?___awdiv,postinc2
  4647  006916  C002  FFDD         	movff	?___awdiv+1,postdec2
  4648  00691A  4A3A               	infsnz	TRI_3@i,f,c
  4649  00691C  2A3B               	incf	TRI_3@i+1,f,c
  4650  00691E  D7CD               	goto	L12
  4651  006920                     l3002:
  4652                           
  4653                           ;TRIANGULAR.c: 77: for (i=0;i<20;i++){
  4654  006920  0E00               	movlw	0
  4655  006922  6E3B               	movwf	TRI_3@i+1,c
  4656  006924  0E00               	movlw	0
  4657  006926  6E3A               	movwf	TRI_3@i,c
  4658  006928  503B               	movf	TRI_3@i+1,w,c
  4659  00692A  0A80               	xorlw	128
  4660  00692C  0F80               	addlw	-128
  4661  00692E  0E14               	movlw	20
  4662  006930  B4D8               	btfsc	status,2,c
  4663  006932  5C3A               	subwf	TRI_3@i,w,c
  4664  006934  B0D8               	btfsc	status,0,c
  4665  006936  0012               	return	
  4666                           
  4667                           ;TRIANGULAR.c: 78: for (j=0;j<valoresSeno[i];j++){
  4668  006938  0E00               	movlw	0
  4669  00693A  6E39               	movwf	TRI_3@j+1,c
  4670  00693C  0E00               	movlw	0
  4671  00693E  6E38               	movwf	TRI_3@j,c
  4672  006940  D004               	goto	l3012
  4673  006942                     l379:
  4674                           
  4675                           ;TRIANGULAR.c: 79: PORTCbits.RC2=1;
  4676  006942  8482               	bsf	3970,2,c	;volatile
  4677                           
  4678                           ;TRIANGULAR.c: 80: PORTAbits.RA6=1;
  4679  006944  8C80               	bsf	3968,6,c	;volatile
  4680  006946  4A38               	infsnz	TRI_3@j,f,c
  4681  006948  2A39               	incf	TRI_3@j+1,f,c
  4682  00694A                     l3012:
  4683  00694A  0E0E               	movlw	low TRI_3@valoresSeno
  4684  00694C  6E09               	movwf	??_TRI_3& (0+255),c
  4685  00694E  0E00               	movlw	high TRI_3@valoresSeno
  4686  006950  6E0A               	movwf	(??_TRI_3+1)& (0+255),c
  4687  006952  90D8               	bcf	status,0,c
  4688  006954  343A               	rlcf	TRI_3@i,w,c
  4689  006956  6ED9               	movwf	fsr2l,c
  4690  006958  343B               	rlcf	TRI_3@i+1,w,c
  4691  00695A  6EDA               	movwf	fsr2h,c
  4692  00695C  5009               	movf	??_TRI_3,w,c
  4693  00695E  26D9               	addwf	fsr2l,f,c
  4694  006960  500A               	movf	??_TRI_3+1,w,c
  4695  006962  22DA               	addwfc	fsr2h,f,c
  4696  006964  CFDE F00B          	movff	postinc2,??_TRI_3+2
  4697  006968  CFDD F00C          	movff	postdec2,??_TRI_3+3
  4698  00696C  5039               	movf	TRI_3@j+1,w,c
  4699  00696E  0A80               	xorlw	128
  4700  006970  6E0D               	movwf	(??_TRI_3+4)& (0+255),c
  4701  006972  500B               	movf	??_TRI_3+2,w,c
  4702  006974  5C38               	subwf	TRI_3@j,w,c
  4703  006976  500C               	movf	??_TRI_3+3,w,c
  4704  006978  0A80               	xorlw	128
  4705  00697A  580D               	subwfb	(??_TRI_3+4)& (0+255),w,c
  4706  00697C  A0D8               	btfss	status,0,c
  4707  00697E  D7E1               	goto	l379
  4708                           
  4709                           ;TRIANGULAR.c: 81: }
  4710                           ;TRIANGULAR.c: 82: k=100/4-valoresSeno[i];
  4711  006980  0E0E               	movlw	low TRI_3@valoresSeno
  4712  006982  6E09               	movwf	??_TRI_3& (0+255),c
  4713  006984  0E00               	movlw	high TRI_3@valoresSeno
  4714  006986  6E0A               	movwf	(??_TRI_3+1)& (0+255),c
  4715  006988  90D8               	bcf	status,0,c
  4716  00698A  343A               	rlcf	TRI_3@i,w,c
  4717  00698C  6ED9               	movwf	fsr2l,c
  4718  00698E  343B               	rlcf	TRI_3@i+1,w,c
  4719  006990  6EDA               	movwf	fsr2h,c
  4720  006992  5009               	movf	??_TRI_3,w,c
  4721  006994  26D9               	addwf	fsr2l,f,c
  4722  006996  500A               	movf	??_TRI_3+1,w,c
  4723  006998  22DA               	addwfc	fsr2h,f,c
  4724  00699A  CFDE F00B          	movff	postinc2,??_TRI_3+2
  4725  00699E  CFDD F00C          	movff	postdec2,??_TRI_3+3
  4726  0069A2  1E0B               	comf	??_TRI_3+2,f,c
  4727  0069A4  1E0C               	comf	??_TRI_3+3,f,c
  4728  0069A6  4A0B               	infsnz	??_TRI_3+2,f,c
  4729  0069A8  2A0C               	incf	??_TRI_3+3,f,c
  4730  0069AA  0E19               	movlw	25
  4731  0069AC  240B               	addwf	??_TRI_3+2,w,c
  4732  0069AE  6E36               	movwf	TRI_3@k,c
  4733  0069B0  0E00               	movlw	0
  4734  0069B2  200C               	addwfc	??_TRI_3+3,w,c
  4735  0069B4  6E37               	movwf	TRI_3@k+1,c
  4736                           
  4737                           ;TRIANGULAR.c: 83: for (j=0;j<k;j++){
  4738  0069B6  0E00               	movlw	0
  4739  0069B8  6E39               	movwf	TRI_3@j+1,c
  4740  0069BA  0E00               	movlw	0
  4741  0069BC  6E38               	movwf	TRI_3@j,c
  4742  0069BE  D004               	goto	l3020
  4743  0069C0                     l382:
  4744                           
  4745                           ;TRIANGULAR.c: 84: PORTCbits.RC2=0;
  4746  0069C0  9482               	bcf	3970,2,c	;volatile
  4747                           
  4748                           ;TRIANGULAR.c: 85: PORTAbits.RA6=0;
  4749  0069C2  9C80               	bcf	3968,6,c	;volatile
  4750  0069C4  4A38               	infsnz	TRI_3@j,f,c
  4751  0069C6  2A39               	incf	TRI_3@j+1,f,c
  4752  0069C8                     l3020:
  4753  0069C8  5039               	movf	TRI_3@j+1,w,c
  4754  0069CA  0A80               	xorlw	128
  4755  0069CC  6E09               	movwf	??_TRI_3& (0+255),c
  4756  0069CE  5036               	movf	TRI_3@k,w,c
  4757  0069D0  5C38               	subwf	TRI_3@j,w,c
  4758  0069D2  5037               	movf	TRI_3@k+1,w,c
  4759  0069D4  0A80               	xorlw	128
  4760  0069D6  5809               	subwfb	??_TRI_3& (0+255),w,c
  4761  0069D8  A0D8               	btfss	status,0,c
  4762  0069DA  D7F2               	goto	l382
  4763  0069DC  4A3A               	infsnz	TRI_3@i,f,c
  4764  0069DE  2A3B               	incf	TRI_3@i+1,f,c
  4765  0069E0  D7A3               	goto	L13
  4766  0069E2                     __end_of_TRI_3:
  4767                           	opt stack 0
  4768                           tblptru	equ	0xFF8
  4769                           tblptrh	equ	0xFF7
  4770                           tblptrl	equ	0xFF6
  4771                           tablat	equ	0xFF5
  4772                           prodh	equ	0xFF4
  4773                           prodl	equ	0xFF3
  4774                           postinc0	equ	0xFEE
  4775                           wreg	equ	0xFE8
  4776                           postinc1	equ	0xFE6
  4777                           postdec1	equ	0xFE5
  4778                           fsr1l	equ	0xFE1
  4779                           postinc2	equ	0xFDE
  4780                           postdec2	equ	0xFDD
  4781                           fsr2h	equ	0xFDA
  4782                           fsr2l	equ	0xFD9
  4783                           status	equ	0xFD8
  4784                           
  4785 ;; *************** function _TRI_2 *****************
  4786 ;; Defined at:
  4787 ;;		line 38 in file "TRIANGULAR.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  valoresSeno    40   13[COMRAM] int [20]
  4792 ;;  i               2   57[COMRAM] int 
  4793 ;;  j               2   55[COMRAM] int 
  4794 ;;  k               2   53[COMRAM] int 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;		None               void
  4797 ;; Registers used:
  4798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4804 ;;      Params:         0       0       0       0       0       0       0       0       0
  4805 ;;      Locals:        46       0       0       0       0       0       0       0       0
  4806 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4807 ;;      Totals:        51       0       0       0       0       0       0       0       0
  4808 ;;Total ram usage:       51 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    1
  4811 ;; This function calls:
  4812 ;;		___awdiv
  4813 ;; This function is called by:
  4814 ;;		_main
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text5
  4819  00674E                     __ptext5:
  4820                           	opt stack 0
  4821  00674E                     _TRI_2:
  4822                           	opt stack 29
  4823                           
  4824                           ;TRIANGULAR.c: 39: OSCCON=0b01010111;
  4825                           
  4826                           ;incstack = 0
  4827  00674E  0E57               	movlw	87
  4828  006750  6ED3               	movwf	4051,c	;volatile
  4829                           
  4830                           ;TRIANGULAR.c: 40: TRISAbits.RA0=0;
  4831  006752  9092               	bcf	3986,0,c	;volatile
  4832                           
  4833                           ;TRIANGULAR.c: 41: TRISCbits.RC2=0;
  4834  006754  9494               	bcf	3988,2,c	;volatile
  4835                           
  4836                           ;TRIANGULAR.c: 42: int valoresSeno [20]= {10,20,30,40,50,60,70,80,90,100,90,80,70,60,50,
      +                          40,30,20,10,0};
  4837  006756  EE21  F050         	lfsr	2,TRI_2@F7359
  4838  00675A  EE10  F00E         	lfsr	1,TRI_2@valoresSeno
  4839  00675E  0E28               	movlw	40
  4840  006760                     u2441:
  4841  006760  CFDE FFE6          	movff	postinc2,postinc1
  4842  006764  2EE8               	decfsz	wreg,f,c
  4843  006766  D7FC               	goto	u2441
  4844                           
  4845                           ;TRIANGULAR.c: 43: int i, j,k;
  4846                           ;TRIANGULAR.c: 44: for (i=0;i<20;i++){
  4847  006768  0E00               	movlw	0
  4848  00676A  6E3B               	movwf	TRI_2@i+1,c
  4849  00676C  0E00               	movlw	0
  4850  00676E  6E3A               	movwf	TRI_2@i,c
  4851  006770  503B               	movf	TRI_2@i+1,w,c
  4852  006772  0A80               	xorlw	128
  4853  006774  0F80               	addlw	-128
  4854  006776  0E14               	movlw	20
  4855  006778  B4D8               	btfsc	status,2,c
  4856  00677A  5C3A               	subwf	TRI_2@i,w,c
  4857  00677C  B0D8               	btfsc	status,0,c
  4858  00677E  D02B               	goto	l2958
  4859                           
  4860                           ;TRIANGULAR.c: 45: valoresSeno [i]=valoresSeno [i]/2;
  4861  006780  0E0E               	movlw	low TRI_2@valoresSeno
  4862  006782  6E09               	movwf	??_TRI_2& (0+255),c
  4863  006784  0E00               	movlw	high TRI_2@valoresSeno
  4864  006786  6E0A               	movwf	(??_TRI_2+1)& (0+255),c
  4865  006788  90D8               	bcf	status,0,c
  4866  00678A  343A               	rlcf	TRI_2@i,w,c
  4867  00678C  6ED9               	movwf	fsr2l,c
  4868  00678E  343B               	rlcf	TRI_2@i+1,w,c
  4869  006790  6EDA               	movwf	fsr2h,c
  4870  006792  5009               	movf	??_TRI_2,w,c
  4871  006794  26D9               	addwf	fsr2l,f,c
  4872  006796  500A               	movf	??_TRI_2+1,w,c
  4873  006798  22DA               	addwfc	fsr2h,f,c
  4874  00679A  CFDE F001          	movff	postinc2,___awdiv@dividend
  4875  00679E  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  4876  0067A2  0E00               	movlw	0
  4877  0067A4  6E04               	movwf	___awdiv@divisor+1,c
  4878  0067A6  0E02               	movlw	2
  4879  0067A8  6E03               	movwf	___awdiv@divisor,c
  4880  0067AA  ECB8  F02E         	call	___awdiv	;wreg free
  4881  0067AE  0E0E               	movlw	low TRI_2@valoresSeno
  4882  0067B0  6E0B               	movwf	(??_TRI_2+2)& (0+255),c
  4883  0067B2  0E00               	movlw	high TRI_2@valoresSeno
  4884  0067B4  6E0C               	movwf	(??_TRI_2+3)& (0+255),c
  4885  0067B6  90D8               	bcf	status,0,c
  4886  0067B8  343A               	rlcf	TRI_2@i,w,c
  4887  0067BA  6ED9               	movwf	fsr2l,c
  4888  0067BC  343B               	rlcf	TRI_2@i+1,w,c
  4889  0067BE  6EDA               	movwf	fsr2h,c
  4890  0067C0  500B               	movf	??_TRI_2+2,w,c
  4891  0067C2  26D9               	addwf	fsr2l,f,c
  4892  0067C4  500C               	movf	??_TRI_2+3,w,c
  4893  0067C6  22DA               	addwfc	fsr2h,f,c
  4894  0067C8  C001  FFDE         	movff	?___awdiv,postinc2
  4895  0067CC  C002  FFDD         	movff	?___awdiv+1,postdec2
  4896  0067D0  4A3A               	infsnz	TRI_2@i,f,c
  4897  0067D2  2A3B               	incf	TRI_2@i+1,f,c
  4898  0067D4  D7CD               	goto	L14
  4899  0067D6                     l2958:
  4900                           
  4901                           ;TRIANGULAR.c: 50: for (i=0;i<20;i++){
  4902  0067D6  0E00               	movlw	0
  4903  0067D8  6E3B               	movwf	TRI_2@i+1,c
  4904  0067DA  0E00               	movlw	0
  4905  0067DC  6E3A               	movwf	TRI_2@i,c
  4906  0067DE  503B               	movf	TRI_2@i+1,w,c
  4907  0067E0  0A80               	xorlw	128
  4908  0067E2  0F80               	addlw	-128
  4909  0067E4  0E14               	movlw	20
  4910  0067E6  B4D8               	btfsc	status,2,c
  4911  0067E8  5C3A               	subwf	TRI_2@i,w,c
  4912  0067EA  B0D8               	btfsc	status,0,c
  4913  0067EC  0012               	return	
  4914                           
  4915                           ;TRIANGULAR.c: 51: for (j=0;j<valoresSeno[i];j++){
  4916  0067EE  0E00               	movlw	0
  4917  0067F0  6E39               	movwf	TRI_2@j+1,c
  4918  0067F2  0E00               	movlw	0
  4919  0067F4  6E38               	movwf	TRI_2@j,c
  4920  0067F6  D004               	goto	l2968
  4921  0067F8                     l361:
  4922                           
  4923                           ;TRIANGULAR.c: 52: PORTCbits.RC2=1;
  4924  0067F8  8482               	bsf	3970,2,c	;volatile
  4925                           
  4926                           ;TRIANGULAR.c: 53: PORTAbits.RA6=1;
  4927  0067FA  8C80               	bsf	3968,6,c	;volatile
  4928  0067FC  4A38               	infsnz	TRI_2@j,f,c
  4929  0067FE  2A39               	incf	TRI_2@j+1,f,c
  4930  006800                     l2968:
  4931  006800  0E0E               	movlw	low TRI_2@valoresSeno
  4932  006802  6E09               	movwf	??_TRI_2& (0+255),c
  4933  006804  0E00               	movlw	high TRI_2@valoresSeno
  4934  006806  6E0A               	movwf	(??_TRI_2+1)& (0+255),c
  4935  006808  90D8               	bcf	status,0,c
  4936  00680A  343A               	rlcf	TRI_2@i,w,c
  4937  00680C  6ED9               	movwf	fsr2l,c
  4938  00680E  343B               	rlcf	TRI_2@i+1,w,c
  4939  006810  6EDA               	movwf	fsr2h,c
  4940  006812  5009               	movf	??_TRI_2,w,c
  4941  006814  26D9               	addwf	fsr2l,f,c
  4942  006816  500A               	movf	??_TRI_2+1,w,c
  4943  006818  22DA               	addwfc	fsr2h,f,c
  4944  00681A  CFDE F00B          	movff	postinc2,??_TRI_2+2
  4945  00681E  CFDD F00C          	movff	postdec2,??_TRI_2+3
  4946  006822  5039               	movf	TRI_2@j+1,w,c
  4947  006824  0A80               	xorlw	128
  4948  006826  6E0D               	movwf	(??_TRI_2+4)& (0+255),c
  4949  006828  500B               	movf	??_TRI_2+2,w,c
  4950  00682A  5C38               	subwf	TRI_2@j,w,c
  4951  00682C  500C               	movf	??_TRI_2+3,w,c
  4952  00682E  0A80               	xorlw	128
  4953  006830  580D               	subwfb	(??_TRI_2+4)& (0+255),w,c
  4954  006832  A0D8               	btfss	status,0,c
  4955  006834  D7E1               	goto	l361
  4956                           
  4957                           ;TRIANGULAR.c: 54: }
  4958                           ;TRIANGULAR.c: 55: k=100/2-valoresSeno[i];
  4959  006836  0E0E               	movlw	low TRI_2@valoresSeno
  4960  006838  6E09               	movwf	??_TRI_2& (0+255),c
  4961  00683A  0E00               	movlw	high TRI_2@valoresSeno
  4962  00683C  6E0A               	movwf	(??_TRI_2+1)& (0+255),c
  4963  00683E  90D8               	bcf	status,0,c
  4964  006840  343A               	rlcf	TRI_2@i,w,c
  4965  006842  6ED9               	movwf	fsr2l,c
  4966  006844  343B               	rlcf	TRI_2@i+1,w,c
  4967  006846  6EDA               	movwf	fsr2h,c
  4968  006848  5009               	movf	??_TRI_2,w,c
  4969  00684A  26D9               	addwf	fsr2l,f,c
  4970  00684C  500A               	movf	??_TRI_2+1,w,c
  4971  00684E  22DA               	addwfc	fsr2h,f,c
  4972  006850  CFDE F00B          	movff	postinc2,??_TRI_2+2
  4973  006854  CFDD F00C          	movff	postdec2,??_TRI_2+3
  4974  006858  1E0B               	comf	??_TRI_2+2,f,c
  4975  00685A  1E0C               	comf	??_TRI_2+3,f,c
  4976  00685C  4A0B               	infsnz	??_TRI_2+2,f,c
  4977  00685E  2A0C               	incf	??_TRI_2+3,f,c
  4978  006860  0E32               	movlw	50
  4979  006862  240B               	addwf	??_TRI_2+2,w,c
  4980  006864  6E36               	movwf	TRI_2@k,c
  4981  006866  0E00               	movlw	0
  4982  006868  200C               	addwfc	??_TRI_2+3,w,c
  4983  00686A  6E37               	movwf	TRI_2@k+1,c
  4984                           
  4985                           ;TRIANGULAR.c: 56: for (j=0;j<k;j++){
  4986  00686C  0E00               	movlw	0
  4987  00686E  6E39               	movwf	TRI_2@j+1,c
  4988  006870  0E00               	movlw	0
  4989  006872  6E38               	movwf	TRI_2@j,c
  4990  006874  D004               	goto	l2976
  4991  006876                     l364:
  4992                           
  4993                           ;TRIANGULAR.c: 57: PORTCbits.RC2=0;
  4994  006876  9482               	bcf	3970,2,c	;volatile
  4995                           
  4996                           ;TRIANGULAR.c: 58: PORTAbits.RA6=0;
  4997  006878  9C80               	bcf	3968,6,c	;volatile
  4998  00687A  4A38               	infsnz	TRI_2@j,f,c
  4999  00687C  2A39               	incf	TRI_2@j+1,f,c
  5000  00687E                     l2976:
  5001  00687E  5039               	movf	TRI_2@j+1,w,c
  5002  006880  0A80               	xorlw	128
  5003  006882  6E09               	movwf	??_TRI_2& (0+255),c
  5004  006884  5036               	movf	TRI_2@k,w,c
  5005  006886  5C38               	subwf	TRI_2@j,w,c
  5006  006888  5037               	movf	TRI_2@k+1,w,c
  5007  00688A  0A80               	xorlw	128
  5008  00688C  5809               	subwfb	??_TRI_2& (0+255),w,c
  5009  00688E  A0D8               	btfss	status,0,c
  5010  006890  D7F2               	goto	l364
  5011  006892  4A3A               	infsnz	TRI_2@i,f,c
  5012  006894  2A3B               	incf	TRI_2@i+1,f,c
  5013  006896  D7A3               	goto	L15
  5014  006898                     __end_of_TRI_2:
  5015                           	opt stack 0
  5016                           tblptru	equ	0xFF8
  5017                           tblptrh	equ	0xFF7
  5018                           tblptrl	equ	0xFF6
  5019                           tablat	equ	0xFF5
  5020                           prodh	equ	0xFF4
  5021                           prodl	equ	0xFF3
  5022                           postinc0	equ	0xFEE
  5023                           wreg	equ	0xFE8
  5024                           postinc1	equ	0xFE6
  5025                           postdec1	equ	0xFE5
  5026                           fsr1l	equ	0xFE1
  5027                           postinc2	equ	0xFDE
  5028                           postdec2	equ	0xFDD
  5029                           fsr2h	equ	0xFDA
  5030                           fsr2l	equ	0xFD9
  5031                           status	equ	0xFD8
  5032                           
  5033 ;; *************** function ___awdiv *****************
  5034 ;; Defined at:
  5035 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/awdiv.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  dividend        2    0[COMRAM] int 
  5038 ;;  divisor         2    2[COMRAM] int 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  quotient        2    6[COMRAM] int 
  5041 ;;  sign            1    5[COMRAM] unsigned char 
  5042 ;;  counter         1    4[COMRAM] unsigned char 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  2    0[COMRAM] int 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0, prodl
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5052 ;;      Params:         4       0       0       0       0       0       0       0       0
  5053 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5055 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        8 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_TRI_2
  5062 ;;		_TRI_3
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text6
  5067  005D70                     __ptext6:
  5068                           	opt stack 0
  5069  005D70                     ___awdiv:
  5070                           	opt stack 29
  5071                           
  5072                           ;incstack = 0
  5073  005D70  0E00               	movlw	0
  5074  005D72  6E06               	movwf	___awdiv@sign,c
  5075  005D74  5004               	movf	___awdiv@divisor+1,w,c
  5076  005D76  0A80               	xorlw	128
  5077  005D78  6EF3               	movwf	prodl,c
  5078  005D7A  0E80               	movlw	128
  5079  005D7C  5CF3               	subwf	prodl,w,c
  5080  005D7E  0E00               	movlw	0
  5081  005D80  B4D8               	btfsc	status,2,c
  5082  005D82  5C03               	subwf	___awdiv@divisor,w,c
  5083  005D84  B0D8               	btfsc	status,0,c
  5084  005D86  D006               	goto	l2528
  5085  005D88  6C03               	negf	___awdiv@divisor,c
  5086  005D8A  1E04               	comf	___awdiv@divisor+1,f,c
  5087  005D8C  B0D8               	btfsc	status,0,c
  5088  005D8E  2A04               	incf	___awdiv@divisor+1,f,c
  5089  005D90  0E01               	movlw	1
  5090  005D92  6E06               	movwf	___awdiv@sign,c
  5091  005D94                     l2528:
  5092  005D94  5002               	movf	___awdiv@dividend+1,w,c
  5093  005D96  0A80               	xorlw	128
  5094  005D98  6EF3               	movwf	prodl,c
  5095  005D9A  0E80               	movlw	128
  5096  005D9C  5CF3               	subwf	prodl,w,c
  5097  005D9E  0E00               	movlw	0
  5098  005DA0  B4D8               	btfsc	status,2,c
  5099  005DA2  5C01               	subwf	___awdiv@dividend,w,c
  5100  005DA4  B0D8               	btfsc	status,0,c
  5101  005DA6  D006               	goto	l2534
  5102  005DA8  6C01               	negf	___awdiv@dividend,c
  5103  005DAA  1E02               	comf	___awdiv@dividend+1,f,c
  5104  005DAC  B0D8               	btfsc	status,0,c
  5105  005DAE  2A02               	incf	___awdiv@dividend+1,f,c
  5106  005DB0  0E01               	movlw	1
  5107  005DB2  1A06               	xorwf	___awdiv@sign,f,c
  5108  005DB4                     l2534:
  5109  005DB4  0E00               	movlw	0
  5110  005DB6  6E08               	movwf	___awdiv@quotient+1,c
  5111  005DB8  0E00               	movlw	0
  5112  005DBA  6E07               	movwf	___awdiv@quotient,c
  5113  005DBC  5004               	movf	___awdiv@divisor+1,w,c
  5114  005DBE  1003               	iorwf	___awdiv@divisor,w,c
  5115  005DC0  B4D8               	btfsc	status,2,c
  5116  005DC2  D01C               	goto	l2556
  5117  005DC4  0E01               	movlw	1
  5118  005DC6  6E05               	movwf	___awdiv@counter,c
  5119  005DC8  D004               	goto	l2542
  5120  005DCA                     l2540:
  5121  005DCA  90D8               	bcf	status,0,c
  5122  005DCC  3603               	rlcf	___awdiv@divisor,f,c
  5123  005DCE  3604               	rlcf	___awdiv@divisor+1,f,c
  5124  005DD0  2A05               	incf	___awdiv@counter,f,c
  5125  005DD2                     l2542:
  5126  005DD2  AE04               	btfss	___awdiv@divisor+1,7,c
  5127  005DD4  D7FA               	goto	l2540
  5128  005DD6                     l2544:
  5129  005DD6  90D8               	bcf	status,0,c
  5130  005DD8  3607               	rlcf	___awdiv@quotient,f,c
  5131  005DDA  3608               	rlcf	___awdiv@quotient+1,f,c
  5132  005DDC  5003               	movf	___awdiv@divisor,w,c
  5133  005DDE  5C01               	subwf	___awdiv@dividend,w,c
  5134  005DE0  5004               	movf	___awdiv@divisor+1,w,c
  5135  005DE2  5802               	subwfb	___awdiv@dividend+1,w,c
  5136  005DE4  A0D8               	btfss	status,0,c
  5137  005DE6  D005               	goto	l2552
  5138  005DE8  5003               	movf	___awdiv@divisor,w,c
  5139  005DEA  5E01               	subwf	___awdiv@dividend,f,c
  5140  005DEC  5004               	movf	___awdiv@divisor+1,w,c
  5141  005DEE  5A02               	subwfb	___awdiv@dividend+1,f,c
  5142  005DF0  8007               	bsf	___awdiv@quotient,0,c
  5143  005DF2                     l2552:
  5144  005DF2  90D8               	bcf	status,0,c
  5145  005DF4  3204               	rrcf	___awdiv@divisor+1,f,c
  5146  005DF6  3203               	rrcf	___awdiv@divisor,f,c
  5147  005DF8  2E05               	decfsz	___awdiv@counter,f,c
  5148  005DFA  D7ED               	goto	l2544
  5149  005DFC                     l2556:
  5150  005DFC  5006               	movf	___awdiv@sign,w,c
  5151  005DFE  B4D8               	btfsc	status,2,c
  5152  005E00  D004               	goto	l2560
  5153  005E02  6C07               	negf	___awdiv@quotient,c
  5154  005E04  1E08               	comf	___awdiv@quotient+1,f,c
  5155  005E06  B0D8               	btfsc	status,0,c
  5156  005E08  2A08               	incf	___awdiv@quotient+1,f,c
  5157  005E0A                     l2560:
  5158  005E0A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5159  005E0E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5160  005E12  0012               	return	
  5161  005E14                     __end_of___awdiv:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           postinc0	equ	0xFEE
  5170                           wreg	equ	0xFE8
  5171                           postinc1	equ	0xFE6
  5172                           postdec1	equ	0xFE5
  5173                           fsr1l	equ	0xFE1
  5174                           postinc2	equ	0xFDE
  5175                           postdec2	equ	0xFDD
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function _TRI_1 *****************
  5181 ;; Defined at:
  5182 ;;		line 11 in file "TRIANGULAR.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;		None
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  valoresSeno    40    5[COMRAM] int [20]
  5187 ;;  i               2   49[COMRAM] int 
  5188 ;;  j               2   47[COMRAM] int 
  5189 ;;  k               2   45[COMRAM] int 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;		None               void
  5192 ;; Registers used:
  5193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5199 ;;      Params:         0       0       0       0       0       0       0       0       0
  5200 ;;      Locals:        46       0       0       0       0       0       0       0       0
  5201 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5202 ;;      Totals:        51       0       0       0       0       0       0       0       0
  5203 ;;Total ram usage:       51 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_main
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text7
  5213  0061DE                     __ptext7:
  5214                           	opt stack 0
  5215  0061DE                     _TRI_1:
  5216                           	opt stack 30
  5217                           
  5218                           ;TRIANGULAR.c: 12: OSCCON=0b01010111;
  5219                           
  5220                           ;incstack = 0
  5221  0061DE  0E57               	movlw	87
  5222  0061E0  6ED3               	movwf	4051,c	;volatile
  5223                           
  5224                           ;TRIANGULAR.c: 13: TRISAbits.RA6=0;
  5225  0061E2  9C92               	bcf	3986,6,c	;volatile
  5226                           
  5227                           ;TRIANGULAR.c: 14: TRISCbits.RC2=0;
  5228  0061E4  9494               	bcf	3988,2,c	;volatile
  5229                           
  5230                           ;TRIANGULAR.c: 15: int valoresSeno [20]= {10,20,30,40,50,60,70,80,90,100,90,80,70,60,50,
      +                          40,30,20,10,0};
  5231  0061E6  EE21  F028         	lfsr	2,TRI_1@F7354
  5232  0061EA  EE10  F006         	lfsr	1,TRI_1@valoresSeno
  5233  0061EE  0E28               	movlw	40
  5234  0061F0                     u2371:
  5235  0061F0  CFDE FFE6          	movff	postinc2,postinc1
  5236  0061F4  2EE8               	decfsz	wreg,f,c
  5237  0061F6  D7FC               	goto	u2371
  5238                           
  5239                           ;TRIANGULAR.c: 16: int i, j,k;
  5240                           ;TRIANGULAR.c: 17: for (i=0;i<20;i++){
  5241  0061F8  0E00               	movlw	0
  5242  0061FA  6E33               	movwf	TRI_1@i+1,c
  5243  0061FC  0E00               	movlw	0
  5244  0061FE  6E32               	movwf	TRI_1@i,c
  5245  006200  5033               	movf	TRI_1@i+1,w,c
  5246  006202  0A80               	xorlw	128
  5247  006204  0F80               	addlw	-128
  5248  006206  0E14               	movlw	20
  5249  006208  B4D8               	btfsc	status,2,c
  5250  00620A  5C32               	subwf	TRI_1@i,w,c
  5251  00620C  B0D8               	btfsc	status,0,c
  5252  00620E  D003               	goto	l2914
  5253  006210  4A32               	infsnz	TRI_1@i,f,c
  5254  006212  2A33               	incf	TRI_1@i+1,f,c
  5255  006214  D7F5               	goto	L16
  5256  006216                     l2914:
  5257                           
  5258                           ;TRIANGULAR.c: 23: for (i=0;i<20;i++){
  5259  006216  0E00               	movlw	0
  5260  006218  6E33               	movwf	TRI_1@i+1,c
  5261  00621A  0E00               	movlw	0
  5262  00621C  6E32               	movwf	TRI_1@i,c
  5263  00621E  5033               	movf	TRI_1@i+1,w,c
  5264  006220  0A80               	xorlw	128
  5265  006222  0F80               	addlw	-128
  5266  006224  0E14               	movlw	20
  5267  006226  B4D8               	btfsc	status,2,c
  5268  006228  5C32               	subwf	TRI_1@i,w,c
  5269  00622A  B0D8               	btfsc	status,0,c
  5270  00622C  0012               	return	
  5271                           
  5272                           ;TRIANGULAR.c: 24: for (j=0;j<valoresSeno[i];j++){
  5273  00622E  0E00               	movlw	0
  5274  006230  6E31               	movwf	TRI_1@j+1,c
  5275  006232  0E00               	movlw	0
  5276  006234  6E30               	movwf	TRI_1@j,c
  5277  006236  D004               	goto	l2924
  5278  006238                     l343:
  5279                           
  5280                           ;TRIANGULAR.c: 25: PORTCbits.RC2=1;
  5281  006238  8482               	bsf	3970,2,c	;volatile
  5282                           
  5283                           ;TRIANGULAR.c: 26: PORTAbits.RA6=1;
  5284  00623A  8C80               	bsf	3968,6,c	;volatile
  5285  00623C  4A30               	infsnz	TRI_1@j,f,c
  5286  00623E  2A31               	incf	TRI_1@j+1,f,c
  5287  006240                     l2924:
  5288  006240  0E06               	movlw	low TRI_1@valoresSeno
  5289  006242  6E01               	movwf	??_TRI_1& (0+255),c
  5290  006244  0E00               	movlw	high TRI_1@valoresSeno
  5291  006246  6E02               	movwf	(??_TRI_1+1)& (0+255),c
  5292  006248  90D8               	bcf	status,0,c
  5293  00624A  3432               	rlcf	TRI_1@i,w,c
  5294  00624C  6ED9               	movwf	fsr2l,c
  5295  00624E  3433               	rlcf	TRI_1@i+1,w,c
  5296  006250  6EDA               	movwf	fsr2h,c
  5297  006252  5001               	movf	??_TRI_1,w,c
  5298  006254  26D9               	addwf	fsr2l,f,c
  5299  006256  5002               	movf	??_TRI_1+1,w,c
  5300  006258  22DA               	addwfc	fsr2h,f,c
  5301  00625A  CFDE F003          	movff	postinc2,??_TRI_1+2
  5302  00625E  CFDD F004          	movff	postdec2,??_TRI_1+3
  5303  006262  5031               	movf	TRI_1@j+1,w,c
  5304  006264  0A80               	xorlw	128
  5305  006266  6E05               	movwf	(??_TRI_1+4)& (0+255),c
  5306  006268  5003               	movf	??_TRI_1+2,w,c
  5307  00626A  5C30               	subwf	TRI_1@j,w,c
  5308  00626C  5004               	movf	??_TRI_1+3,w,c
  5309  00626E  0A80               	xorlw	128
  5310  006270  5805               	subwfb	(??_TRI_1+4)& (0+255),w,c
  5311  006272  A0D8               	btfss	status,0,c
  5312  006274  D7E1               	goto	l343
  5313                           
  5314                           ;TRIANGULAR.c: 27: }
  5315                           ;TRIANGULAR.c: 28: k=100-valoresSeno[i];
  5316  006276  0E06               	movlw	low TRI_1@valoresSeno
  5317  006278  6E01               	movwf	??_TRI_1& (0+255),c
  5318  00627A  0E00               	movlw	high TRI_1@valoresSeno
  5319  00627C  6E02               	movwf	(??_TRI_1+1)& (0+255),c
  5320  00627E  90D8               	bcf	status,0,c
  5321  006280  3432               	rlcf	TRI_1@i,w,c
  5322  006282  6ED9               	movwf	fsr2l,c
  5323  006284  3433               	rlcf	TRI_1@i+1,w,c
  5324  006286  6EDA               	movwf	fsr2h,c
  5325  006288  5001               	movf	??_TRI_1,w,c
  5326  00628A  26D9               	addwf	fsr2l,f,c
  5327  00628C  5002               	movf	??_TRI_1+1,w,c
  5328  00628E  22DA               	addwfc	fsr2h,f,c
  5329  006290  CFDE F003          	movff	postinc2,??_TRI_1+2
  5330  006294  CFDD F004          	movff	postdec2,??_TRI_1+3
  5331  006298  1E03               	comf	??_TRI_1+2,f,c
  5332  00629A  1E04               	comf	??_TRI_1+3,f,c
  5333  00629C  4A03               	infsnz	??_TRI_1+2,f,c
  5334  00629E  2A04               	incf	??_TRI_1+3,f,c
  5335  0062A0  0E64               	movlw	100
  5336  0062A2  2403               	addwf	??_TRI_1+2,w,c
  5337  0062A4  6E2E               	movwf	TRI_1@k,c
  5338  0062A6  0E00               	movlw	0
  5339  0062A8  2004               	addwfc	??_TRI_1+3,w,c
  5340  0062AA  6E2F               	movwf	TRI_1@k+1,c
  5341                           
  5342                           ;TRIANGULAR.c: 29: for (j=0;j<k;j++){
  5343  0062AC  0E00               	movlw	0
  5344  0062AE  6E31               	movwf	TRI_1@j+1,c
  5345  0062B0  0E00               	movlw	0
  5346  0062B2  6E30               	movwf	TRI_1@j,c
  5347  0062B4  D004               	goto	l2932
  5348  0062B6                     l346:
  5349                           
  5350                           ;TRIANGULAR.c: 30: PORTCbits.RC2=0;
  5351  0062B6  9482               	bcf	3970,2,c	;volatile
  5352                           
  5353                           ;TRIANGULAR.c: 31: PORTAbits.RA6=0;
  5354  0062B8  9C80               	bcf	3968,6,c	;volatile
  5355  0062BA  4A30               	infsnz	TRI_1@j,f,c
  5356  0062BC  2A31               	incf	TRI_1@j+1,f,c
  5357  0062BE                     l2932:
  5358  0062BE  5031               	movf	TRI_1@j+1,w,c
  5359  0062C0  0A80               	xorlw	128
  5360  0062C2  6E01               	movwf	??_TRI_1& (0+255),c
  5361  0062C4  502E               	movf	TRI_1@k,w,c
  5362  0062C6  5C30               	subwf	TRI_1@j,w,c
  5363  0062C8  502F               	movf	TRI_1@k+1,w,c
  5364  0062CA  0A80               	xorlw	128
  5365  0062CC  5801               	subwfb	??_TRI_1& (0+255),w,c
  5366  0062CE  A0D8               	btfss	status,0,c
  5367  0062D0  D7F2               	goto	l346
  5368  0062D2  4A32               	infsnz	TRI_1@i,f,c
  5369  0062D4  2A33               	incf	TRI_1@i+1,f,c
  5370  0062D6  D7A3               	goto	L17
  5371  0062D8                     __end_of_TRI_1:
  5372                           	opt stack 0
  5373                           tblptru	equ	0xFF8
  5374                           tblptrh	equ	0xFF7
  5375                           tblptrl	equ	0xFF6
  5376                           tablat	equ	0xFF5
  5377                           prodh	equ	0xFF4
  5378                           prodl	equ	0xFF3
  5379                           postinc0	equ	0xFEE
  5380                           wreg	equ	0xFE8
  5381                           postinc1	equ	0xFE6
  5382                           postdec1	equ	0xFE5
  5383                           fsr1l	equ	0xFE1
  5384                           postinc2	equ	0xFDE
  5385                           postdec2	equ	0xFDD
  5386                           fsr2h	equ	0xFDA
  5387                           fsr2l	equ	0xFD9
  5388                           status	equ	0xFD8
  5389                           
  5390 ;; *************** function _SENO_3 *****************
  5391 ;; Defined at:
  5392 ;;		line 64 in file "SIN.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;		None
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  valoresSeno    30    5[COMRAM] int [15]
  5397 ;;  i               2   39[COMRAM] int 
  5398 ;;  j               2   37[COMRAM] int 
  5399 ;;  k               2   35[COMRAM] int 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;		None               void
  5402 ;; Registers used:
  5403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5409 ;;      Params:         0       0       0       0       0       0       0       0       0
  5410 ;;      Locals:        36       0       0       0       0       0       0       0       0
  5411 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5412 ;;      Totals:        41       0       0       0       0       0       0       0       0
  5413 ;;Total ram usage:       41 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; This function calls:
  5416 ;;		Nothing
  5417 ;; This function is called by:
  5418 ;;		_main
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text8
  5423  0060E4                     __ptext8:
  5424                           	opt stack 0
  5425  0060E4                     _SENO_3:
  5426                           	opt stack 30
  5427                           
  5428                           ;SIN.c: 65: OSCCON=0b01010111;
  5429                           
  5430                           ;incstack = 0
  5431  0060E4  0E57               	movlw	87
  5432  0060E6  6ED3               	movwf	4051,c	;volatile
  5433                           
  5434                           ;SIN.c: 66: TRISAbits.RA6=0;
  5435  0060E8  9C92               	bcf	3986,6,c	;volatile
  5436                           
  5437                           ;SIN.c: 67: TRISCbits.RC2=0;
  5438  0060EA  9494               	bcf	3988,2,c	;volatile
  5439                           
  5440                           ;SIN.c: 68: int valoresSeno [15]= {50,70,87,98,100,93,79,60,40,21,7,0,2,13,30};
  5441  0060EC  EE20  F084         	lfsr	2,SENO_3@F7364
  5442  0060F0  EE10  F006         	lfsr	1,SENO_3@valoresSeno
  5443  0060F4  0E1E               	movlw	30
  5444  0060F6                     u2301:
  5445  0060F6  CFDE FFE6          	movff	postinc2,postinc1
  5446  0060FA  2EE8               	decfsz	wreg,f,c
  5447  0060FC  D7FC               	goto	u2301
  5448                           
  5449                           ;SIN.c: 69: int i, j,k;
  5450                           ;SIN.c: 70: for (i=0;i<15;i++){
  5451  0060FE  0E00               	movlw	0
  5452  006100  6E29               	movwf	SENO_3@i+1,c
  5453  006102  0E00               	movlw	0
  5454  006104  6E28               	movwf	SENO_3@i,c
  5455  006106  5029               	movf	SENO_3@i+1,w,c
  5456  006108  0A80               	xorlw	128
  5457  00610A  0F80               	addlw	-128
  5458  00610C  0E0F               	movlw	15
  5459  00610E  B4D8               	btfsc	status,2,c
  5460  006110  5C28               	subwf	SENO_3@i,w,c
  5461  006112  B0D8               	btfsc	status,0,c
  5462  006114  D003               	goto	l2872
  5463  006116  4A28               	infsnz	SENO_3@i,f,c
  5464  006118  2A29               	incf	SENO_3@i+1,f,c
  5465  00611A  D7F5               	goto	L18
  5466  00611C                     l2872:
  5467                           
  5468                           ;SIN.c: 74: for (i=0;i<15;i++){
  5469  00611C  0E00               	movlw	0
  5470  00611E  6E29               	movwf	SENO_3@i+1,c
  5471  006120  0E00               	movlw	0
  5472  006122  6E28               	movwf	SENO_3@i,c
  5473  006124  5029               	movf	SENO_3@i+1,w,c
  5474  006126  0A80               	xorlw	128
  5475  006128  0F80               	addlw	-128
  5476  00612A  0E0F               	movlw	15
  5477  00612C  B4D8               	btfsc	status,2,c
  5478  00612E  5C28               	subwf	SENO_3@i,w,c
  5479  006130  B0D8               	btfsc	status,0,c
  5480  006132  0012               	return	
  5481                           
  5482                           ;SIN.c: 75: for (j=0;j<valoresSeno[i];j++){
  5483  006134  0E00               	movlw	0
  5484  006136  6E27               	movwf	SENO_3@j+1,c
  5485  006138  0E00               	movlw	0
  5486  00613A  6E26               	movwf	SENO_3@j,c
  5487  00613C  D004               	goto	l2882
  5488  00613E                     l315:
  5489                           
  5490                           ;SIN.c: 76: PORTCbits.RC2=1;
  5491  00613E  8482               	bsf	3970,2,c	;volatile
  5492                           
  5493                           ;SIN.c: 77: PORTAbits.RA6=1;
  5494  006140  8C80               	bsf	3968,6,c	;volatile
  5495  006142  4A26               	infsnz	SENO_3@j,f,c
  5496  006144  2A27               	incf	SENO_3@j+1,f,c
  5497  006146                     l2882:
  5498  006146  0E06               	movlw	low SENO_3@valoresSeno
  5499  006148  6E01               	movwf	??_SENO_3& (0+255),c
  5500  00614A  0E00               	movlw	high SENO_3@valoresSeno
  5501  00614C  6E02               	movwf	(??_SENO_3+1)& (0+255),c
  5502  00614E  90D8               	bcf	status,0,c
  5503  006150  3428               	rlcf	SENO_3@i,w,c
  5504  006152  6ED9               	movwf	fsr2l,c
  5505  006154  3429               	rlcf	SENO_3@i+1,w,c
  5506  006156  6EDA               	movwf	fsr2h,c
  5507  006158  5001               	movf	??_SENO_3,w,c
  5508  00615A  26D9               	addwf	fsr2l,f,c
  5509  00615C  5002               	movf	??_SENO_3+1,w,c
  5510  00615E  22DA               	addwfc	fsr2h,f,c
  5511  006160  CFDE F003          	movff	postinc2,??_SENO_3+2
  5512  006164  CFDD F004          	movff	postdec2,??_SENO_3+3
  5513  006168  5027               	movf	SENO_3@j+1,w,c
  5514  00616A  0A80               	xorlw	128
  5515  00616C  6E05               	movwf	(??_SENO_3+4)& (0+255),c
  5516  00616E  5003               	movf	??_SENO_3+2,w,c
  5517  006170  5C26               	subwf	SENO_3@j,w,c
  5518  006172  5004               	movf	??_SENO_3+3,w,c
  5519  006174  0A80               	xorlw	128
  5520  006176  5805               	subwfb	(??_SENO_3+4)& (0+255),w,c
  5521  006178  A0D8               	btfss	status,0,c
  5522  00617A  D7E1               	goto	l315
  5523                           
  5524                           ;SIN.c: 78: }
  5525                           ;SIN.c: 79: k=100-valoresSeno[i];
  5526  00617C  0E06               	movlw	low SENO_3@valoresSeno
  5527  00617E  6E01               	movwf	??_SENO_3& (0+255),c
  5528  006180  0E00               	movlw	high SENO_3@valoresSeno
  5529  006182  6E02               	movwf	(??_SENO_3+1)& (0+255),c
  5530  006184  90D8               	bcf	status,0,c
  5531  006186  3428               	rlcf	SENO_3@i,w,c
  5532  006188  6ED9               	movwf	fsr2l,c
  5533  00618A  3429               	rlcf	SENO_3@i+1,w,c
  5534  00618C  6EDA               	movwf	fsr2h,c
  5535  00618E  5001               	movf	??_SENO_3,w,c
  5536  006190  26D9               	addwf	fsr2l,f,c
  5537  006192  5002               	movf	??_SENO_3+1,w,c
  5538  006194  22DA               	addwfc	fsr2h,f,c
  5539  006196  CFDE F003          	movff	postinc2,??_SENO_3+2
  5540  00619A  CFDD F004          	movff	postdec2,??_SENO_3+3
  5541  00619E  1E03               	comf	??_SENO_3+2,f,c
  5542  0061A0  1E04               	comf	??_SENO_3+3,f,c
  5543  0061A2  4A03               	infsnz	??_SENO_3+2,f,c
  5544  0061A4  2A04               	incf	??_SENO_3+3,f,c
  5545  0061A6  0E64               	movlw	100
  5546  0061A8  2403               	addwf	??_SENO_3+2,w,c
  5547  0061AA  6E24               	movwf	SENO_3@k,c
  5548  0061AC  0E00               	movlw	0
  5549  0061AE  2004               	addwfc	??_SENO_3+3,w,c
  5550  0061B0  6E25               	movwf	SENO_3@k+1,c
  5551                           
  5552                           ;SIN.c: 80: for (j=0;j<k;j++){
  5553  0061B2  0E00               	movlw	0
  5554  0061B4  6E27               	movwf	SENO_3@j+1,c
  5555  0061B6  0E00               	movlw	0
  5556  0061B8  6E26               	movwf	SENO_3@j,c
  5557  0061BA  D004               	goto	l2890
  5558  0061BC                     l318:
  5559                           
  5560                           ;SIN.c: 81: PORTCbits.RC2=0;
  5561  0061BC  9482               	bcf	3970,2,c	;volatile
  5562                           
  5563                           ;SIN.c: 82: PORTAbits.RA6=0;
  5564  0061BE  9C80               	bcf	3968,6,c	;volatile
  5565  0061C0  4A26               	infsnz	SENO_3@j,f,c
  5566  0061C2  2A27               	incf	SENO_3@j+1,f,c
  5567  0061C4                     l2890:
  5568  0061C4  5027               	movf	SENO_3@j+1,w,c
  5569  0061C6  0A80               	xorlw	128
  5570  0061C8  6E01               	movwf	??_SENO_3& (0+255),c
  5571  0061CA  5024               	movf	SENO_3@k,w,c
  5572  0061CC  5C26               	subwf	SENO_3@j,w,c
  5573  0061CE  5025               	movf	SENO_3@k+1,w,c
  5574  0061D0  0A80               	xorlw	128
  5575  0061D2  5801               	subwfb	??_SENO_3& (0+255),w,c
  5576  0061D4  A0D8               	btfss	status,0,c
  5577  0061D6  D7F2               	goto	l318
  5578  0061D8  4A28               	infsnz	SENO_3@i,f,c
  5579  0061DA  2A29               	incf	SENO_3@i+1,f,c
  5580  0061DC  D7A3               	goto	L19
  5581  0061DE                     __end_of_SENO_3:
  5582                           	opt stack 0
  5583                           tblptru	equ	0xFF8
  5584                           tblptrh	equ	0xFF7
  5585                           tblptrl	equ	0xFF6
  5586                           tablat	equ	0xFF5
  5587                           prodh	equ	0xFF4
  5588                           prodl	equ	0xFF3
  5589                           postinc0	equ	0xFEE
  5590                           wreg	equ	0xFE8
  5591                           postinc1	equ	0xFE6
  5592                           postdec1	equ	0xFE5
  5593                           fsr1l	equ	0xFE1
  5594                           postinc2	equ	0xFDE
  5595                           postdec2	equ	0xFDD
  5596                           fsr2h	equ	0xFDA
  5597                           fsr2l	equ	0xFD9
  5598                           status	equ	0xFD8
  5599                           
  5600 ;; *************** function _SENO_2 *****************
  5601 ;; Defined at:
  5602 ;;		line 38 in file "SIN.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;		None
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  valoresSeno    36    5[COMRAM] int [18]
  5607 ;;  i               2   45[COMRAM] int 
  5608 ;;  j               2   43[COMRAM] int 
  5609 ;;  k               2   41[COMRAM] int 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;		None               void
  5612 ;; Registers used:
  5613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5619 ;;      Params:         0       0       0       0       0       0       0       0       0
  5620 ;;      Locals:        42       0       0       0       0       0       0       0       0
  5621 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5622 ;;      Totals:        47       0       0       0       0       0       0       0       0
  5623 ;;Total ram usage:       47 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; This function calls:
  5626 ;;		Nothing
  5627 ;; This function is called by:
  5628 ;;		_main
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           	psect	text9
  5633  005FEA                     __ptext9:
  5634                           	opt stack 0
  5635  005FEA                     _SENO_2:
  5636                           	opt stack 30
  5637                           
  5638                           ;SIN.c: 39: OSCCON=0b01010111;
  5639                           
  5640                           ;incstack = 0
  5641  005FEA  0E57               	movlw	87
  5642  005FEC  6ED3               	movwf	4051,c	;volatile
  5643                           
  5644                           ;SIN.c: 40: TRISAbits.RA6=0;
  5645  005FEE  9C92               	bcf	3986,6,c	;volatile
  5646                           
  5647                           ;SIN.c: 41: TRISCbits.RC2=0;
  5648  005FF0  9494               	bcf	3988,2,c	;volatile
  5649                           
  5650                           ;SIN.c: 42: int valoresSeno [18]= {50,67,82,93,99,99,93,82,67,50,33,18,7,1,1,7,18,33};
  5651  005FF2  EE20  F060         	lfsr	2,SENO_2@F7359
  5652  005FF6  EE10  F006         	lfsr	1,SENO_2@valoresSeno
  5653  005FFA  0E24               	movlw	36
  5654  005FFC                     u2231:
  5655  005FFC  CFDE FFE6          	movff	postinc2,postinc1
  5656  006000  2EE8               	decfsz	wreg,f,c
  5657  006002  D7FC               	goto	u2231
  5658                           
  5659                           ;SIN.c: 43: int i, j,k;
  5660                           ;SIN.c: 44: for (i=0;i<18;i++){
  5661  006004  0E00               	movlw	0
  5662  006006  6E2F               	movwf	SENO_2@i+1,c
  5663  006008  0E00               	movlw	0
  5664  00600A  6E2E               	movwf	SENO_2@i,c
  5665  00600C  502F               	movf	SENO_2@i+1,w,c
  5666  00600E  0A80               	xorlw	128
  5667  006010  0F80               	addlw	-128
  5668  006012  0E12               	movlw	18
  5669  006014  B4D8               	btfsc	status,2,c
  5670  006016  5C2E               	subwf	SENO_2@i,w,c
  5671  006018  B0D8               	btfsc	status,0,c
  5672  00601A  D003               	goto	l2830
  5673  00601C  4A2E               	infsnz	SENO_2@i,f,c
  5674  00601E  2A2F               	incf	SENO_2@i+1,f,c
  5675  006020  D7F5               	goto	L20
  5676  006022                     l2830:
  5677                           
  5678                           ;SIN.c: 48: for (i=0;i<18;i++){
  5679  006022  0E00               	movlw	0
  5680  006024  6E2F               	movwf	SENO_2@i+1,c
  5681  006026  0E00               	movlw	0
  5682  006028  6E2E               	movwf	SENO_2@i,c
  5683  00602A  502F               	movf	SENO_2@i+1,w,c
  5684  00602C  0A80               	xorlw	128
  5685  00602E  0F80               	addlw	-128
  5686  006030  0E12               	movlw	18
  5687  006032  B4D8               	btfsc	status,2,c
  5688  006034  5C2E               	subwf	SENO_2@i,w,c
  5689  006036  B0D8               	btfsc	status,0,c
  5690  006038  0012               	return	
  5691                           
  5692                           ;SIN.c: 49: for (j=0;j<valoresSeno[i];j++){
  5693  00603A  0E00               	movlw	0
  5694  00603C  6E2D               	movwf	SENO_2@j+1,c
  5695  00603E  0E00               	movlw	0
  5696  006040  6E2C               	movwf	SENO_2@j,c
  5697  006042  D004               	goto	l2840
  5698  006044                     l297:
  5699                           
  5700                           ;SIN.c: 50: PORTCbits.RC2=1;
  5701  006044  8482               	bsf	3970,2,c	;volatile
  5702                           
  5703                           ;SIN.c: 51: PORTAbits.RA6=1;
  5704  006046  8C80               	bsf	3968,6,c	;volatile
  5705  006048  4A2C               	infsnz	SENO_2@j,f,c
  5706  00604A  2A2D               	incf	SENO_2@j+1,f,c
  5707  00604C                     l2840:
  5708  00604C  0E06               	movlw	low SENO_2@valoresSeno
  5709  00604E  6E01               	movwf	??_SENO_2& (0+255),c
  5710  006050  0E00               	movlw	high SENO_2@valoresSeno
  5711  006052  6E02               	movwf	(??_SENO_2+1)& (0+255),c
  5712  006054  90D8               	bcf	status,0,c
  5713  006056  342E               	rlcf	SENO_2@i,w,c
  5714  006058  6ED9               	movwf	fsr2l,c
  5715  00605A  342F               	rlcf	SENO_2@i+1,w,c
  5716  00605C  6EDA               	movwf	fsr2h,c
  5717  00605E  5001               	movf	??_SENO_2,w,c
  5718  006060  26D9               	addwf	fsr2l,f,c
  5719  006062  5002               	movf	??_SENO_2+1,w,c
  5720  006064  22DA               	addwfc	fsr2h,f,c
  5721  006066  CFDE F003          	movff	postinc2,??_SENO_2+2
  5722  00606A  CFDD F004          	movff	postdec2,??_SENO_2+3
  5723  00606E  502D               	movf	SENO_2@j+1,w,c
  5724  006070  0A80               	xorlw	128
  5725  006072  6E05               	movwf	(??_SENO_2+4)& (0+255),c
  5726  006074  5003               	movf	??_SENO_2+2,w,c
  5727  006076  5C2C               	subwf	SENO_2@j,w,c
  5728  006078  5004               	movf	??_SENO_2+3,w,c
  5729  00607A  0A80               	xorlw	128
  5730  00607C  5805               	subwfb	(??_SENO_2+4)& (0+255),w,c
  5731  00607E  A0D8               	btfss	status,0,c
  5732  006080  D7E1               	goto	l297
  5733                           
  5734                           ;SIN.c: 52: }
  5735                           ;SIN.c: 53: k=100-valoresSeno[i];
  5736  006082  0E06               	movlw	low SENO_2@valoresSeno
  5737  006084  6E01               	movwf	??_SENO_2& (0+255),c
  5738  006086  0E00               	movlw	high SENO_2@valoresSeno
  5739  006088  6E02               	movwf	(??_SENO_2+1)& (0+255),c
  5740  00608A  90D8               	bcf	status,0,c
  5741  00608C  342E               	rlcf	SENO_2@i,w,c
  5742  00608E  6ED9               	movwf	fsr2l,c
  5743  006090  342F               	rlcf	SENO_2@i+1,w,c
  5744  006092  6EDA               	movwf	fsr2h,c
  5745  006094  5001               	movf	??_SENO_2,w,c
  5746  006096  26D9               	addwf	fsr2l,f,c
  5747  006098  5002               	movf	??_SENO_2+1,w,c
  5748  00609A  22DA               	addwfc	fsr2h,f,c
  5749  00609C  CFDE F003          	movff	postinc2,??_SENO_2+2
  5750  0060A0  CFDD F004          	movff	postdec2,??_SENO_2+3
  5751  0060A4  1E03               	comf	??_SENO_2+2,f,c
  5752  0060A6  1E04               	comf	??_SENO_2+3,f,c
  5753  0060A8  4A03               	infsnz	??_SENO_2+2,f,c
  5754  0060AA  2A04               	incf	??_SENO_2+3,f,c
  5755  0060AC  0E64               	movlw	100
  5756  0060AE  2403               	addwf	??_SENO_2+2,w,c
  5757  0060B0  6E2A               	movwf	SENO_2@k,c
  5758  0060B2  0E00               	movlw	0
  5759  0060B4  2004               	addwfc	??_SENO_2+3,w,c
  5760  0060B6  6E2B               	movwf	SENO_2@k+1,c
  5761                           
  5762                           ;SIN.c: 54: for (j=0;j<k;j++){
  5763  0060B8  0E00               	movlw	0
  5764  0060BA  6E2D               	movwf	SENO_2@j+1,c
  5765  0060BC  0E00               	movlw	0
  5766  0060BE  6E2C               	movwf	SENO_2@j,c
  5767  0060C0  D004               	goto	l2848
  5768  0060C2                     l300:
  5769                           
  5770                           ;SIN.c: 55: PORTCbits.RC2=0;
  5771  0060C2  9482               	bcf	3970,2,c	;volatile
  5772                           
  5773                           ;SIN.c: 56: PORTAbits.RA6=0;
  5774  0060C4  9C80               	bcf	3968,6,c	;volatile
  5775  0060C6  4A2C               	infsnz	SENO_2@j,f,c
  5776  0060C8  2A2D               	incf	SENO_2@j+1,f,c
  5777  0060CA                     l2848:
  5778  0060CA  502D               	movf	SENO_2@j+1,w,c
  5779  0060CC  0A80               	xorlw	128
  5780  0060CE  6E01               	movwf	??_SENO_2& (0+255),c
  5781  0060D0  502A               	movf	SENO_2@k,w,c
  5782  0060D2  5C2C               	subwf	SENO_2@j,w,c
  5783  0060D4  502B               	movf	SENO_2@k+1,w,c
  5784  0060D6  0A80               	xorlw	128
  5785  0060D8  5801               	subwfb	??_SENO_2& (0+255),w,c
  5786  0060DA  A0D8               	btfss	status,0,c
  5787  0060DC  D7F2               	goto	l300
  5788  0060DE  4A2E               	infsnz	SENO_2@i,f,c
  5789  0060E0  2A2F               	incf	SENO_2@i+1,f,c
  5790  0060E2  D7A3               	goto	L21
  5791  0060E4                     __end_of_SENO_2:
  5792                           	opt stack 0
  5793                           tblptru	equ	0xFF8
  5794                           tblptrh	equ	0xFF7
  5795                           tblptrl	equ	0xFF6
  5796                           tablat	equ	0xFF5
  5797                           prodh	equ	0xFF4
  5798                           prodl	equ	0xFF3
  5799                           postinc0	equ	0xFEE
  5800                           wreg	equ	0xFE8
  5801                           postinc1	equ	0xFE6
  5802                           postdec1	equ	0xFE5
  5803                           fsr1l	equ	0xFE1
  5804                           postinc2	equ	0xFDE
  5805                           postdec2	equ	0xFDD
  5806                           fsr2h	equ	0xFDA
  5807                           fsr2l	equ	0xFD9
  5808                           status	equ	0xFD8
  5809                           
  5810 ;; *************** function _SENO_1 *****************
  5811 ;; Defined at:
  5812 ;;		line 11 in file "SIN.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;		None
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  valoresSeno    40    5[COMRAM] int [20]
  5817 ;;  i               2   49[COMRAM] int 
  5818 ;;  j               2   47[COMRAM] int 
  5819 ;;  k               2   45[COMRAM] int 
  5820 ;; Return value:  Size  Location     Type
  5821 ;;		None               void
  5822 ;; Registers used:
  5823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5829 ;;      Params:         0       0       0       0       0       0       0       0       0
  5830 ;;      Locals:        46       0       0       0       0       0       0       0       0
  5831 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5832 ;;      Totals:        51       0       0       0       0       0       0       0       0
  5833 ;;Total ram usage:       51 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; This function calls:
  5836 ;;		Nothing
  5837 ;; This function is called by:
  5838 ;;		_main
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text10
  5843  005EF0                     __ptext10:
  5844                           	opt stack 0
  5845  005EF0                     _SENO_1:
  5846                           	opt stack 30
  5847                           
  5848                           ;SIN.c: 12: OSCCON=0b01010111;
  5849                           
  5850                           ;incstack = 0
  5851  005EF0  0E57               	movlw	87
  5852  005EF2  6ED3               	movwf	4051,c	;volatile
  5853                           
  5854                           ;SIN.c: 13: TRISAbits.RA6=0;
  5855  005EF4  9C92               	bcf	3986,6,c	;volatile
  5856                           
  5857                           ;SIN.c: 14: TRISCbits.RC2=0;
  5858  005EF6  9494               	bcf	3988,2,c	;volatile
  5859                           
  5860                           ;SIN.c: 15: int valoresSeno [20]= {50,35,21,10, 2, 0, 2,10, 21, 35, 50, 65, 79, 90, 98,
  5861                           ;SIN.c: 16: 100, 98, 90, 79, 65};
  5862  005EF8  EE21  F000         	lfsr	2,SENO_1@F7354
  5863  005EFC  EE10  F006         	lfsr	1,SENO_1@valoresSeno
  5864  005F00  0E28               	movlw	40
  5865  005F02                     u2161:
  5866  005F02  CFDE FFE6          	movff	postinc2,postinc1
  5867  005F06  2EE8               	decfsz	wreg,f,c
  5868  005F08  D7FC               	goto	u2161
  5869                           
  5870                           ;SIN.c: 17: int i, j,k;
  5871                           ;SIN.c: 18: for (i=0;i<20;i++){
  5872  005F0A  0E00               	movlw	0
  5873  005F0C  6E33               	movwf	SENO_1@i+1,c
  5874  005F0E  0E00               	movlw	0
  5875  005F10  6E32               	movwf	SENO_1@i,c
  5876  005F12  5033               	movf	SENO_1@i+1,w,c
  5877  005F14  0A80               	xorlw	128
  5878  005F16  0F80               	addlw	-128
  5879  005F18  0E14               	movlw	20
  5880  005F1A  B4D8               	btfsc	status,2,c
  5881  005F1C  5C32               	subwf	SENO_1@i,w,c
  5882  005F1E  B0D8               	btfsc	status,0,c
  5883  005F20  D003               	goto	l2788
  5884  005F22  4A32               	infsnz	SENO_1@i,f,c
  5885  005F24  2A33               	incf	SENO_1@i+1,f,c
  5886  005F26  D7F5               	goto	L22
  5887  005F28                     l2788:
  5888                           
  5889                           ;SIN.c: 22: for (i=0;i<20;i++){
  5890  005F28  0E00               	movlw	0
  5891  005F2A  6E33               	movwf	SENO_1@i+1,c
  5892  005F2C  0E00               	movlw	0
  5893  005F2E  6E32               	movwf	SENO_1@i,c
  5894  005F30  5033               	movf	SENO_1@i+1,w,c
  5895  005F32  0A80               	xorlw	128
  5896  005F34  0F80               	addlw	-128
  5897  005F36  0E14               	movlw	20
  5898  005F38  B4D8               	btfsc	status,2,c
  5899  005F3A  5C32               	subwf	SENO_1@i,w,c
  5900  005F3C  B0D8               	btfsc	status,0,c
  5901  005F3E  0012               	return	
  5902                           
  5903                           ;SIN.c: 23: for (j=0;j<valoresSeno[i];j++){
  5904  005F40  0E00               	movlw	0
  5905  005F42  6E31               	movwf	SENO_1@j+1,c
  5906  005F44  0E00               	movlw	0
  5907  005F46  6E30               	movwf	SENO_1@j,c
  5908  005F48  D004               	goto	l2798
  5909  005F4A                     l279:
  5910                           
  5911                           ;SIN.c: 24: PORTCbits.RC2=1;
  5912  005F4A  8482               	bsf	3970,2,c	;volatile
  5913                           
  5914                           ;SIN.c: 25: PORTAbits.RA6=1;
  5915  005F4C  8C80               	bsf	3968,6,c	;volatile
  5916  005F4E  4A30               	infsnz	SENO_1@j,f,c
  5917  005F50  2A31               	incf	SENO_1@j+1,f,c
  5918  005F52                     l2798:
  5919  005F52  0E06               	movlw	low SENO_1@valoresSeno
  5920  005F54  6E01               	movwf	??_SENO_1& (0+255),c
  5921  005F56  0E00               	movlw	high SENO_1@valoresSeno
  5922  005F58  6E02               	movwf	(??_SENO_1+1)& (0+255),c
  5923  005F5A  90D8               	bcf	status,0,c
  5924  005F5C  3432               	rlcf	SENO_1@i,w,c
  5925  005F5E  6ED9               	movwf	fsr2l,c
  5926  005F60  3433               	rlcf	SENO_1@i+1,w,c
  5927  005F62  6EDA               	movwf	fsr2h,c
  5928  005F64  5001               	movf	??_SENO_1,w,c
  5929  005F66  26D9               	addwf	fsr2l,f,c
  5930  005F68  5002               	movf	??_SENO_1+1,w,c
  5931  005F6A  22DA               	addwfc	fsr2h,f,c
  5932  005F6C  CFDE F003          	movff	postinc2,??_SENO_1+2
  5933  005F70  CFDD F004          	movff	postdec2,??_SENO_1+3
  5934  005F74  5031               	movf	SENO_1@j+1,w,c
  5935  005F76  0A80               	xorlw	128
  5936  005F78  6E05               	movwf	(??_SENO_1+4)& (0+255),c
  5937  005F7A  5003               	movf	??_SENO_1+2,w,c
  5938  005F7C  5C30               	subwf	SENO_1@j,w,c
  5939  005F7E  5004               	movf	??_SENO_1+3,w,c
  5940  005F80  0A80               	xorlw	128
  5941  005F82  5805               	subwfb	(??_SENO_1+4)& (0+255),w,c
  5942  005F84  A0D8               	btfss	status,0,c
  5943  005F86  D7E1               	goto	l279
  5944                           
  5945                           ;SIN.c: 26: }
  5946                           ;SIN.c: 27: k=100-valoresSeno[i];
  5947  005F88  0E06               	movlw	low SENO_1@valoresSeno
  5948  005F8A  6E01               	movwf	??_SENO_1& (0+255),c
  5949  005F8C  0E00               	movlw	high SENO_1@valoresSeno
  5950  005F8E  6E02               	movwf	(??_SENO_1+1)& (0+255),c
  5951  005F90  90D8               	bcf	status,0,c
  5952  005F92  3432               	rlcf	SENO_1@i,w,c
  5953  005F94  6ED9               	movwf	fsr2l,c
  5954  005F96  3433               	rlcf	SENO_1@i+1,w,c
  5955  005F98  6EDA               	movwf	fsr2h,c
  5956  005F9A  5001               	movf	??_SENO_1,w,c
  5957  005F9C  26D9               	addwf	fsr2l,f,c
  5958  005F9E  5002               	movf	??_SENO_1+1,w,c
  5959  005FA0  22DA               	addwfc	fsr2h,f,c
  5960  005FA2  CFDE F003          	movff	postinc2,??_SENO_1+2
  5961  005FA6  CFDD F004          	movff	postdec2,??_SENO_1+3
  5962  005FAA  1E03               	comf	??_SENO_1+2,f,c
  5963  005FAC  1E04               	comf	??_SENO_1+3,f,c
  5964  005FAE  4A03               	infsnz	??_SENO_1+2,f,c
  5965  005FB0  2A04               	incf	??_SENO_1+3,f,c
  5966  005FB2  0E64               	movlw	100
  5967  005FB4  2403               	addwf	??_SENO_1+2,w,c
  5968  005FB6  6E2E               	movwf	SENO_1@k,c
  5969  005FB8  0E00               	movlw	0
  5970  005FBA  2004               	addwfc	??_SENO_1+3,w,c
  5971  005FBC  6E2F               	movwf	SENO_1@k+1,c
  5972                           
  5973                           ;SIN.c: 28: for (j=0;j<k;j++){
  5974  005FBE  0E00               	movlw	0
  5975  005FC0  6E31               	movwf	SENO_1@j+1,c
  5976  005FC2  0E00               	movlw	0
  5977  005FC4  6E30               	movwf	SENO_1@j,c
  5978  005FC6  D004               	goto	l2806
  5979  005FC8                     l282:
  5980                           
  5981                           ;SIN.c: 29: PORTCbits.RC2=0;
  5982  005FC8  9482               	bcf	3970,2,c	;volatile
  5983                           
  5984                           ;SIN.c: 30: PORTAbits.RA6=0;
  5985  005FCA  9C80               	bcf	3968,6,c	;volatile
  5986  005FCC  4A30               	infsnz	SENO_1@j,f,c
  5987  005FCE  2A31               	incf	SENO_1@j+1,f,c
  5988  005FD0                     l2806:
  5989  005FD0  5031               	movf	SENO_1@j+1,w,c
  5990  005FD2  0A80               	xorlw	128
  5991  005FD4  6E01               	movwf	??_SENO_1& (0+255),c
  5992  005FD6  502E               	movf	SENO_1@k,w,c
  5993  005FD8  5C30               	subwf	SENO_1@j,w,c
  5994  005FDA  502F               	movf	SENO_1@k+1,w,c
  5995  005FDC  0A80               	xorlw	128
  5996  005FDE  5801               	subwfb	??_SENO_1& (0+255),w,c
  5997  005FE0  A0D8               	btfss	status,0,c
  5998  005FE2  D7F2               	goto	l282
  5999  005FE4  4A32               	infsnz	SENO_1@i,f,c
  6000  005FE6  2A33               	incf	SENO_1@i+1,f,c
  6001  005FE8  D7A3               	goto	L23
  6002  005FEA                     __end_of_SENO_1:
  6003                           	opt stack 0
  6004                           tblptru	equ	0xFF8
  6005                           tblptrh	equ	0xFF7
  6006                           tblptrl	equ	0xFF6
  6007                           tablat	equ	0xFF5
  6008                           prodh	equ	0xFF4
  6009                           prodl	equ	0xFF3
  6010                           postinc0	equ	0xFEE
  6011                           wreg	equ	0xFE8
  6012                           postinc1	equ	0xFE6
  6013                           postdec1	equ	0xFE5
  6014                           fsr1l	equ	0xFE1
  6015                           postinc2	equ	0xFDE
  6016                           postdec2	equ	0xFDD
  6017                           fsr2h	equ	0xFDA
  6018                           fsr2l	equ	0xFD9
  6019                           status	equ	0xFD8
  6020                           
  6021 ;; *************** function _PWM_generar *****************
  6022 ;; Defined at:
  6023 ;;		line 9 in file "PWM.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  ciclo           2   13[COMRAM] unsigned int 
  6026 ;;  frecuencia      2   15[COMRAM] unsigned int 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  AuxCCPR2L       4   29[COMRAM] unsigned long 
  6029 ;;  PR2cal          4   25[COMRAM] unsigned long 
  6030 ;;  AuxCCP2CON      2   23[COMRAM] unsigned int 
  6031 ;;  prescalador     2   21[COMRAM] unsigned int 
  6032 ;; Return value:  Size  Location     Type
  6033 ;;		None               void
  6034 ;; Registers used:
  6035 ;;		wreg, status,2, status,0, cstack
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6041 ;;      Params:         4       0       0       0       0       0       0       0       0
  6042 ;;      Locals:        12       0       0       0       0       0       0       0       0
  6043 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6044 ;;      Totals:        20       0       0       0       0       0       0       0       0
  6045 ;;Total ram usage:       20 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:    1
  6048 ;; This function calls:
  6049 ;;		___lldiv
  6050 ;;		___lmul
  6051 ;; This function is called by:
  6052 ;;		_main
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           	psect	text11
  6057  006BBA                     __ptext11:
  6058                           	opt stack 0
  6059  006BBA                     _PWM_generar:
  6060                           	opt stack 29
  6061                           
  6062                           ;PWM.c: 16: TRISCbits.RC1=0;
  6063                           
  6064                           ;incstack = 0
  6065  006BBA  9294               	bcf	3988,1,c	;volatile
  6066                           
  6067                           ;PWM.c: 18: unsigned int prescalador=1;
  6068  006BBC  0E00               	movlw	0
  6069  006BBE  6E17               	movwf	PWM_generar@prescalador+1,c
  6070  006BC0  0E01               	movlw	1
  6071  006BC2  6E16               	movwf	PWM_generar@prescalador,c
  6072                           
  6073                           ;PWM.c: 19: unsigned long PR2cal=4000000;
  6074  006BC4  0E00               	movlw	0
  6075  006BC6  6E1A               	movwf	PWM_generar@PR2cal,c
  6076  006BC8  0E09               	movlw	9
  6077  006BCA  6E1B               	movwf	PWM_generar@PR2cal+1,c
  6078  006BCC  0E3D               	movlw	61
  6079  006BCE  6E1C               	movwf	PWM_generar@PR2cal+2,c
  6080  006BD0  0E00               	movlw	0
  6081  006BD2  6E1D               	movwf	PWM_generar@PR2cal+3,c
  6082                           
  6083                           ;PWM.c: 20: PR2cal=PR2cal/frecuencia;
  6084  006BD4  C01A  F001         	movff	PWM_generar@PR2cal,___lldiv@dividend
  6085  006BD8  C01B  F002         	movff	PWM_generar@PR2cal+1,___lldiv@dividend+1
  6086  006BDC  C01C  F003         	movff	PWM_generar@PR2cal+2,___lldiv@dividend+2
  6087  006BE0  C01D  F004         	movff	PWM_generar@PR2cal+3,___lldiv@dividend+3
  6088  006BE4  C010  F005         	movff	PWM_generar@frecuencia,___lldiv@divisor
  6089  006BE8  C011  F006         	movff	PWM_generar@frecuencia+1,___lldiv@divisor+1
  6090  006BEC  6A07               	clrf	___lldiv@divisor+2,c
  6091  006BEE  6A08               	clrf	___lldiv@divisor+3,c
  6092  006BF0  ECE0  F02D         	call	___lldiv	;wreg free
  6093  006BF4  C001  F01A         	movff	?___lldiv,PWM_generar@PR2cal
  6094  006BF8  C002  F01B         	movff	?___lldiv+1,PWM_generar@PR2cal+1
  6095  006BFC  C003  F01C         	movff	?___lldiv+2,PWM_generar@PR2cal+2
  6096  006C00  C004  F01D         	movff	?___lldiv+3,PWM_generar@PR2cal+3
  6097                           
  6098                           ;PWM.c: 21: PR2cal=PR2cal/4;
  6099  006C04  C01A  F012         	movff	PWM_generar@PR2cal,??_PWM_generar
  6100  006C08  C01B  F013         	movff	PWM_generar@PR2cal+1,??_PWM_generar+1
  6101  006C0C  C01C  F014         	movff	PWM_generar@PR2cal+2,??_PWM_generar+2
  6102  006C10  C01D  F015         	movff	PWM_generar@PR2cal+3,??_PWM_generar+3
  6103  006C14  0E03               	movlw	3
  6104  006C16  D005               	goto	u2110
  6105  006C18                     u2115:
  6106  006C18  90D8               	bcf	status,0,c
  6107  006C1A  3215               	rrcf	??_PWM_generar+3,f,c
  6108  006C1C  3214               	rrcf	??_PWM_generar+2,f,c
  6109  006C1E  3213               	rrcf	??_PWM_generar+1,f,c
  6110  006C20  3212               	rrcf	??_PWM_generar,f,c
  6111  006C22                     u2110:
  6112  006C22  2EE8               	decfsz	wreg,f,c
  6113  006C24  D7F9               	goto	u2115
  6114  006C26  C012  F01A         	movff	??_PWM_generar,PWM_generar@PR2cal
  6115  006C2A  C013  F01B         	movff	??_PWM_generar+1,PWM_generar@PR2cal+1
  6116  006C2E  C014  F01C         	movff	??_PWM_generar+2,PWM_generar@PR2cal+2
  6117  006C32  C015  F01D         	movff	??_PWM_generar+3,PWM_generar@PR2cal+3
  6118                           
  6119                           ;PWM.c: 22: T2CON=0b00000000;
  6120  006C36  0E00               	movlw	0
  6121  006C38  6EBA               	movwf	4026,c	;volatile
  6122                           
  6123                           ;PWM.c: 23: while(PR2cal>256){
  6124  006C3A  D028               	goto	l2740
  6125  006C3C                     l2736:
  6126                           
  6127                           ;PWM.c: 24: prescalador=prescalador*4;
  6128  006C3C  C016  F012         	movff	PWM_generar@prescalador,??_PWM_generar
  6129  006C40  C017  F013         	movff	PWM_generar@prescalador+1,??_PWM_generar+1
  6130  006C44  90D8               	bcf	status,0,c
  6131  006C46  3612               	rlcf	??_PWM_generar,f,c
  6132  006C48  3613               	rlcf	??_PWM_generar+1,f,c
  6133  006C4A  90D8               	bcf	status,0,c
  6134  006C4C  3612               	rlcf	??_PWM_generar,f,c
  6135  006C4E  3613               	rlcf	??_PWM_generar+1,f,c
  6136  006C50  C012  F016         	movff	??_PWM_generar,PWM_generar@prescalador
  6137  006C54  C013  F017         	movff	??_PWM_generar+1,PWM_generar@prescalador+1
  6138                           
  6139                           ;PWM.c: 25: T2CON++;
  6140  006C58  2ABA               	incf	4026,f,c	;volatile
  6141                           
  6142                           ;PWM.c: 26: PR2cal=PR2cal/4;
  6143  006C5A  C01A  F012         	movff	PWM_generar@PR2cal,??_PWM_generar
  6144  006C5E  C01B  F013         	movff	PWM_generar@PR2cal+1,??_PWM_generar+1
  6145  006C62  C01C  F014         	movff	PWM_generar@PR2cal+2,??_PWM_generar+2
  6146  006C66  C01D  F015         	movff	PWM_generar@PR2cal+3,??_PWM_generar+3
  6147  006C6A  0E03               	movlw	3
  6148  006C6C  D005               	goto	u2120
  6149  006C6E                     u2125:
  6150  006C6E  90D8               	bcf	status,0,c
  6151  006C70  3215               	rrcf	??_PWM_generar+3,f,c
  6152  006C72  3214               	rrcf	??_PWM_generar+2,f,c
  6153  006C74  3213               	rrcf	??_PWM_generar+1,f,c
  6154  006C76  3212               	rrcf	??_PWM_generar,f,c
  6155  006C78                     u2120:
  6156  006C78  2EE8               	decfsz	wreg,f,c
  6157  006C7A  D7F9               	goto	u2125
  6158  006C7C  C012  F01A         	movff	??_PWM_generar,PWM_generar@PR2cal
  6159  006C80  C013  F01B         	movff	??_PWM_generar+1,PWM_generar@PR2cal+1
  6160  006C84  C014  F01C         	movff	??_PWM_generar+2,PWM_generar@PR2cal+2
  6161  006C88  C015  F01D         	movff	??_PWM_generar+3,PWM_generar@PR2cal+3
  6162  006C8C                     l2740:
  6163  006C8C  0E01               	movlw	1
  6164  006C8E  6E12               	movwf	??_PWM_generar& (0+255),c
  6165  006C90  0E01               	movlw	1
  6166  006C92  6E13               	movwf	(??_PWM_generar+1)& (0+255),c
  6167  006C94  0E00               	movlw	0
  6168  006C96  6E14               	movwf	(??_PWM_generar+2)& (0+255),c
  6169  006C98  0E00               	movlw	0
  6170  006C9A  6E15               	movwf	(??_PWM_generar+3)& (0+255),c
  6171  006C9C  5012               	movf	??_PWM_generar,w,c
  6172  006C9E  5C1A               	subwf	PWM_generar@PR2cal,w,c
  6173  006CA0  5013               	movf	??_PWM_generar+1,w,c
  6174  006CA2  581B               	subwfb	PWM_generar@PR2cal+1,w,c
  6175  006CA4  5014               	movf	??_PWM_generar+2,w,c
  6176  006CA6  581C               	subwfb	PWM_generar@PR2cal+2,w,c
  6177  006CA8  5015               	movf	??_PWM_generar+3,w,c
  6178  006CAA  581D               	subwfb	PWM_generar@PR2cal+3,w,c
  6179  006CAC  B0D8               	btfsc	status,0,c
  6180  006CAE  D7C6               	goto	l2736
  6181                           
  6182                           ;PWM.c: 27: }
  6183                           ;PWM.c: 28: PR2cal--;
  6184  006CB0  061A               	decf	PWM_generar@PR2cal,f,c
  6185  006CB2  0E00               	movlw	0
  6186  006CB4  5A1B               	subwfb	PWM_generar@PR2cal+1,f,c
  6187  006CB6  5A1C               	subwfb	PWM_generar@PR2cal+2,f,c
  6188  006CB8  5A1D               	subwfb	PWM_generar@PR2cal+3,f,c
  6189                           
  6190                           ;PWM.c: 29: PR2=PR2cal;
  6191  006CBA  C01A  FFBB         	movff	PWM_generar@PR2cal,4027	;volatile
  6192                           
  6193                           ;PWM.c: 36: unsigned long AuxCCPR2L=PR2cal;
  6194  006CBE  C01A  F01E         	movff	PWM_generar@PR2cal,PWM_generar@AuxCCPR2L
  6195  006CC2  C01B  F01F         	movff	PWM_generar@PR2cal+1,PWM_generar@AuxCCPR2L+1
  6196  006CC6  C01C  F020         	movff	PWM_generar@PR2cal+2,PWM_generar@AuxCCPR2L+2
  6197  006CCA  C01D  F021         	movff	PWM_generar@PR2cal+3,PWM_generar@AuxCCPR2L+3
  6198                           
  6199                           ;PWM.c: 37: AuxCCPR2L++;
  6200  006CCE  0E01               	movlw	1
  6201  006CD0  261E               	addwf	PWM_generar@AuxCCPR2L,f,c
  6202  006CD2  0E00               	movlw	0
  6203  006CD4  221F               	addwfc	PWM_generar@AuxCCPR2L+1,f,c
  6204  006CD6  2220               	addwfc	PWM_generar@AuxCCPR2L+2,f,c
  6205  006CD8  2221               	addwfc	PWM_generar@AuxCCPR2L+3,f,c
  6206                           
  6207                           ;PWM.c: 38: AuxCCPR2L=AuxCCPR2L*ciclo;
  6208  006CDA  C00E  F001         	movff	PWM_generar@ciclo,___lmul@multiplier
  6209  006CDE  C00F  F002         	movff	PWM_generar@ciclo+1,___lmul@multiplier+1
  6210  006CE2  6A03               	clrf	___lmul@multiplier+2,c
  6211  006CE4  6A04               	clrf	___lmul@multiplier+3,c
  6212  006CE6  C01E  F005         	movff	PWM_generar@AuxCCPR2L,___lmul@multiplicand
  6213  006CEA  C01F  F006         	movff	PWM_generar@AuxCCPR2L+1,___lmul@multiplicand+1
  6214  006CEE  C020  F007         	movff	PWM_generar@AuxCCPR2L+2,___lmul@multiplicand+2
  6215  006CF2  C021  F008         	movff	PWM_generar@AuxCCPR2L+3,___lmul@multiplicand+3
  6216  006CF6  EC1F  F02D         	call	___lmul	;wreg free
  6217  006CFA  C001  F01E         	movff	?___lmul,PWM_generar@AuxCCPR2L
  6218  006CFE  C002  F01F         	movff	?___lmul+1,PWM_generar@AuxCCPR2L+1
  6219  006D02  C003  F020         	movff	?___lmul+2,PWM_generar@AuxCCPR2L+2
  6220  006D06  C004  F021         	movff	?___lmul+3,PWM_generar@AuxCCPR2L+3
  6221                           
  6222                           ;PWM.c: 39: AuxCCPR2L=AuxCCPR2L*4;
  6223  006D0A  C01E  F012         	movff	PWM_generar@AuxCCPR2L,??_PWM_generar
  6224  006D0E  C01F  F013         	movff	PWM_generar@AuxCCPR2L+1,??_PWM_generar+1
  6225  006D12  C020  F014         	movff	PWM_generar@AuxCCPR2L+2,??_PWM_generar+2
  6226  006D16  C021  F015         	movff	PWM_generar@AuxCCPR2L+3,??_PWM_generar+3
  6227  006D1A  0E02               	movlw	2
  6228  006D1C                     u2145:
  6229  006D1C  90D8               	bcf	status,0,c
  6230  006D1E  3612               	rlcf	??_PWM_generar,f,c
  6231  006D20  3613               	rlcf	??_PWM_generar+1,f,c
  6232  006D22  3614               	rlcf	??_PWM_generar+2,f,c
  6233  006D24  3615               	rlcf	??_PWM_generar+3,f,c
  6234  006D26  2EE8               	decfsz	wreg,f,c
  6235  006D28  D7F9               	goto	u2145
  6236  006D2A  C012  F01E         	movff	??_PWM_generar,PWM_generar@AuxCCPR2L
  6237  006D2E  C013  F01F         	movff	??_PWM_generar+1,PWM_generar@AuxCCPR2L+1
  6238  006D32  C014  F020         	movff	??_PWM_generar+2,PWM_generar@AuxCCPR2L+2
  6239  006D36  C015  F021         	movff	??_PWM_generar+3,PWM_generar@AuxCCPR2L+3
  6240                           
  6241                           ;PWM.c: 40: AuxCCPR2L=AuxCCPR2L/100;
  6242  006D3A  C01E  F001         	movff	PWM_generar@AuxCCPR2L,___lldiv@dividend
  6243  006D3E  C01F  F002         	movff	PWM_generar@AuxCCPR2L+1,___lldiv@dividend+1
  6244  006D42  C020  F003         	movff	PWM_generar@AuxCCPR2L+2,___lldiv@dividend+2
  6245  006D46  C021  F004         	movff	PWM_generar@AuxCCPR2L+3,___lldiv@dividend+3
  6246  006D4A  0E64               	movlw	100
  6247  006D4C  6E05               	movwf	___lldiv@divisor,c
  6248  006D4E  0E00               	movlw	0
  6249  006D50  6E06               	movwf	___lldiv@divisor+1,c
  6250  006D52  0E00               	movlw	0
  6251  006D54  6E07               	movwf	___lldiv@divisor+2,c
  6252  006D56  0E00               	movlw	0
  6253  006D58  6E08               	movwf	___lldiv@divisor+3,c
  6254  006D5A  ECE0  F02D         	call	___lldiv	;wreg free
  6255  006D5E  C001  F01E         	movff	?___lldiv,PWM_generar@AuxCCPR2L
  6256  006D62  C002  F01F         	movff	?___lldiv+1,PWM_generar@AuxCCPR2L+1
  6257  006D66  C003  F020         	movff	?___lldiv+2,PWM_generar@AuxCCPR2L+2
  6258  006D6A  C004  F021         	movff	?___lldiv+3,PWM_generar@AuxCCPR2L+3
  6259                           
  6260                           ;PWM.c: 41: unsigned int AuxCCP2CON= AuxCCPR2L;
  6261  006D6E  C01E  F018         	movff	PWM_generar@AuxCCPR2L,PWM_generar@AuxCCP2CON
  6262  006D72  C01F  F019         	movff	PWM_generar@AuxCCPR2L+1,PWM_generar@AuxCCP2CON+1
  6263                           
  6264                           ;PWM.c: 42: AuxCCP2CON= AuxCCP2CON & 0b00000011 ;
  6265  006D76  0E03               	movlw	3
  6266  006D78  1418               	andwf	PWM_generar@AuxCCP2CON,w,c
  6267  006D7A  6E18               	movwf	PWM_generar@AuxCCP2CON,c
  6268  006D7C  6A19               	clrf	PWM_generar@AuxCCP2CON+1,c
  6269                           
  6270                           ;PWM.c: 43: AuxCCP2CON= AuxCCP2CON*16;
  6271  006D7E  C018  F012         	movff	PWM_generar@AuxCCP2CON,??_PWM_generar
  6272  006D82  C019  F013         	movff	PWM_generar@AuxCCP2CON+1,??_PWM_generar+1
  6273  006D86  3A12               	swapf	??_PWM_generar,f,c
  6274  006D88  3A13               	swapf	??_PWM_generar+1,f,c
  6275  006D8A  0EF0               	movlw	240
  6276  006D8C  1613               	andwf	??_PWM_generar+1,f,c
  6277  006D8E  5012               	movf	??_PWM_generar,w,c
  6278  006D90  0B0F               	andlw	15
  6279  006D92  1213               	iorwf	??_PWM_generar+1,f,c
  6280  006D94  0EF0               	movlw	240
  6281  006D96  1612               	andwf	??_PWM_generar,f,c
  6282  006D98  C012  F018         	movff	??_PWM_generar,PWM_generar@AuxCCP2CON
  6283  006D9C  C013  F019         	movff	??_PWM_generar+1,PWM_generar@AuxCCP2CON+1
  6284                           
  6285                           ;PWM.c: 44: CCP2CON= 0b00001100;
  6286  006DA0  0E0C               	movlw	12
  6287  006DA2  6E97               	movwf	3991,c	;volatile
  6288                           
  6289                           ;PWM.c: 45: CCP2CON= CCP2CON|AuxCCP2CON;
  6290  006DA4  5097               	movf	3991,w,c
  6291  006DA6  1018               	iorwf	PWM_generar@AuxCCP2CON,w,c
  6292  006DA8  6E97               	movwf	3991,c	;volatile
  6293                           
  6294                           ;PWM.c: 46: AuxCCPR2L=AuxCCPR2L/4;
  6295  006DAA  C01E  F012         	movff	PWM_generar@AuxCCPR2L,??_PWM_generar
  6296  006DAE  C01F  F013         	movff	PWM_generar@AuxCCPR2L+1,??_PWM_generar+1
  6297  006DB2  C020  F014         	movff	PWM_generar@AuxCCPR2L+2,??_PWM_generar+2
  6298  006DB6  C021  F015         	movff	PWM_generar@AuxCCPR2L+3,??_PWM_generar+3
  6299  006DBA  0E03               	movlw	3
  6300  006DBC  D005               	goto	u2150
  6301  006DBE                     u2155:
  6302  006DBE  90D8               	bcf	status,0,c
  6303  006DC0  3215               	rrcf	??_PWM_generar+3,f,c
  6304  006DC2  3214               	rrcf	??_PWM_generar+2,f,c
  6305  006DC4  3213               	rrcf	??_PWM_generar+1,f,c
  6306  006DC6  3212               	rrcf	??_PWM_generar,f,c
  6307  006DC8                     u2150:
  6308  006DC8  2EE8               	decfsz	wreg,f,c
  6309  006DCA  D7F9               	goto	u2155
  6310  006DCC  C012  F01E         	movff	??_PWM_generar,PWM_generar@AuxCCPR2L
  6311  006DD0  C013  F01F         	movff	??_PWM_generar+1,PWM_generar@AuxCCPR2L+1
  6312  006DD4  C014  F020         	movff	??_PWM_generar+2,PWM_generar@AuxCCPR2L+2
  6313  006DD8  C015  F021         	movff	??_PWM_generar+3,PWM_generar@AuxCCPR2L+3
  6314                           
  6315                           ;PWM.c: 47: CCPR2L=AuxCCPR2L;
  6316  006DDC  C01E  FF90         	movff	PWM_generar@AuxCCPR2L,3984	;volatile
  6317                           
  6318                           ;PWM.c: 48: T2CONbits.TMR2ON=1;
  6319  006DE0  84BA               	bsf	4026,2,c	;volatile
  6320                           
  6321                           ;PWM.c: 49: TMR2=0;
  6322  006DE2  0E00               	movlw	0
  6323  006DE4  6EBC               	movwf	4028,c	;volatile
  6324  006DE6  0012               	return	
  6325  006DE8                     __end_of_PWM_generar:
  6326                           	opt stack 0
  6327                           tblptru	equ	0xFF8
  6328                           tblptrh	equ	0xFF7
  6329                           tblptrl	equ	0xFF6
  6330                           tablat	equ	0xFF5
  6331                           prodh	equ	0xFF4
  6332                           prodl	equ	0xFF3
  6333                           postinc0	equ	0xFEE
  6334                           wreg	equ	0xFE8
  6335                           postinc1	equ	0xFE6
  6336                           postdec1	equ	0xFE5
  6337                           fsr1l	equ	0xFE1
  6338                           postinc2	equ	0xFDE
  6339                           postdec2	equ	0xFDD
  6340                           fsr2h	equ	0xFDA
  6341                           fsr2l	equ	0xFD9
  6342                           status	equ	0xFD8
  6343                           
  6344 ;; *************** function ___lldiv *****************
  6345 ;; Defined at:
  6346 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/lldiv.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  dividend        4    0[COMRAM] unsigned long 
  6349 ;;  divisor         4    4[COMRAM] unsigned long 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  quotient        4    8[COMRAM] unsigned long 
  6352 ;;  counter         1   12[COMRAM] unsigned char 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  4    0[COMRAM] unsigned long 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6362 ;;      Params:         8       0       0       0       0       0       0       0       0
  6363 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6365 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6366 ;;Total ram usage:       13 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; This function calls:
  6369 ;;		Nothing
  6370 ;; This function is called by:
  6371 ;;		_PWM_generar
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text12
  6376  005BC0                     __ptext12:
  6377                           	opt stack 0
  6378  005BC0                     ___lldiv:
  6379                           	opt stack 29
  6380                           
  6381                           ;incstack = 0
  6382  005BC0  0E00               	movlw	0
  6383  005BC2  6E09               	movwf	___lldiv@quotient,c
  6384  005BC4  0E00               	movlw	0
  6385  005BC6  6E0A               	movwf	___lldiv@quotient+1,c
  6386  005BC8  0E00               	movlw	0
  6387  005BCA  6E0B               	movwf	___lldiv@quotient+2,c
  6388  005BCC  0E00               	movlw	0
  6389  005BCE  6E0C               	movwf	___lldiv@quotient+3,c
  6390  005BD0  5008               	movf	___lldiv@divisor+3,w,c
  6391  005BD2  1005               	iorwf	___lldiv@divisor,w,c
  6392  005BD4  1006               	iorwf	___lldiv@divisor+1,w,c
  6393  005BD6  1007               	iorwf	___lldiv@divisor+2,w,c
  6394  005BD8  B4D8               	btfsc	status,2,c
  6395  005BDA  D02A               	goto	l838
  6396  005BDC  0E01               	movlw	1
  6397  005BDE  6E0D               	movwf	___lldiv@counter,c
  6398  005BE0  D006               	goto	l2572
  6399  005BE2                     l2570:
  6400  005BE2  90D8               	bcf	status,0,c
  6401  005BE4  3605               	rlcf	___lldiv@divisor,f,c
  6402  005BE6  3606               	rlcf	___lldiv@divisor+1,f,c
  6403  005BE8  3607               	rlcf	___lldiv@divisor+2,f,c
  6404  005BEA  3608               	rlcf	___lldiv@divisor+3,f,c
  6405  005BEC  2A0D               	incf	___lldiv@counter,f,c
  6406  005BEE                     l2572:
  6407  005BEE  AE08               	btfss	___lldiv@divisor+3,7,c
  6408  005BF0  D7F8               	goto	l2570
  6409  005BF2                     l2574:
  6410  005BF2  90D8               	bcf	status,0,c
  6411  005BF4  3609               	rlcf	___lldiv@quotient,f,c
  6412  005BF6  360A               	rlcf	___lldiv@quotient+1,f,c
  6413  005BF8  360B               	rlcf	___lldiv@quotient+2,f,c
  6414  005BFA  360C               	rlcf	___lldiv@quotient+3,f,c
  6415  005BFC  5005               	movf	___lldiv@divisor,w,c
  6416  005BFE  5C01               	subwf	___lldiv@dividend,w,c
  6417  005C00  5006               	movf	___lldiv@divisor+1,w,c
  6418  005C02  5802               	subwfb	___lldiv@dividend+1,w,c
  6419  005C04  5007               	movf	___lldiv@divisor+2,w,c
  6420  005C06  5803               	subwfb	___lldiv@dividend+2,w,c
  6421  005C08  5008               	movf	___lldiv@divisor+3,w,c
  6422  005C0A  5804               	subwfb	___lldiv@dividend+3,w,c
  6423  005C0C  A0D8               	btfss	status,0,c
  6424  005C0E  D009               	goto	l2582
  6425  005C10  5005               	movf	___lldiv@divisor,w,c
  6426  005C12  5E01               	subwf	___lldiv@dividend,f,c
  6427  005C14  5006               	movf	___lldiv@divisor+1,w,c
  6428  005C16  5A02               	subwfb	___lldiv@dividend+1,f,c
  6429  005C18  5007               	movf	___lldiv@divisor+2,w,c
  6430  005C1A  5A03               	subwfb	___lldiv@dividend+2,f,c
  6431  005C1C  5008               	movf	___lldiv@divisor+3,w,c
  6432  005C1E  5A04               	subwfb	___lldiv@dividend+3,f,c
  6433  005C20  8009               	bsf	___lldiv@quotient,0,c
  6434  005C22                     l2582:
  6435  005C22  90D8               	bcf	status,0,c
  6436  005C24  3208               	rrcf	___lldiv@divisor+3,f,c
  6437  005C26  3207               	rrcf	___lldiv@divisor+2,f,c
  6438  005C28  3206               	rrcf	___lldiv@divisor+1,f,c
  6439  005C2A  3205               	rrcf	___lldiv@divisor,f,c
  6440  005C2C  2E0D               	decfsz	___lldiv@counter,f,c
  6441  005C2E  D7E1               	goto	l2574
  6442  005C30                     l838:
  6443  005C30  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6444  005C34  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6445  005C38  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6446  005C3C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6447  005C40  0012               	return	
  6448  005C42                     __end_of___lldiv:
  6449                           	opt stack 0
  6450                           tblptru	equ	0xFF8
  6451                           tblptrh	equ	0xFF7
  6452                           tblptrl	equ	0xFF6
  6453                           tablat	equ	0xFF5
  6454                           prodh	equ	0xFF4
  6455                           prodl	equ	0xFF3
  6456                           postinc0	equ	0xFEE
  6457                           wreg	equ	0xFE8
  6458                           postinc1	equ	0xFE6
  6459                           postdec1	equ	0xFE5
  6460                           fsr1l	equ	0xFE1
  6461                           postinc2	equ	0xFDE
  6462                           postdec2	equ	0xFDD
  6463                           fsr2h	equ	0xFDA
  6464                           fsr2l	equ	0xFD9
  6465                           status	equ	0xFD8
  6466                           
  6467 ;; *************** function _Lcd_Out2 *****************
  6468 ;; Defined at:
  6469 ;;		line 113 in file "LCD.h"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  y               1    wreg     unsigned char 
  6472 ;;  x               1    3[COMRAM] unsigned char 
  6473 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  6474 ;;		 -> STR_91(8), STR_90(10), STR_89(8), STR_88(10), 
  6475 ;;		 -> STR_87(10), STR_86(8), STR_85(10), STR_84(10), 
  6476 ;;		 -> STR_83(14), STR_82(7), STR_81(9), STR_80(7), 
  6477 ;;		 -> STR_79(9), STR_78(9), STR_77(7), STR_76(9), 
  6478 ;;		 -> STR_75(9), STR_74(12), STR_73(7), STR_72(2), 
  6479 ;;		 -> STR_71(4), STR_70(11), STR_69(12), STR_68(12), 
  6480 ;;		 -> STR_67(6), STR_66(5), STR_65(5), STR_64(5), 
  6481 ;;		 -> STR_63(6), STR_62(5), STR_61(5), STR_60(5), 
  6482 ;;		 -> STR_59(6), STR_58(5), STR_57(5), STR_56(5), 
  6483 ;;		 -> STR_55(6), STR_54(5), STR_53(5), STR_52(6), 
  6484 ;;		 -> STR_51(5), STR_50(5), STR_49(5), STR_48(5), 
  6485 ;;		 -> STR_47(5), STR_46(5), STR_45(5), STR_44(5), 
  6486 ;;		 -> STR_43(5), STR_42(5), STR_41(5), STR_40(5), 
  6487 ;;		 -> STR_39(5), STR_38(5), STR_37(5), STR_36(5), 
  6488 ;;		 -> STR_35(5), STR_34(5), STR_33(5), STR_32(5), 
  6489 ;;		 -> STR_31(5), STR_30(5), STR_29(5), STR_28(5), 
  6490 ;;		 -> STR_27(5), STR_26(5), STR_25(5), STR_24(5), 
  6491 ;;		 -> STR_23(5), STR_22(5), STR_21(5), STR_20(5), 
  6492 ;;		 -> STR_19(5), STR_18(5), STR_17(5), STR_16(5), 
  6493 ;;		 -> STR_15(9), STR_14(14), STR_13(9), STR_12(9), 
  6494 ;;		 -> STR_11(14), STR_10(9), STR_9(14), STR_8(12), 
  6495 ;;		 -> STR_7(12), STR_6(12), STR_5(12), STR_4(12), 
  6496 ;;		 -> STR_3(7), STR_2(16), STR_1(11), 
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;  y               1    6[COMRAM] unsigned char 
  6499 ;;  data            1    7[COMRAM] unsigned char 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;		None               void
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6509 ;;      Params:         3       0       0       0       0       0       0       0       0
  6510 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6512 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6513 ;;Total ram usage:        5 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:    1
  6516 ;; This function calls:
  6517 ;;		_Lcd_Chr_CP
  6518 ;;		_Lcd_Cmd
  6519 ;; This function is called by:
  6520 ;;		_main
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           	psect	text13
  6525  005B58                     __ptext13:
  6526                           	opt stack 0
  6527  005B58                     _Lcd_Out2:
  6528                           	opt stack 29
  6529                           
  6530                           ;incstack = 0
  6531                           ;Lcd_Out2@y stored from wreg
  6532  005B58  6E07               	movwf	Lcd_Out2@y,c
  6533                           
  6534                           ;LCD.h: 115: unsigned char data;
  6535                           ;LCD.h: 116: switch (y)
  6536  005B5A  D00D               	goto	l2696
  6537  005B5C                     l2686:
  6538  005B5C  5004               	movf	Lcd_Out2@x,w,c
  6539  005B5E  0F80               	addlw	128
  6540  005B60  D008               	goto	L26
  6541  005B62                     l2688:
  6542  005B62  5004               	movf	Lcd_Out2@x,w,c
  6543  005B64  0FC0               	addlw	192
  6544  005B66  D005               	goto	L26
  6545  005B68                     l2690:
  6546  005B68  5004               	movf	Lcd_Out2@x,w,c
  6547  005B6A  0F94               	addlw	148
  6548  005B6C  D002               	goto	L26
  6549  005B6E                     l2692:
  6550  005B6E  5004               	movf	Lcd_Out2@x,w,c
  6551  005B70  0FD4               	addlw	212
  6552  005B72                     L26:
  6553  005B72  6E08               	movwf	Lcd_Out2@data,c
  6554  005B74  D00D               	goto	l2698
  6555  005B76                     l2696:
  6556  005B76  5007               	movf	Lcd_Out2@y,w,c
  6557                           
  6558                           ; Switch size 1, requested type "space"
  6559                           ; Number of cases is 4, Range of values is 1 to 4
  6560                           ; switch strategies available:
  6561                           ; Name         Instructions Cycles
  6562                           ; simple_byte           13     7 (average)
  6563                           ;	Chosen strategy is simple_byte
  6564  005B78  0A01               	xorlw	1	; case 1
  6565  005B7A  B4D8               	btfsc	status,2,c
  6566  005B7C  D7EF               	goto	l2686
  6567  005B7E  0A03               	xorlw	3	; case 2
  6568  005B80  B4D8               	btfsc	status,2,c
  6569  005B82  D7EF               	goto	l2688
  6570  005B84  0A01               	xorlw	1	; case 3
  6571  005B86  B4D8               	btfsc	status,2,c
  6572  005B88  D7EF               	goto	l2690
  6573  005B8A  0A07               	xorlw	7	; case 4
  6574  005B8C  B4D8               	btfsc	status,2,c
  6575  005B8E  D7EF               	goto	l2692
  6576  005B90                     l2698:
  6577                           
  6578                           ;LCD.h: 124: Lcd_Cmd(data);
  6579  005B90  5008               	movf	Lcd_Out2@data,w,c
  6580  005B92  ECEA  F031         	call	_Lcd_Cmd
  6581                           
  6582                           ;LCD.h: 125: while(*buffer)
  6583  005B96  D00A               	goto	l2704
  6584  005B98                     l2700:
  6585                           
  6586                           ;LCD.h: 126: {
  6587                           ;LCD.h: 127: Lcd_Chr_CP(*buffer);
  6588  005B98  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  6589  005B9C  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  6590  005BA0                     	if	0	;tblptru may be non-zero
  6591  005BA0                     	endif
  6592  005BA0                     	if	0	;tblptru may be non-zero
  6593  005BA0                     	endif
  6594  005BA0  0008               	tblrd		*
  6595  005BA2  50F5               	movf	tablat,w,c
  6596  005BA4  EC11  F033         	call	_Lcd_Chr_CP
  6597                           
  6598                           ;LCD.h: 128: buffer++;
  6599  005BA8  4A05               	infsnz	Lcd_Out2@buffer,f,c
  6600  005BAA  2A06               	incf	Lcd_Out2@buffer+1,f,c
  6601  005BAC                     l2704:
  6602  005BAC  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  6603  005BB0  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  6604  005BB4                     	if	0	;tblptru may be non-zero
  6605  005BB4                     	endif
  6606  005BB4                     	if	0	;tblptru may be non-zero
  6607  005BB4                     	endif
  6608  005BB4  0008               	tblrd		*
  6609  005BB6  50F5               	movf	tablat,w,c
  6610  005BB8  0900               	iorlw	0
  6611  005BBA  B4D8               	btfsc	status,2,c
  6612                           
  6613                           ;LCD.h: 129: }
  6614                           ;LCD.h: 130: return;
  6615  005BBC  0012               	return	
  6616  005BBE  D7EC               	goto	l2700
  6617  005BC0                     __end_of_Lcd_Out2:
  6618                           	opt stack 0
  6619                           tblptru	equ	0xFF8
  6620                           tblptrh	equ	0xFF7
  6621                           tblptrl	equ	0xFF6
  6622                           tablat	equ	0xFF5
  6623                           prodh	equ	0xFF4
  6624                           prodl	equ	0xFF3
  6625                           postinc0	equ	0xFEE
  6626                           wreg	equ	0xFE8
  6627                           postinc1	equ	0xFE6
  6628                           postdec1	equ	0xFE5
  6629                           fsr1l	equ	0xFE1
  6630                           postinc2	equ	0xFDE
  6631                           postdec2	equ	0xFDD
  6632                           fsr2h	equ	0xFDA
  6633                           fsr2l	equ	0xFD9
  6634                           status	equ	0xFD8
  6635                           
  6636 ;; *************** function _Lcd_Out *****************
  6637 ;; Defined at:
  6638 ;;		line 92 in file "LCD.h"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;  y               1    wreg     unsigned char 
  6641 ;;  x               1    3[COMRAM] unsigned char 
  6642 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  6643 ;;		 -> main@cadena(20), 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  y               1    6[COMRAM] unsigned char 
  6646 ;;  data            1    7[COMRAM] unsigned char 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;		None               void
  6649 ;; Registers used:
  6650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6656 ;;      Params:         3       0       0       0       0       0       0       0       0
  6657 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6659 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6660 ;;Total ram usage:        5 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    1
  6663 ;; This function calls:
  6664 ;;		_Lcd_Chr_CP
  6665 ;;		_Lcd_Cmd
  6666 ;; This function is called by:
  6667 ;;		_main
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text14
  6672  005A94                     __ptext14:
  6673                           	opt stack 0
  6674  005A94                     _Lcd_Out:
  6675                           	opt stack 29
  6676                           
  6677                           ;incstack = 0
  6678                           ;Lcd_Out@y stored from wreg
  6679  005A94  6E07               	movwf	Lcd_Out@y,c
  6680                           
  6681                           ;LCD.h: 94: unsigned char data;
  6682                           ;LCD.h: 95: switch (y)
  6683  005A96  D00D               	goto	l2674
  6684  005A98                     l2664:
  6685  005A98  5004               	movf	Lcd_Out@x,w,c
  6686  005A9A  0F80               	addlw	128
  6687  005A9C  D008               	goto	L29
  6688  005A9E                     l2666:
  6689  005A9E  5004               	movf	Lcd_Out@x,w,c
  6690  005AA0  0FC0               	addlw	192
  6691  005AA2  D005               	goto	L29
  6692  005AA4                     l2668:
  6693  005AA4  5004               	movf	Lcd_Out@x,w,c
  6694  005AA6  0F94               	addlw	148
  6695  005AA8  D002               	goto	L29
  6696  005AAA                     l2670:
  6697  005AAA  5004               	movf	Lcd_Out@x,w,c
  6698  005AAC  0FD4               	addlw	212
  6699  005AAE                     L29:
  6700  005AAE  6E08               	movwf	Lcd_Out@data,c
  6701  005AB0  D00D               	goto	l2676
  6702  005AB2                     l2674:
  6703  005AB2  5007               	movf	Lcd_Out@y,w,c
  6704                           
  6705                           ; Switch size 1, requested type "space"
  6706                           ; Number of cases is 4, Range of values is 1 to 4
  6707                           ; switch strategies available:
  6708                           ; Name         Instructions Cycles
  6709                           ; simple_byte           13     7 (average)
  6710                           ;	Chosen strategy is simple_byte
  6711  005AB4  0A01               	xorlw	1	; case 1
  6712  005AB6  B4D8               	btfsc	status,2,c
  6713  005AB8  D7EF               	goto	l2664
  6714  005ABA  0A03               	xorlw	3	; case 2
  6715  005ABC  B4D8               	btfsc	status,2,c
  6716  005ABE  D7EF               	goto	l2666
  6717  005AC0  0A01               	xorlw	1	; case 3
  6718  005AC2  B4D8               	btfsc	status,2,c
  6719  005AC4  D7EF               	goto	l2668
  6720  005AC6  0A07               	xorlw	7	; case 4
  6721  005AC8  B4D8               	btfsc	status,2,c
  6722  005ACA  D7EF               	goto	l2670
  6723  005ACC                     l2676:
  6724                           
  6725                           ;LCD.h: 103: Lcd_Cmd(data);
  6726  005ACC  5008               	movf	Lcd_Out@data,w,c
  6727  005ACE  ECEA  F031         	call	_Lcd_Cmd
  6728                           
  6729                           ;LCD.h: 104: while(*buffer)
  6730  005AD2  D009               	goto	l2682
  6731  005AD4                     l2678:
  6732                           
  6733                           ;LCD.h: 105: {
  6734                           ;LCD.h: 106: Lcd_Chr_CP(*buffer);
  6735  005AD4  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  6736  005AD8  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  6737  005ADC  50DF               	movf	indf2,w,c
  6738  005ADE  EC11  F033         	call	_Lcd_Chr_CP
  6739                           
  6740                           ;LCD.h: 107: buffer++;
  6741  005AE2  4A05               	infsnz	Lcd_Out@buffer,f,c
  6742  005AE4  2A06               	incf	Lcd_Out@buffer+1,f,c
  6743  005AE6                     l2682:
  6744  005AE6  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  6745  005AEA  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  6746  005AEE  50DF               	movf	indf2,w,c
  6747  005AF0  B4D8               	btfsc	status,2,c
  6748                           
  6749                           ;LCD.h: 108: }
  6750                           ;LCD.h: 109: return;
  6751  005AF2  0012               	return	
  6752  005AF4  D7EF               	goto	l2678
  6753  005AF6                     __end_of_Lcd_Out:
  6754                           	opt stack 0
  6755                           tblptru	equ	0xFF8
  6756                           tblptrh	equ	0xFF7
  6757                           tblptrl	equ	0xFF6
  6758                           tablat	equ	0xFF5
  6759                           prodh	equ	0xFF4
  6760                           prodl	equ	0xFF3
  6761                           postinc0	equ	0xFEE
  6762                           wreg	equ	0xFE8
  6763                           postinc1	equ	0xFE6
  6764                           postdec1	equ	0xFE5
  6765                           fsr1l	equ	0xFE1
  6766                           indf2	equ	0xFDF
  6767                           postinc2	equ	0xFDE
  6768                           postdec2	equ	0xFDD
  6769                           fsr2h	equ	0xFDA
  6770                           fsr2l	equ	0xFD9
  6771                           status	equ	0xFD8
  6772                           
  6773 ;; *************** function _Lcd_Chr_CP *****************
  6774 ;; Defined at:
  6775 ;;		line 134 in file "LCD.h"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  data            1    wreg     unsigned char 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  data            1    2[COMRAM] unsigned char 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;		None               void
  6782 ;; Registers used:
  6783 ;;		wreg, status,2, status,0
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6789 ;;      Params:         0       0       0       0       0       0       0       0       0
  6790 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6791 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6792 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6793 ;;Total ram usage:        3 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; This function calls:
  6796 ;;		Nothing
  6797 ;; This function is called by:
  6798 ;;		_Lcd_Out
  6799 ;;		_Lcd_Out2
  6800 ;;		_main
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text15
  6805  006622                     __ptext15:
  6806                           	opt stack 0
  6807  006622                     _Lcd_Chr_CP:
  6808                           	opt stack 29
  6809                           
  6810                           ;incstack = 0
  6811                           ;Lcd_Chr_CP@data stored from wreg
  6812  006622  6E03               	movwf	Lcd_Chr_CP@data,c
  6813                           
  6814                           ;LCD.h: 135: PORTDbits.RD2 = 0; PORTDbits.RD0 = 1;
  6815  006624  9483               	bcf	3971,2,c	;volatile
  6816  006626  8083               	bsf	3971,0,c	;volatile
  6817                           
  6818                           ;LCD.h: 136: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  6819  006628  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  6820  00662A  AE03               	btfss	Lcd_Chr_CP@data,7,c
  6821  00662C  D001               	bra	u1775
  6822  00662E  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  6823  006630                     u1775:
  6824  006630  0E01               	movlw	1
  6825  006632  1601               	andwf	??_Lcd_Chr_CP,f,c
  6826  006634  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6827  006636  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6828  006638  5083               	movf	3971,w,c	;volatile
  6829  00663A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6830  00663C  0B7F               	andlw	-129
  6831  00663E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6832  006640  6E83               	movwf	3971,c	;volatile
  6833  006642  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6834  006646  0E06               	movlw	6
  6835  006648  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6836  00664A                     u1785:
  6837  00664A  90D8               	bcf	status,0,c
  6838  00664C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6839  00664E  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6840  006650  D7FC               	goto	u1785
  6841  006652  0E01               	movlw	1
  6842  006654  1601               	andwf	??_Lcd_Chr_CP,f,c
  6843  006656  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6844  006658  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6845  00665A  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6846  00665C  5083               	movf	3971,w,c	;volatile
  6847  00665E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6848  006660  0BBF               	andlw	-65
  6849  006662  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6850  006664  6E83               	movwf	3971,c	;volatile
  6851                           
  6852                           ;LCD.h: 137: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  6853  006666  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6854  00666A  0E05               	movlw	5
  6855  00666C  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6856  00666E                     u1795:
  6857  00666E  90D8               	bcf	status,0,c
  6858  006670  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6859  006672  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6860  006674  D7FC               	goto	u1795
  6861  006676  0E01               	movlw	1
  6862  006678  1601               	andwf	??_Lcd_Chr_CP,f,c
  6863  00667A  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6864  00667C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6865  00667E  5083               	movf	3971,w,c	;volatile
  6866  006680  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6867  006682  0BDF               	andlw	-33
  6868  006684  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6869  006686  6E83               	movwf	3971,c	;volatile
  6870  006688  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6871  00668C  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6872  00668E  0E0F               	movlw	15
  6873  006690  1601               	andwf	??_Lcd_Chr_CP,f,c
  6874  006692  0E01               	movlw	1
  6875  006694  1601               	andwf	??_Lcd_Chr_CP,f,c
  6876  006696  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6877  006698  5083               	movf	3971,w,c	;volatile
  6878  00669A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6879  00669C  0BEF               	andlw	-17
  6880  00669E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6881  0066A0  6E83               	movwf	3971,c	;volatile
  6882                           
  6883                           ;LCD.h: 138: _delay((unsigned long)((10)*(4000000/4000000.0)));
  6884  0066A2  0E03               	movlw	3
  6885  0066A4                     u3697:
  6886  0066A4  2EE8               	decfsz	wreg,f,c
  6887  0066A6  D7FE               	goto	u3697
  6888  0066A8  F000               	nop	
  6889                           
  6890                           ;LCD.h: 139: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  6891  0066AA  8483               	bsf	3971,2,c	;volatile
  6892  0066AC  F000               	nop	
  6893  0066AE  D000               	nop2		;2 cycle nop
  6894  0066B0  D000               	nop2		;2 cycle nop
  6895  0066B2  9483               	bcf	3971,2,c	;volatile
  6896                           
  6897                           ;LCD.h: 140: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  6898  0066B4  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6899  0066B8  90D8               	bcf	status,0,c
  6900  0066BA  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6901  0066BC  90D8               	bcf	status,0,c
  6902  0066BE  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6903  0066C0  90D8               	bcf	status,0,c
  6904  0066C2  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6905  0066C4  0E01               	movlw	1
  6906  0066C6  1601               	andwf	??_Lcd_Chr_CP,f,c
  6907  0066C8  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6908  0066CA  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6909  0066CC  5083               	movf	3971,w,c	;volatile
  6910  0066CE  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6911  0066D0  0B7F               	andlw	-129
  6912  0066D2  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6913  0066D4  6E83               	movwf	3971,c	;volatile
  6914  0066D6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6915  0066DA  90D8               	bcf	status,0,c
  6916  0066DC  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6917  0066DE  90D8               	bcf	status,0,c
  6918  0066E0  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6919  0066E2  0E01               	movlw	1
  6920  0066E4  1601               	andwf	??_Lcd_Chr_CP,f,c
  6921  0066E6  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6922  0066E8  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6923  0066EA  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6924  0066EC  5083               	movf	3971,w,c	;volatile
  6925  0066EE  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6926  0066F0  0BBF               	andlw	-65
  6927  0066F2  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6928  0066F4  6E83               	movwf	3971,c	;volatile
  6929                           
  6930                           ;LCD.h: 141: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  6931  0066F6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6932  0066FA  90D8               	bcf	status,0,c
  6933  0066FC  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6934  0066FE  0E01               	movlw	1
  6935  006700  1601               	andwf	??_Lcd_Chr_CP,f,c
  6936  006702  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6937  006704  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6938  006706  5083               	movf	3971,w,c	;volatile
  6939  006708  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6940  00670A  0BDF               	andlw	-33
  6941  00670C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6942  00670E  6E83               	movwf	3971,c	;volatile
  6943  006710  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6944  006714  0E01               	movlw	1
  6945  006716  1601               	andwf	??_Lcd_Chr_CP,f,c
  6946  006718  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6947  00671A  5083               	movf	3971,w,c	;volatile
  6948  00671C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6949  00671E  0BEF               	andlw	-17
  6950  006720  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6951  006722  6E83               	movwf	3971,c	;volatile
  6952                           
  6953                           ;LCD.h: 142: _delay((unsigned long)((10)*(4000000/4000000.0)));
  6954  006724  0E03               	movlw	3
  6955  006726                     u3707:
  6956  006726  2EE8               	decfsz	wreg,f,c
  6957  006728  D7FE               	goto	u3707
  6958  00672A  F000               	nop	
  6959                           
  6960                           ;LCD.h: 143: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  6961  00672C  8483               	bsf	3971,2,c	;volatile
  6962  00672E  F000               	nop	
  6963  006730  D000               	nop2		;2 cycle nop
  6964  006732  D000               	nop2		;2 cycle nop
  6965  006734  9483               	bcf	3971,2,c	;volatile
  6966                           
  6967                           ;LCD.h: 144: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned long)((5
      +                          500)*(4000000/4000000.0)));
  6968  006736  F000               	nop	
  6969  006738  D000               	nop2		;2 cycle nop
  6970  00673A  D000               	nop2		;2 cycle nop
  6971  00673C  0E08               	movlw	8
  6972  00673E  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  6973  006740  0E23               	movlw	35
  6974  006742                     u3717:
  6975  006742  2EE8               	decfsz	wreg,f,c
  6976  006744  D7FE               	goto	u3717
  6977  006746  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  6978  006748  D7FC               	goto	u3717
  6979  00674A  F000               	nop	
  6980  00674C  0012               	return	
  6981  00674E                     __end_of_Lcd_Chr_CP:
  6982                           	opt stack 0
  6983                           tblptru	equ	0xFF8
  6984                           tblptrh	equ	0xFF7
  6985                           tblptrl	equ	0xFF6
  6986                           tablat	equ	0xFF5
  6987                           prodh	equ	0xFF4
  6988                           prodl	equ	0xFF3
  6989                           postinc0	equ	0xFEE
  6990                           wreg	equ	0xFE8
  6991                           postinc1	equ	0xFE6
  6992                           postdec1	equ	0xFE5
  6993                           fsr1l	equ	0xFE1
  6994                           indf2	equ	0xFDF
  6995                           postinc2	equ	0xFDE
  6996                           postdec2	equ	0xFDD
  6997                           fsr2h	equ	0xFDA
  6998                           fsr2l	equ	0xFD9
  6999                           status	equ	0xFD8
  7000                           
  7001 ;; *************** function _Lcd_Init *****************
  7002 ;; Defined at:
  7003 ;;		line 48 in file "LCD.h"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;		None
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  data            1    4[COMRAM] unsigned char 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;		None               void
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0
  7018 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7019 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7020 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7021 ;;Total ram usage:        2 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:    1
  7024 ;; This function calls:
  7025 ;;		_Lcd_Cmd
  7026 ;; This function is called by:
  7027 ;;		_main
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text16
  7032  0064FA                     __ptext16:
  7033                           	opt stack 0
  7034  0064FA                     _Lcd_Init:
  7035                           	opt stack 29
  7036                           
  7037                           ;LCD.h: 49: unsigned char data;
  7038                           ;LCD.h: 50: TRISDbits.TRISD7 = 0;
  7039                           
  7040                           ;incstack = 0
  7041  0064FA  9E95               	bcf	3989,7,c	;volatile
  7042                           
  7043                           ;LCD.h: 51: TRISDbits.TRISD6 = 0;
  7044  0064FC  9C95               	bcf	3989,6,c	;volatile
  7045                           
  7046                           ;LCD.h: 52: TRISDbits.TRISD5 = 0;
  7047  0064FE  9A95               	bcf	3989,5,c	;volatile
  7048                           
  7049                           ;LCD.h: 53: TRISDbits.TRISD4 = 0;
  7050  006500  9895               	bcf	3989,4,c	;volatile
  7051                           
  7052                           ;LCD.h: 54: TRISDbits.TRISD2 = 0;
  7053  006502  9495               	bcf	3989,2,c	;volatile
  7054                           
  7055                           ;LCD.h: 55: TRISDbits.TRISD0 = 0;
  7056  006504  9095               	bcf	3989,0,c	;volatile
  7057                           
  7058                           ;LCD.h: 56: TRISDbits.TRISD1 = 0;
  7059  006506  9295               	bcf	3989,1,c	;volatile
  7060                           
  7061                           ;LCD.h: 57: PORTDbits.RD7 = 0;
  7062  006508  9E83               	bcf	3971,7,c	;volatile
  7063                           
  7064                           ;LCD.h: 58: PORTDbits.RD6 = 0;
  7065  00650A  9C83               	bcf	3971,6,c	;volatile
  7066                           
  7067                           ;LCD.h: 59: PORTDbits.RD5 = 0;
  7068  00650C  9A83               	bcf	3971,5,c	;volatile
  7069                           
  7070                           ;LCD.h: 60: PORTDbits.RD4 = 0;
  7071  00650E  9883               	bcf	3971,4,c	;volatile
  7072                           
  7073                           ;LCD.h: 61: PORTDbits.RD2 = 0;
  7074  006510  9483               	bcf	3971,2,c	;volatile
  7075                           
  7076                           ;LCD.h: 62: PORTDbits.RD0 = 0;
  7077  006512  9083               	bcf	3971,0,c	;volatile
  7078                           
  7079                           ;LCD.h: 63: PORTDbits.RD1 = 0;
  7080  006514  9283               	bcf	3971,1,c	;volatile
  7081                           
  7082                           ;LCD.h: 64: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7083  006516  0E08               	movlw	8
  7084  006518  6E04               	movwf	??_Lcd_Init& (0+255),c
  7085  00651A  0E23               	movlw	35
  7086  00651C                     u3727:
  7087  00651C  2EE8               	decfsz	wreg,f,c
  7088  00651E  D7FE               	goto	u3727
  7089  006520  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7090  006522  D7FC               	goto	u3727
  7091  006524  F000               	nop	
  7092                           
  7093                           ;LCD.h: 65: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7094  006526  0E08               	movlw	8
  7095  006528  6E04               	movwf	??_Lcd_Init& (0+255),c
  7096  00652A  0E23               	movlw	35
  7097  00652C                     u3737:
  7098  00652C  2EE8               	decfsz	wreg,f,c
  7099  00652E  D7FE               	goto	u3737
  7100  006530  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7101  006532  D7FC               	goto	u3737
  7102  006534  F000               	nop	
  7103                           
  7104                           ;LCD.h: 66: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7105  006536  0E08               	movlw	8
  7106  006538  6E04               	movwf	??_Lcd_Init& (0+255),c
  7107  00653A  0E23               	movlw	35
  7108  00653C                     u3747:
  7109  00653C  2EE8               	decfsz	wreg,f,c
  7110  00653E  D7FE               	goto	u3747
  7111  006540  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7112  006542  D7FC               	goto	u3747
  7113  006544  F000               	nop	
  7114                           
  7115                           ;LCD.h: 67: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7116  006546  0E08               	movlw	8
  7117  006548  6E04               	movwf	??_Lcd_Init& (0+255),c
  7118  00654A  0E23               	movlw	35
  7119  00654C                     u3757:
  7120  00654C  2EE8               	decfsz	wreg,f,c
  7121  00654E  D7FE               	goto	u3757
  7122  006550  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7123  006552  D7FC               	goto	u3757
  7124  006554  F000               	nop	
  7125                           
  7126                           ;LCD.h: 68: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7127  006556  0E08               	movlw	8
  7128  006558  6E04               	movwf	??_Lcd_Init& (0+255),c
  7129  00655A  0E23               	movlw	35
  7130  00655C                     u3767:
  7131  00655C  2EE8               	decfsz	wreg,f,c
  7132  00655E  D7FE               	goto	u3767
  7133  006560  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7134  006562  D7FC               	goto	u3767
  7135  006564  F000               	nop	
  7136                           
  7137                           ;LCD.h: 69: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7138  006566  0E08               	movlw	8
  7139  006568  6E04               	movwf	??_Lcd_Init& (0+255),c
  7140  00656A  0E23               	movlw	35
  7141  00656C                     u3777:
  7142  00656C  2EE8               	decfsz	wreg,f,c
  7143  00656E  D7FE               	goto	u3777
  7144  006570  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7145  006572  D7FC               	goto	u3777
  7146  006574  F000               	nop	
  7147                           
  7148                           ;LCD.h: 70: for(data = 1; data < 4; data ++)
  7149  006576  0E01               	movlw	1
  7150  006578  6E05               	movwf	Lcd_Init@data,c
  7151  00657A  D01E               	goto	L30
  7152  00657C                     l52:
  7153                           
  7154                           ;LCD.h: 71: {
  7155                           ;LCD.h: 72: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD2 = 0;
  7156  00657C  9E83               	bcf	3971,7,c	;volatile
  7157  00657E  9C83               	bcf	3971,6,c	;volatile
  7158  006580  8A83               	bsf	3971,5,c	;volatile
  7159  006582  8883               	bsf	3971,4,c	;volatile
  7160  006584  9483               	bcf	3971,2,c	;volatile
  7161                           
  7162                           ;LCD.h: 73: PORTDbits.RD0 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; 
      +                          PORTDbits.RD4 = 1;
  7163  006586  9083               	bcf	3971,0,c	;volatile
  7164  006588  9E83               	bcf	3971,7,c	;volatile
  7165  00658A  9C83               	bcf	3971,6,c	;volatile
  7166  00658C  8A83               	bsf	3971,5,c	;volatile
  7167  00658E  8883               	bsf	3971,4,c	;volatile
  7168                           
  7169                           ;LCD.h: 74: PORTDbits.RD2 = 1; PORTDbits.RD0 = 0;
  7170  006590  8483               	bsf	3971,2,c	;volatile
  7171  006592  9083               	bcf	3971,0,c	;volatile
  7172                           
  7173                           ;LCD.h: 75: _delay((unsigned long)((5)*(4000000/4000000.0)));
  7174  006594  F000               	nop	
  7175  006596  D000               	nop2		;2 cycle nop
  7176  006598  D000               	nop2		;2 cycle nop
  7177                           
  7178                           ;LCD.h: 76: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD2 = 0;
  7179  00659A  9E83               	bcf	3971,7,c	;volatile
  7180  00659C  9C83               	bcf	3971,6,c	;volatile
  7181  00659E  8A83               	bsf	3971,5,c	;volatile
  7182  0065A0  8883               	bsf	3971,4,c	;volatile
  7183  0065A2  9483               	bcf	3971,2,c	;volatile
  7184                           
  7185                           ;LCD.h: 77: PORTDbits.RD0 = 0;
  7186  0065A4  9083               	bcf	3971,0,c	;volatile
  7187                           
  7188                           ;LCD.h: 78: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7189  0065A6  0E08               	movlw	8
  7190  0065A8  6E04               	movwf	??_Lcd_Init& (0+255),c
  7191  0065AA  0E23               	movlw	35
  7192  0065AC                     u3787:
  7193  0065AC  2EE8               	decfsz	wreg,f,c
  7194  0065AE  D7FE               	goto	u3787
  7195  0065B0  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7196  0065B2  D7FC               	goto	u3787
  7197  0065B4  F000               	nop	
  7198  0065B6  2A05               	incf	Lcd_Init@data,f,c
  7199  0065B8                     L30:
  7200  0065B8  0E03               	movlw	3
  7201  0065BA  6405               	cpfsgt	Lcd_Init@data,c
  7202  0065BC  D7DF               	goto	l52
  7203                           
  7204                           ;LCD.h: 79: }
  7205                           ;LCD.h: 80: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  7206  0065BE  9E83               	bcf	3971,7,c	;volatile
  7207  0065C0  9C83               	bcf	3971,6,c	;volatile
  7208  0065C2  8A83               	bsf	3971,5,c	;volatile
  7209  0065C4  9883               	bcf	3971,4,c	;volatile
  7210  0065C6  9483               	bcf	3971,2,c	;volatile
  7211  0065C8  9083               	bcf	3971,0,c	;volatile
  7212                           
  7213                           ;LCD.h: 81: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 1; PORTDbits.RD0 = 0;
  7214  0065CA  9E83               	bcf	3971,7,c	;volatile
  7215  0065CC  9C83               	bcf	3971,6,c	;volatile
  7216  0065CE  8A83               	bsf	3971,5,c	;volatile
  7217  0065D0  9883               	bcf	3971,4,c	;volatile
  7218  0065D2  8483               	bsf	3971,2,c	;volatile
  7219  0065D4  9083               	bcf	3971,0,c	;volatile
  7220                           
  7221                           ;LCD.h: 82: _delay((unsigned long)((5)*(4000000/4000000.0)));
  7222  0065D6  F000               	nop	
  7223  0065D8  D000               	nop2		;2 cycle nop
  7224  0065DA  D000               	nop2		;2 cycle nop
  7225                           
  7226                           ;LCD.h: 83: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  7227  0065DC  9E83               	bcf	3971,7,c	;volatile
  7228  0065DE  9C83               	bcf	3971,6,c	;volatile
  7229  0065E0  8A83               	bsf	3971,5,c	;volatile
  7230  0065E2  9883               	bcf	3971,4,c	;volatile
  7231  0065E4  9483               	bcf	3971,2,c	;volatile
  7232  0065E6  9083               	bcf	3971,0,c	;volatile
  7233                           
  7234                           ;LCD.h: 84: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7235  0065E8  0E08               	movlw	8
  7236  0065EA  6E04               	movwf	??_Lcd_Init& (0+255),c
  7237  0065EC  0E23               	movlw	35
  7238  0065EE                     u3797:
  7239  0065EE  2EE8               	decfsz	wreg,f,c
  7240  0065F0  D7FE               	goto	u3797
  7241  0065F2  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7242  0065F4  D7FC               	goto	u3797
  7243  0065F6  F000               	nop	
  7244                           
  7245                           ;LCD.h: 85: data = 40; Lcd_Cmd(data);
  7246  0065F8  0E28               	movlw	40
  7247  0065FA  6E05               	movwf	Lcd_Init@data,c
  7248  0065FC  5005               	movf	Lcd_Init@data,w,c
  7249  0065FE  ECEA  F031         	call	_Lcd_Cmd
  7250                           
  7251                           ;LCD.h: 86: data = 16; Lcd_Cmd(data);
  7252  006602  0E10               	movlw	16
  7253  006604  6E05               	movwf	Lcd_Init@data,c
  7254  006606  5005               	movf	Lcd_Init@data,w,c
  7255  006608  ECEA  F031         	call	_Lcd_Cmd
  7256                           
  7257                           ;LCD.h: 87: data = 1; Lcd_Cmd(data);
  7258  00660C  0E01               	movlw	1
  7259  00660E  6E05               	movwf	Lcd_Init@data,c
  7260  006610  5005               	movf	Lcd_Init@data,w,c
  7261  006612  ECEA  F031         	call	_Lcd_Cmd
  7262                           
  7263                           ;LCD.h: 88: data = 15; Lcd_Cmd(data);
  7264  006616  0E0F               	movlw	15
  7265  006618  6E05               	movwf	Lcd_Init@data,c
  7266  00661A  5005               	movf	Lcd_Init@data,w,c
  7267  00661C  ECEA  F031         	call	_Lcd_Cmd
  7268  006620  0012               	return	
  7269  006622                     __end_of_Lcd_Init:
  7270                           	opt stack 0
  7271                           tblptru	equ	0xFF8
  7272                           tblptrh	equ	0xFF7
  7273                           tblptrl	equ	0xFF6
  7274                           tablat	equ	0xFF5
  7275                           prodh	equ	0xFF4
  7276                           prodl	equ	0xFF3
  7277                           postinc0	equ	0xFEE
  7278                           wreg	equ	0xFE8
  7279                           postinc1	equ	0xFE6
  7280                           postdec1	equ	0xFE5
  7281                           fsr1l	equ	0xFE1
  7282                           indf2	equ	0xFDF
  7283                           postinc2	equ	0xFDE
  7284                           postdec2	equ	0xFDD
  7285                           fsr2h	equ	0xFDA
  7286                           fsr2l	equ	0xFD9
  7287                           status	equ	0xFD8
  7288                           
  7289 ;; *************** function _Lcd_Cmd *****************
  7290 ;; Defined at:
  7291 ;;		line 148 in file "LCD.h"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;  data            1    wreg     unsigned char 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  data            1    2[COMRAM] unsigned char 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;		None               void
  7298 ;; Registers used:
  7299 ;;		wreg, status,2, status,0
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7305 ;;      Params:         0       0       0       0       0       0       0       0       0
  7306 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7307 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7308 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7309 ;;Total ram usage:        3 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; This function calls:
  7312 ;;		Nothing
  7313 ;; This function is called by:
  7314 ;;		_Lcd_Init
  7315 ;;		_Lcd_Out
  7316 ;;		_Lcd_Out2
  7317 ;;		_lcd_goto
  7318 ;;		_main
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text17
  7323  0063D4                     __ptext17:
  7324                           	opt stack 0
  7325  0063D4                     _Lcd_Cmd:
  7326                           	opt stack 29
  7327                           
  7328                           ;incstack = 0
  7329                           ;Lcd_Cmd@data stored from wreg
  7330  0063D4  6E03               	movwf	Lcd_Cmd@data,c
  7331                           
  7332                           ;LCD.h: 149: PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  7333  0063D6  9483               	bcf	3971,2,c	;volatile
  7334  0063D8  9083               	bcf	3971,0,c	;volatile
  7335                           
  7336                           ;LCD.h: 150: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  7337  0063DA  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  7338  0063DC  AE03               	btfss	Lcd_Cmd@data,7,c
  7339  0063DE  D001               	bra	u1745
  7340  0063E0  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  7341  0063E2                     u1745:
  7342  0063E2  0E01               	movlw	1
  7343  0063E4  1601               	andwf	??_Lcd_Cmd,f,c
  7344  0063E6  3201               	rrcf	??_Lcd_Cmd,f,c
  7345  0063E8  3201               	rrcf	??_Lcd_Cmd,f,c
  7346  0063EA  5083               	movf	3971,w,c	;volatile
  7347  0063EC  1801               	xorwf	??_Lcd_Cmd,w,c
  7348  0063EE  0B7F               	andlw	-129
  7349  0063F0  1801               	xorwf	??_Lcd_Cmd,w,c
  7350  0063F2  6E83               	movwf	3971,c	;volatile
  7351  0063F4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7352  0063F8  0E06               	movlw	6
  7353  0063FA  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7354  0063FC                     u1755:
  7355  0063FC  90D8               	bcf	status,0,c
  7356  0063FE  3201               	rrcf	??_Lcd_Cmd,f,c
  7357  006400  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7358  006402  D7FC               	goto	u1755
  7359  006404  0E01               	movlw	1
  7360  006406  1601               	andwf	??_Lcd_Cmd,f,c
  7361  006408  3A01               	swapf	??_Lcd_Cmd,f,c
  7362  00640A  4601               	rlncf	??_Lcd_Cmd,f,c
  7363  00640C  4601               	rlncf	??_Lcd_Cmd,f,c
  7364  00640E  5083               	movf	3971,w,c	;volatile
  7365  006410  1801               	xorwf	??_Lcd_Cmd,w,c
  7366  006412  0BBF               	andlw	-65
  7367  006414  1801               	xorwf	??_Lcd_Cmd,w,c
  7368  006416  6E83               	movwf	3971,c	;volatile
  7369                           
  7370                           ;LCD.h: 151: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  7371  006418  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7372  00641C  0E05               	movlw	5
  7373  00641E  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7374  006420                     u1765:
  7375  006420  90D8               	bcf	status,0,c
  7376  006422  3201               	rrcf	??_Lcd_Cmd,f,c
  7377  006424  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7378  006426  D7FC               	goto	u1765
  7379  006428  0E01               	movlw	1
  7380  00642A  1601               	andwf	??_Lcd_Cmd,f,c
  7381  00642C  3A01               	swapf	??_Lcd_Cmd,f,c
  7382  00642E  4601               	rlncf	??_Lcd_Cmd,f,c
  7383  006430  5083               	movf	3971,w,c	;volatile
  7384  006432  1801               	xorwf	??_Lcd_Cmd,w,c
  7385  006434  0BDF               	andlw	-33
  7386  006436  1801               	xorwf	??_Lcd_Cmd,w,c
  7387  006438  6E83               	movwf	3971,c	;volatile
  7388  00643A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7389  00643E  3A01               	swapf	??_Lcd_Cmd,f,c
  7390  006440  0E0F               	movlw	15
  7391  006442  1601               	andwf	??_Lcd_Cmd,f,c
  7392  006444  0E01               	movlw	1
  7393  006446  1601               	andwf	??_Lcd_Cmd,f,c
  7394  006448  3A01               	swapf	??_Lcd_Cmd,f,c
  7395  00644A  5083               	movf	3971,w,c	;volatile
  7396  00644C  1801               	xorwf	??_Lcd_Cmd,w,c
  7397  00644E  0BEF               	andlw	-17
  7398  006450  1801               	xorwf	??_Lcd_Cmd,w,c
  7399  006452  6E83               	movwf	3971,c	;volatile
  7400                           
  7401                           ;LCD.h: 152: _delay((unsigned long)((10)*(4000000/4000000.0)));
  7402  006454  0E03               	movlw	3
  7403  006456                     u3807:
  7404  006456  2EE8               	decfsz	wreg,f,c
  7405  006458  D7FE               	goto	u3807
  7406  00645A  F000               	nop	
  7407                           
  7408                           ;LCD.h: 153: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  7409  00645C  8483               	bsf	3971,2,c	;volatile
  7410  00645E  F000               	nop	
  7411  006460  D000               	nop2		;2 cycle nop
  7412  006462  D000               	nop2		;2 cycle nop
  7413  006464  9483               	bcf	3971,2,c	;volatile
  7414                           
  7415                           ;LCD.h: 154: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  7416  006466  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7417  00646A  90D8               	bcf	status,0,c
  7418  00646C  3201               	rrcf	??_Lcd_Cmd,f,c
  7419  00646E  90D8               	bcf	status,0,c
  7420  006470  3201               	rrcf	??_Lcd_Cmd,f,c
  7421  006472  90D8               	bcf	status,0,c
  7422  006474  3201               	rrcf	??_Lcd_Cmd,f,c
  7423  006476  0E01               	movlw	1
  7424  006478  1601               	andwf	??_Lcd_Cmd,f,c
  7425  00647A  3201               	rrcf	??_Lcd_Cmd,f,c
  7426  00647C  3201               	rrcf	??_Lcd_Cmd,f,c
  7427  00647E  5083               	movf	3971,w,c	;volatile
  7428  006480  1801               	xorwf	??_Lcd_Cmd,w,c
  7429  006482  0B7F               	andlw	-129
  7430  006484  1801               	xorwf	??_Lcd_Cmd,w,c
  7431  006486  6E83               	movwf	3971,c	;volatile
  7432  006488  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7433  00648C  90D8               	bcf	status,0,c
  7434  00648E  3201               	rrcf	??_Lcd_Cmd,f,c
  7435  006490  90D8               	bcf	status,0,c
  7436  006492  3201               	rrcf	??_Lcd_Cmd,f,c
  7437  006494  0E01               	movlw	1
  7438  006496  1601               	andwf	??_Lcd_Cmd,f,c
  7439  006498  3A01               	swapf	??_Lcd_Cmd,f,c
  7440  00649A  4601               	rlncf	??_Lcd_Cmd,f,c
  7441  00649C  4601               	rlncf	??_Lcd_Cmd,f,c
  7442  00649E  5083               	movf	3971,w,c	;volatile
  7443  0064A0  1801               	xorwf	??_Lcd_Cmd,w,c
  7444  0064A2  0BBF               	andlw	-65
  7445  0064A4  1801               	xorwf	??_Lcd_Cmd,w,c
  7446  0064A6  6E83               	movwf	3971,c	;volatile
  7447                           
  7448                           ;LCD.h: 155: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  7449  0064A8  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7450  0064AC  90D8               	bcf	status,0,c
  7451  0064AE  3201               	rrcf	??_Lcd_Cmd,f,c
  7452  0064B0  0E01               	movlw	1
  7453  0064B2  1601               	andwf	??_Lcd_Cmd,f,c
  7454  0064B4  3A01               	swapf	??_Lcd_Cmd,f,c
  7455  0064B6  4601               	rlncf	??_Lcd_Cmd,f,c
  7456  0064B8  5083               	movf	3971,w,c	;volatile
  7457  0064BA  1801               	xorwf	??_Lcd_Cmd,w,c
  7458  0064BC  0BDF               	andlw	-33
  7459  0064BE  1801               	xorwf	??_Lcd_Cmd,w,c
  7460  0064C0  6E83               	movwf	3971,c	;volatile
  7461  0064C2  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7462  0064C6  0E01               	movlw	1
  7463  0064C8  1601               	andwf	??_Lcd_Cmd,f,c
  7464  0064CA  3A01               	swapf	??_Lcd_Cmd,f,c
  7465  0064CC  5083               	movf	3971,w,c	;volatile
  7466  0064CE  1801               	xorwf	??_Lcd_Cmd,w,c
  7467  0064D0  0BEF               	andlw	-17
  7468  0064D2  1801               	xorwf	??_Lcd_Cmd,w,c
  7469  0064D4  6E83               	movwf	3971,c	;volatile
  7470                           
  7471                           ;LCD.h: 156: _delay((unsigned long)((10)*(4000000/4000000.0)));
  7472  0064D6  0E03               	movlw	3
  7473  0064D8                     u3817:
  7474  0064D8  2EE8               	decfsz	wreg,f,c
  7475  0064DA  D7FE               	goto	u3817
  7476  0064DC  F000               	nop	
  7477                           
  7478                           ;LCD.h: 157: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  7479  0064DE  8483               	bsf	3971,2,c	;volatile
  7480  0064E0  F000               	nop	
  7481  0064E2  D000               	nop2		;2 cycle nop
  7482  0064E4  D000               	nop2		;2 cycle nop
  7483  0064E6  9483               	bcf	3971,2,c	;volatile
  7484                           
  7485                           ;LCD.h: 158: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7486  0064E8  0E08               	movlw	8
  7487  0064EA  6E01               	movwf	??_Lcd_Cmd& (0+255),c
  7488  0064EC  0E23               	movlw	35
  7489  0064EE                     u3827:
  7490  0064EE  2EE8               	decfsz	wreg,f,c
  7491  0064F0  D7FE               	goto	u3827
  7492  0064F2  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
  7493  0064F4  D7FC               	goto	u3827
  7494  0064F6  F000               	nop	
  7495  0064F8  0012               	return	
  7496  0064FA                     __end_of_Lcd_Cmd:
  7497                           	opt stack 0
  7498                           tblptru	equ	0xFF8
  7499                           tblptrh	equ	0xFF7
  7500                           tblptrl	equ	0xFF6
  7501                           tablat	equ	0xFF5
  7502                           prodh	equ	0xFF4
  7503                           prodl	equ	0xFF3
  7504                           postinc0	equ	0xFEE
  7505                           wreg	equ	0xFE8
  7506                           postinc1	equ	0xFE6
  7507                           postdec1	equ	0xFE5
  7508                           fsr1l	equ	0xFE1
  7509                           indf2	equ	0xFDF
  7510                           postinc2	equ	0xFDE
  7511                           postdec2	equ	0xFDD
  7512                           fsr2h	equ	0xFDA
  7513                           fsr2l	equ	0xFD9
  7514                           status	equ	0xFD8
  7515                           
  7516 ;; *************** function _Conv_Entero *****************
  7517 ;; Defined at:
  7518 ;;		line 1 in file "conversion.h"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  numero          4   14[COMRAM] long 
  7521 ;;  conv            2   18[COMRAM] PTR unsigned char 
  7522 ;;		 -> main@cadena(20), main@cad(20), 
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;  convTemp       21   25[COMRAM] unsigned char [21]
  7525 ;;  numeroReg       4   51[COMRAM] long 
  7526 ;;  punteroActua    2   49[COMRAM] PTR unsigned char 
  7527 ;;		 -> Conv_Entero@convTemp(21), 
  7528 ;;  num             2   46[COMRAM] int 
  7529 ;;  i               1   48[COMRAM] unsigned char 
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  2   14[COMRAM] int 
  7532 ;; Registers used:
  7533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7539 ;;      Params:         6       0       0       0       0       0       0       0       0
  7540 ;;      Locals:        30       0       0       0       0       0       0       0       0
  7541 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7542 ;;      Totals:        41       0       0       0       0       0       0       0       0
  7543 ;;Total ram usage:       41 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:    1
  7546 ;; This function calls:
  7547 ;;		___aldiv
  7548 ;;		___almod
  7549 ;;		___lmul
  7550 ;; This function is called by:
  7551 ;;		_main
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           	psect	text18
  7556  0069E2                     __ptext18:
  7557                           	opt stack 0
  7558  0069E2                     _Conv_Entero:
  7559                           	opt stack 29
  7560                           
  7561                           ;conversion.h: 3: char convTemp[21];
  7562                           ;conversion.h: 4: register char *punteroActual;
  7563                           ;conversion.h: 5: register int num=0;
  7564                           
  7565                           ;incstack = 0
  7566  0069E2  0E00               	movlw	0
  7567  0069E4  6E30               	movwf	Conv_Entero@num+1,c
  7568  0069E6  0E00               	movlw	0
  7569  0069E8  6E2F               	movwf	Conv_Entero@num,c
  7570                           
  7571                           ;conversion.h: 6: register char i=0;
  7572  0069EA  0E00               	movlw	0
  7573  0069EC  6E31               	movwf	Conv_Entero@i,c
  7574                           
  7575                           ;conversion.h: 7: register long long numeroReg = numero;
  7576  0069EE  C00F  F034         	movff	Conv_Entero@numero,Conv_Entero@numeroReg
  7577  0069F2  C010  F035         	movff	Conv_Entero@numero+1,Conv_Entero@numeroReg+1
  7578  0069F6  C011  F036         	movff	Conv_Entero@numero+2,Conv_Entero@numeroReg+2
  7579  0069FA  C012  F037         	movff	Conv_Entero@numero+3,Conv_Entero@numeroReg+3
  7580                           
  7581                           ;conversion.h: 9: punteroActual = &convTemp[21 - 1];
  7582  0069FE  0E00               	movlw	high (Conv_Entero@convTemp+20)
  7583  006A00  6E33               	movwf	Conv_Entero@punteroActual+1,c
  7584  006A02  0E2E               	movlw	low (Conv_Entero@convTemp+20)
  7585  006A04  6E32               	movwf	Conv_Entero@punteroActual,c
  7586                           
  7587                           ;conversion.h: 10: *punteroActual = 0;
  7588  006A06  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  7589  006A0A  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  7590  006A0E  0E00               	movlw	0
  7591  006A10  6EDF               	movwf	indf2,c
  7592                           
  7593                           ;conversion.h: 12: if( numeroReg < 0)
  7594  006A12  5037               	movf	Conv_Entero@numeroReg+3,w,c
  7595  006A14  0A80               	xorlw	128
  7596  006A16  0F80               	addlw	128
  7597  006A18  E108               	bnz	u2035
  7598  006A1A  0E00               	movlw	0
  7599  006A1C  5C36               	subwf	Conv_Entero@numeroReg+2,w,c
  7600  006A1E  E105               	bnz	u2035
  7601  006A20  0E00               	movlw	0
  7602  006A22  5C35               	subwf	Conv_Entero@numeroReg+1,w,c
  7603  006A24  E102               	bnz	u2035
  7604  006A26  0E00               	movlw	0
  7605  006A28  5C34               	subwf	Conv_Entero@numeroReg,w,c
  7606  006A2A                     u2035:
  7607  006A2A  B0D8               	btfsc	status,0,c
  7608  006A2C  D01A               	goto	l2600
  7609                           
  7610                           ;conversion.h: 13: {
  7611                           ;conversion.h: 14: numeroReg*=-1;
  7612  006A2E  C034  F001         	movff	Conv_Entero@numeroReg,___lmul@multiplier
  7613  006A32  C035  F002         	movff	Conv_Entero@numeroReg+1,___lmul@multiplier+1
  7614  006A36  C036  F003         	movff	Conv_Entero@numeroReg+2,___lmul@multiplier+2
  7615  006A3A  C037  F004         	movff	Conv_Entero@numeroReg+3,___lmul@multiplier+3
  7616  006A3E  0EFF               	movlw	255
  7617  006A40  6E05               	movwf	___lmul@multiplicand,c
  7618  006A42  0EFF               	movlw	255
  7619  006A44  6E06               	movwf	___lmul@multiplicand+1,c
  7620  006A46  0EFF               	movlw	255
  7621  006A48  6E07               	movwf	___lmul@multiplicand+2,c
  7622  006A4A  0EFF               	movlw	255
  7623  006A4C  6E08               	movwf	___lmul@multiplicand+3,c
  7624  006A4E  EC1F  F02D         	call	___lmul	;wreg free
  7625  006A52  C001  F034         	movff	?___lmul,Conv_Entero@numeroReg
  7626  006A56  C002  F035         	movff	?___lmul+1,Conv_Entero@numeroReg+1
  7627  006A5A  C003  F036         	movff	?___lmul+2,Conv_Entero@numeroReg+2
  7628  006A5E  C004  F037         	movff	?___lmul+3,Conv_Entero@numeroReg+3
  7629  006A62                     l2600:
  7630                           
  7631                           ;conversion.h: 18: punteroActual--;
  7632  006A62  0632               	decf	Conv_Entero@punteroActual,f,c
  7633  006A64  A0D8               	btfss	status,0,c
  7634  006A66  0633               	decf	Conv_Entero@punteroActual+1,f,c
  7635                           
  7636                           ;conversion.h: 19: num=numeroReg % 10;
  7637  006A68  C034  F001         	movff	Conv_Entero@numeroReg,___almod@dividend
  7638  006A6C  C035  F002         	movff	Conv_Entero@numeroReg+1,___almod@dividend+1
  7639  006A70  C036  F003         	movff	Conv_Entero@numeroReg+2,___almod@dividend+2
  7640  006A74  C037  F004         	movff	Conv_Entero@numeroReg+3,___almod@dividend+3
  7641  006A78  0E0A               	movlw	10
  7642  006A7A  6E05               	movwf	___almod@divisor,c
  7643  006A7C  0E00               	movlw	0
  7644  006A7E  6E06               	movwf	___almod@divisor+1,c
  7645  006A80  0E00               	movlw	0
  7646  006A82  6E07               	movwf	___almod@divisor+2,c
  7647  006A84  0E00               	movlw	0
  7648  006A86  6E08               	movwf	___almod@divisor+3,c
  7649  006A88  EC0A  F02F         	call	___almod	;wreg free
  7650  006A8C  C001  F015         	movff	?___almod,??_Conv_Entero
  7651  006A90  C002  F016         	movff	?___almod+1,??_Conv_Entero+1
  7652  006A94  C003  F017         	movff	?___almod+2,??_Conv_Entero+2
  7653  006A98  C004  F018         	movff	?___almod+3,??_Conv_Entero+3
  7654  006A9C  C015  F02F         	movff	??_Conv_Entero,Conv_Entero@num
  7655  006AA0  C016  F030         	movff	??_Conv_Entero+1,Conv_Entero@num+1
  7656                           
  7657                           ;conversion.h: 21: *punteroActual = num + '0';
  7658  006AA4  502F               	movf	Conv_Entero@num,w,c
  7659  006AA6  0F30               	addlw	48
  7660  006AA8  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  7661  006AAC  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  7662  006AB0  6EDF               	movwf	indf2,c
  7663                           
  7664                           ;conversion.h: 22: } while(numeroReg /= 10);
  7665  006AB2  C034  F001         	movff	Conv_Entero@numeroReg,___aldiv@dividend
  7666  006AB6  C035  F002         	movff	Conv_Entero@numeroReg+1,___aldiv@dividend+1
  7667  006ABA  C036  F003         	movff	Conv_Entero@numeroReg+2,___aldiv@dividend+2
  7668  006ABE  C037  F004         	movff	Conv_Entero@numeroReg+3,___aldiv@dividend+3
  7669  006AC2  0E0A               	movlw	10
  7670  006AC4  6E05               	movwf	___aldiv@divisor,c
  7671  006AC6  0E00               	movlw	0
  7672  006AC8  6E06               	movwf	___aldiv@divisor+1,c
  7673  006ACA  0E00               	movlw	0
  7674  006ACC  6E07               	movwf	___aldiv@divisor+2,c
  7675  006ACE  0E00               	movlw	0
  7676  006AD0  6E08               	movwf	___aldiv@divisor+3,c
  7677  006AD2  EC6C  F031         	call	___aldiv	;wreg free
  7678  006AD6  C001  F034         	movff	?___aldiv,Conv_Entero@numeroReg
  7679  006ADA  C002  F035         	movff	?___aldiv+1,Conv_Entero@numeroReg+1
  7680  006ADE  C003  F036         	movff	?___aldiv+2,Conv_Entero@numeroReg+2
  7681  006AE2  C004  F037         	movff	?___aldiv+3,Conv_Entero@numeroReg+3
  7682  006AE6  5037               	movf	(Conv_Entero@numeroReg+3)& (0+255),w,c
  7683  006AE8  1034               	iorwf	Conv_Entero@numeroReg& (0+255),w,c
  7684  006AEA  1035               	iorwf	(Conv_Entero@numeroReg+1)& (0+255),w,c
  7685  006AEC  1036               	iorwf	(Conv_Entero@numeroReg+2)& (0+255),w,c
  7686  006AEE  A4D8               	btfss	status,2,c
  7687  006AF0  D7B8               	goto	l2600
  7688                           
  7689                           ;conversion.h: 24: if ( numero < 0)
  7690  006AF2  5012               	movf	Conv_Entero@numero+3,w,c
  7691  006AF4  0A80               	xorlw	128
  7692  006AF6  0F80               	addlw	128
  7693  006AF8  E108               	bnz	u2055
  7694  006AFA  0E00               	movlw	0
  7695  006AFC  5C11               	subwf	Conv_Entero@numero+2,w,c
  7696  006AFE  E105               	bnz	u2055
  7697  006B00  0E00               	movlw	0
  7698  006B02  5C10               	subwf	Conv_Entero@numero+1,w,c
  7699  006B04  E102               	bnz	u2055
  7700  006B06  0E00               	movlw	0
  7701  006B08  5C0F               	subwf	Conv_Entero@numero,w,c
  7702  006B0A                     u2055:
  7703  006B0A  B0D8               	btfsc	status,0,c
  7704  006B0C  D009               	goto	l2614
  7705                           
  7706                           ;conversion.h: 25: {
  7707                           ;conversion.h: 26: punteroActual--;
  7708  006B0E  0632               	decf	Conv_Entero@punteroActual,f,c
  7709  006B10  A0D8               	btfss	status,0,c
  7710  006B12  0633               	decf	Conv_Entero@punteroActual+1,f,c
  7711                           
  7712                           ;conversion.h: 27: *punteroActual = '-';
  7713  006B14  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  7714  006B18  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  7715  006B1C  0E2D               	movlw	45
  7716  006B1E  6EDF               	movwf	indf2,c
  7717  006B20                     l2614:
  7718                           
  7719                           ;conversion.h: 28: }
  7720                           ;conversion.h: 30: numeroReg=convTemp+21-punteroActual;
  7721  006B20  C032  F015         	movff	Conv_Entero@punteroActual,??_Conv_Entero
  7722  006B24  C033  F016         	movff	Conv_Entero@punteroActual+1,??_Conv_Entero+1
  7723  006B28  1E15               	comf	??_Conv_Entero,f,c
  7724  006B2A  1E16               	comf	??_Conv_Entero+1,f,c
  7725  006B2C  4A15               	infsnz	??_Conv_Entero,f,c
  7726  006B2E  2A16               	incf	??_Conv_Entero+1,f,c
  7727  006B30  0E15               	movlw	21
  7728  006B32  2615               	addwf	??_Conv_Entero,f,c
  7729  006B34  0E00               	movlw	0
  7730  006B36  2216               	addwfc	??_Conv_Entero+1,f,c
  7731  006B38  0E1A               	movlw	low Conv_Entero@convTemp
  7732  006B3A  6E17               	movwf	(??_Conv_Entero+2)& (0+255),c
  7733  006B3C  0E00               	movlw	high Conv_Entero@convTemp
  7734  006B3E  6E18               	movwf	(??_Conv_Entero+3)& (0+255),c
  7735  006B40  5015               	movf	??_Conv_Entero,w,c
  7736  006B42  2617               	addwf	??_Conv_Entero+2,f,c
  7737  006B44  5016               	movf	??_Conv_Entero+1,w,c
  7738  006B46  2218               	addwfc	??_Conv_Entero+3,f,c
  7739  006B48  C017  F034         	movff	??_Conv_Entero+2,Conv_Entero@numeroReg
  7740  006B4C  C018  F035         	movff	??_Conv_Entero+3,Conv_Entero@numeroReg+1
  7741  006B50  0E00               	movlw	0
  7742  006B52  BE35               	btfsc	Conv_Entero@numeroReg+1,7,c
  7743  006B54  0EFF               	movlw	-1
  7744  006B56  6E36               	movwf	Conv_Entero@numeroReg+2,c
  7745  006B58  6E37               	movwf	Conv_Entero@numeroReg+3,c
  7746                           
  7747                           ;conversion.h: 31: for (i = 0; i< numeroReg; i++)
  7748  006B5A  0E00               	movlw	0
  7749  006B5C  6E31               	movwf	Conv_Entero@i,c
  7750  006B5E  D013               	goto	l2622
  7751  006B60                     l2618:
  7752                           
  7753                           ;conversion.h: 32: {
  7754                           ;conversion.h: 38: ((unsigned char *)conv)[i] = ((const unsigned char *)punteroActual)[i
      +                          ];
  7755  006B60  5031               	movf	Conv_Entero@i,w,c
  7756  006B62  0D01               	mullw	1
  7757  006B64  50F3               	movf	prodl,w,c
  7758  006B66  2432               	addwf	Conv_Entero@punteroActual,w,c
  7759  006B68  6ED9               	movwf	fsr2l,c
  7760  006B6A  50F4               	movf	prodh,w,c
  7761  006B6C  2033               	addwfc	Conv_Entero@punteroActual+1,w,c
  7762  006B6E  6EDA               	movwf	fsr2h,c
  7763  006B70  5031               	movf	Conv_Entero@i,w,c
  7764  006B72  0D01               	mullw	1
  7765  006B74  50F3               	movf	prodl,w,c
  7766  006B76  2413               	addwf	Conv_Entero@conv,w,c
  7767  006B78  6EE1               	movwf	fsr1l,c
  7768  006B7A  50F4               	movf	prodh,w,c
  7769  006B7C  2014               	addwfc	Conv_Entero@conv+1,w,c
  7770  006B7E  6EE2               	movwf	fsr1h,c
  7771  006B80  CFDF FFE7          	movff	indf2,indf1
  7772  006B84  2A31               	incf	Conv_Entero@i,f,c
  7773  006B86                     l2622:
  7774  006B86  C031  F015         	movff	Conv_Entero@i,??_Conv_Entero
  7775  006B8A  6A16               	clrf	(??_Conv_Entero+1)& (0+255),c
  7776  006B8C  6A17               	clrf	(??_Conv_Entero+2)& (0+255),c
  7777  006B8E  6A18               	clrf	(??_Conv_Entero+3)& (0+255),c
  7778  006B90  5018               	movf	??_Conv_Entero+3,w,c
  7779  006B92  0A80               	xorlw	128
  7780  006B94  6E19               	movwf	(??_Conv_Entero+4)& (0+255),c
  7781  006B96  5034               	movf	Conv_Entero@numeroReg,w,c
  7782  006B98  5C15               	subwf	??_Conv_Entero,w,c
  7783  006B9A  5035               	movf	Conv_Entero@numeroReg+1,w,c
  7784  006B9C  5816               	subwfb	??_Conv_Entero+1,w,c
  7785  006B9E  5036               	movf	Conv_Entero@numeroReg+2,w,c
  7786  006BA0  5817               	subwfb	??_Conv_Entero+2,w,c
  7787  006BA2  5037               	movf	Conv_Entero@numeroReg+3,w,c
  7788  006BA4  0A80               	xorlw	128
  7789  006BA6  5819               	subwfb	(??_Conv_Entero+4)& (0+255),w,c
  7790  006BA8  A0D8               	btfss	status,0,c
  7791  006BAA  D7DA               	goto	l2618
  7792                           
  7793                           ;conversion.h: 39: }
  7794                           ;conversion.h: 41: return numeroReg - 1;
  7795  006BAC  0EFF               	movlw	255
  7796  006BAE  2434               	addwf	Conv_Entero@numeroReg,w,c
  7797  006BB0  6E0F               	movwf	?_Conv_Entero,c
  7798  006BB2  0EFF               	movlw	255
  7799  006BB4  2035               	addwfc	Conv_Entero@numeroReg+1,w,c
  7800  006BB6  6E10               	movwf	?_Conv_Entero+1,c
  7801  006BB8  0012               	return	
  7802  006BBA                     __end_of_Conv_Entero:
  7803                           	opt stack 0
  7804                           tblptru	equ	0xFF8
  7805                           tblptrh	equ	0xFF7
  7806                           tblptrl	equ	0xFF6
  7807                           tablat	equ	0xFF5
  7808                           prodh	equ	0xFF4
  7809                           prodl	equ	0xFF3
  7810                           postinc0	equ	0xFEE
  7811                           wreg	equ	0xFE8
  7812                           indf1	equ	0xFE7
  7813                           postinc1	equ	0xFE6
  7814                           postdec1	equ	0xFE5
  7815                           fsr1h	equ	0xFE2
  7816                           fsr1l	equ	0xFE1
  7817                           indf2	equ	0xFDF
  7818                           postinc2	equ	0xFDE
  7819                           postdec2	equ	0xFDD
  7820                           fsr2h	equ	0xFDA
  7821                           fsr2l	equ	0xFD9
  7822                           status	equ	0xFD8
  7823                           
  7824 ;; *************** function ___lmul *****************
  7825 ;; Defined at:
  7826 ;;		line 15 in file "/opt/microchip/xc8/v1.32/sources/common/Umul32.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  multiplier      4    0[COMRAM] unsigned long 
  7829 ;;  multiplicand    4    4[COMRAM] unsigned long 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;  product         4    8[COMRAM] unsigned long 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  4    0[COMRAM] unsigned long 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7841 ;;      Params:         8       0       0       0       0       0       0       0       0
  7842 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7844 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7845 ;;Total ram usage:       12 bytes
  7846 ;; Hardware stack levels used:    1
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_Conv_Entero
  7851 ;;		_PWM_generar
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text19
  7856  005A3E                     __ptext19:
  7857                           	opt stack 0
  7858  005A3E                     ___lmul:
  7859                           	opt stack 29
  7860                           
  7861                           ;incstack = 0
  7862  005A3E  0E00               	movlw	0
  7863  005A40  6E09               	movwf	___lmul@product,c
  7864  005A42  0E00               	movlw	0
  7865  005A44  6E0A               	movwf	___lmul@product+1,c
  7866  005A46  0E00               	movlw	0
  7867  005A48  6E0B               	movwf	___lmul@product+2,c
  7868  005A4A  0E00               	movlw	0
  7869  005A4C  6E0C               	movwf	___lmul@product+3,c
  7870  005A4E                     l2432:
  7871  005A4E  A001               	btfss	___lmul@multiplier,0,c
  7872  005A50  D008               	goto	l2436
  7873  005A52  5005               	movf	___lmul@multiplicand,w,c
  7874  005A54  2609               	addwf	___lmul@product,f,c
  7875  005A56  5006               	movf	___lmul@multiplicand+1,w,c
  7876  005A58  220A               	addwfc	___lmul@product+1,f,c
  7877  005A5A  5007               	movf	___lmul@multiplicand+2,w,c
  7878  005A5C  220B               	addwfc	___lmul@product+2,f,c
  7879  005A5E  5008               	movf	___lmul@multiplicand+3,w,c
  7880  005A60  220C               	addwfc	___lmul@product+3,f,c
  7881  005A62                     l2436:
  7882  005A62  90D8               	bcf	status,0,c
  7883  005A64  3605               	rlcf	___lmul@multiplicand,f,c
  7884  005A66  3606               	rlcf	___lmul@multiplicand+1,f,c
  7885  005A68  3607               	rlcf	___lmul@multiplicand+2,f,c
  7886  005A6A  3608               	rlcf	___lmul@multiplicand+3,f,c
  7887  005A6C  90D8               	bcf	status,0,c
  7888  005A6E  3204               	rrcf	___lmul@multiplier+3,f,c
  7889  005A70  3203               	rrcf	___lmul@multiplier+2,f,c
  7890  005A72  3202               	rrcf	___lmul@multiplier+1,f,c
  7891  005A74  3201               	rrcf	___lmul@multiplier,f,c
  7892  005A76  5004               	movf	___lmul@multiplier+3,w,c
  7893  005A78  1001               	iorwf	___lmul@multiplier,w,c
  7894  005A7A  1002               	iorwf	___lmul@multiplier+1,w,c
  7895  005A7C  1003               	iorwf	___lmul@multiplier+2,w,c
  7896  005A7E  A4D8               	btfss	status,2,c
  7897  005A80  D7E6               	goto	l2432
  7898  005A82  C009  F001         	movff	___lmul@product,?___lmul
  7899  005A86  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  7900  005A8A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  7901  005A8E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  7902  005A92  0012               	return	
  7903  005A94                     __end_of___lmul:
  7904                           	opt stack 0
  7905                           tblptru	equ	0xFF8
  7906                           tblptrh	equ	0xFF7
  7907                           tblptrl	equ	0xFF6
  7908                           tablat	equ	0xFF5
  7909                           prodh	equ	0xFF4
  7910                           prodl	equ	0xFF3
  7911                           postinc0	equ	0xFEE
  7912                           wreg	equ	0xFE8
  7913                           indf1	equ	0xFE7
  7914                           postinc1	equ	0xFE6
  7915                           postdec1	equ	0xFE5
  7916                           fsr1h	equ	0xFE2
  7917                           fsr1l	equ	0xFE1
  7918                           indf2	equ	0xFDF
  7919                           postinc2	equ	0xFDE
  7920                           postdec2	equ	0xFDD
  7921                           fsr2h	equ	0xFDA
  7922                           fsr2l	equ	0xFD9
  7923                           status	equ	0xFD8
  7924                           
  7925 ;; *************** function ___almod *****************
  7926 ;; Defined at:
  7927 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/almod.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;  dividend        4    0[COMRAM] long 
  7930 ;;  divisor         4    4[COMRAM] long 
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;  sign            1    9[COMRAM] unsigned char 
  7933 ;;  counter         1    8[COMRAM] unsigned char 
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  4    0[COMRAM] long 
  7936 ;; Registers used:
  7937 ;;		wreg, status,2, status,0
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7943 ;;      Params:         8       0       0       0       0       0       0       0       0
  7944 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7946 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7947 ;;Total ram usage:       10 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; This function calls:
  7950 ;;		Nothing
  7951 ;; This function is called by:
  7952 ;;		_Conv_Entero
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           	psect	text20
  7957  005E14                     __ptext20:
  7958                           	opt stack 0
  7959  005E14                     ___almod:
  7960                           	opt stack 29
  7961                           
  7962                           ;incstack = 0
  7963  005E14  0E00               	movlw	0
  7964  005E16  6E0A               	movwf	___almod@sign,c
  7965  005E18  5004               	movf	___almod@dividend+3,w,c
  7966  005E1A  0A80               	xorlw	128
  7967  005E1C  0F80               	addlw	128
  7968  005E1E  E108               	bnz	u1885
  7969  005E20  0E00               	movlw	0
  7970  005E22  5C03               	subwf	___almod@dividend+2,w,c
  7971  005E24  E105               	bnz	u1885
  7972  005E26  0E00               	movlw	0
  7973  005E28  5C02               	subwf	___almod@dividend+1,w,c
  7974  005E2A  E102               	bnz	u1885
  7975  005E2C  0E00               	movlw	0
  7976  005E2E  5C01               	subwf	___almod@dividend,w,c
  7977  005E30                     u1885:
  7978  005E30  B0D8               	btfsc	status,0,c
  7979  005E32  D00A               	goto	l2492
  7980  005E34  1E04               	comf	___almod@dividend+3,f,c
  7981  005E36  1E03               	comf	___almod@dividend+2,f,c
  7982  005E38  1E02               	comf	___almod@dividend+1,f,c
  7983  005E3A  6C01               	negf	___almod@dividend,c
  7984  005E3C  0E00               	movlw	0
  7985  005E3E  2202               	addwfc	___almod@dividend+1,f,c
  7986  005E40  2203               	addwfc	___almod@dividend+2,f,c
  7987  005E42  2204               	addwfc	___almod@dividend+3,f,c
  7988  005E44  0E01               	movlw	1
  7989  005E46  6E0A               	movwf	___almod@sign,c
  7990  005E48                     l2492:
  7991  005E48  5008               	movf	___almod@divisor+3,w,c
  7992  005E4A  0A80               	xorlw	128
  7993  005E4C  0F80               	addlw	128
  7994  005E4E  E108               	bnz	u1895
  7995  005E50  0E00               	movlw	0
  7996  005E52  5C07               	subwf	___almod@divisor+2,w,c
  7997  005E54  E105               	bnz	u1895
  7998  005E56  0E00               	movlw	0
  7999  005E58  5C06               	subwf	___almod@divisor+1,w,c
  8000  005E5A  E102               	bnz	u1895
  8001  005E5C  0E00               	movlw	0
  8002  005E5E  5C05               	subwf	___almod@divisor,w,c
  8003  005E60                     u1895:
  8004  005E60  B0D8               	btfsc	status,0,c
  8005  005E62  D008               	goto	l2496
  8006  005E64  1E08               	comf	___almod@divisor+3,f,c
  8007  005E66  1E07               	comf	___almod@divisor+2,f,c
  8008  005E68  1E06               	comf	___almod@divisor+1,f,c
  8009  005E6A  6C05               	negf	___almod@divisor,c
  8010  005E6C  0E00               	movlw	0
  8011  005E6E  2206               	addwfc	___almod@divisor+1,f,c
  8012  005E70  2207               	addwfc	___almod@divisor+2,f,c
  8013  005E72  2208               	addwfc	___almod@divisor+3,f,c
  8014  005E74                     l2496:
  8015  005E74  5008               	movf	___almod@divisor+3,w,c
  8016  005E76  1005               	iorwf	___almod@divisor,w,c
  8017  005E78  1006               	iorwf	___almod@divisor+1,w,c
  8018  005E7A  1007               	iorwf	___almod@divisor+2,w,c
  8019  005E7C  B4D8               	btfsc	status,2,c
  8020  005E7E  D024               	goto	l2512
  8021  005E80  0E01               	movlw	1
  8022  005E82  6E09               	movwf	___almod@counter,c
  8023  005E84  D006               	goto	l2502
  8024  005E86                     l2500:
  8025  005E86  90D8               	bcf	status,0,c
  8026  005E88  3605               	rlcf	___almod@divisor,f,c
  8027  005E8A  3606               	rlcf	___almod@divisor+1,f,c
  8028  005E8C  3607               	rlcf	___almod@divisor+2,f,c
  8029  005E8E  3608               	rlcf	___almod@divisor+3,f,c
  8030  005E90  2A09               	incf	___almod@counter,f,c
  8031  005E92                     l2502:
  8032  005E92  AE08               	btfss	___almod@divisor+3,7,c
  8033  005E94  D7F8               	goto	l2500
  8034  005E96                     l2504:
  8035  005E96  5005               	movf	___almod@divisor,w,c
  8036  005E98  5C01               	subwf	___almod@dividend,w,c
  8037  005E9A  5006               	movf	___almod@divisor+1,w,c
  8038  005E9C  5802               	subwfb	___almod@dividend+1,w,c
  8039  005E9E  5007               	movf	___almod@divisor+2,w,c
  8040  005EA0  5803               	subwfb	___almod@dividend+2,w,c
  8041  005EA2  5008               	movf	___almod@divisor+3,w,c
  8042  005EA4  5804               	subwfb	___almod@dividend+3,w,c
  8043  005EA6  A0D8               	btfss	status,0,c
  8044  005EA8  D008               	goto	l2508
  8045  005EAA  5005               	movf	___almod@divisor,w,c
  8046  005EAC  5E01               	subwf	___almod@dividend,f,c
  8047  005EAE  5006               	movf	___almod@divisor+1,w,c
  8048  005EB0  5A02               	subwfb	___almod@dividend+1,f,c
  8049  005EB2  5007               	movf	___almod@divisor+2,w,c
  8050  005EB4  5A03               	subwfb	___almod@dividend+2,f,c
  8051  005EB6  5008               	movf	___almod@divisor+3,w,c
  8052  005EB8  5A04               	subwfb	___almod@dividend+3,f,c
  8053  005EBA                     l2508:
  8054  005EBA  90D8               	bcf	status,0,c
  8055  005EBC  3208               	rrcf	___almod@divisor+3,f,c
  8056  005EBE  3207               	rrcf	___almod@divisor+2,f,c
  8057  005EC0  3206               	rrcf	___almod@divisor+1,f,c
  8058  005EC2  3205               	rrcf	___almod@divisor,f,c
  8059  005EC4  2E09               	decfsz	___almod@counter,f,c
  8060  005EC6  D7E7               	goto	l2504
  8061  005EC8                     l2512:
  8062  005EC8  500A               	movf	___almod@sign,w,c
  8063  005ECA  B4D8               	btfsc	status,2,c
  8064  005ECC  D008               	goto	l2516
  8065  005ECE  1E04               	comf	___almod@dividend+3,f,c
  8066  005ED0  1E03               	comf	___almod@dividend+2,f,c
  8067  005ED2  1E02               	comf	___almod@dividend+1,f,c
  8068  005ED4  6C01               	negf	___almod@dividend,c
  8069  005ED6  0E00               	movlw	0
  8070  005ED8  2202               	addwfc	___almod@dividend+1,f,c
  8071  005EDA  2203               	addwfc	___almod@dividend+2,f,c
  8072  005EDC  2204               	addwfc	___almod@dividend+3,f,c
  8073  005EDE                     l2516:
  8074  005EDE  C001  F001         	movff	___almod@dividend,?___almod
  8075  005EE2  C002  F002         	movff	___almod@dividend+1,?___almod+1
  8076  005EE6  C003  F003         	movff	___almod@dividend+2,?___almod+2
  8077  005EEA  C004  F004         	movff	___almod@dividend+3,?___almod+3
  8078  005EEE  0012               	return	
  8079  005EF0                     __end_of___almod:
  8080                           	opt stack 0
  8081                           tblptru	equ	0xFF8
  8082                           tblptrh	equ	0xFF7
  8083                           tblptrl	equ	0xFF6
  8084                           tablat	equ	0xFF5
  8085                           prodh	equ	0xFF4
  8086                           prodl	equ	0xFF3
  8087                           postinc0	equ	0xFEE
  8088                           wreg	equ	0xFE8
  8089                           indf1	equ	0xFE7
  8090                           postinc1	equ	0xFE6
  8091                           postdec1	equ	0xFE5
  8092                           fsr1h	equ	0xFE2
  8093                           fsr1l	equ	0xFE1
  8094                           indf2	equ	0xFDF
  8095                           postinc2	equ	0xFDE
  8096                           postdec2	equ	0xFDD
  8097                           fsr2h	equ	0xFDA
  8098                           fsr2l	equ	0xFD9
  8099                           status	equ	0xFD8
  8100                           
  8101 ;; *************** function ___aldiv *****************
  8102 ;; Defined at:
  8103 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/aldiv.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;  dividend        4    0[COMRAM] long 
  8106 ;;  divisor         4    4[COMRAM] long 
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;  quotient        4   10[COMRAM] long 
  8109 ;;  sign            1    9[COMRAM] unsigned char 
  8110 ;;  counter         1    8[COMRAM] unsigned char 
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  4    0[COMRAM] long 
  8113 ;; Registers used:
  8114 ;;		wreg, status,2, status,0
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8120 ;;      Params:         8       0       0       0       0       0       0       0       0
  8121 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8123 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8124 ;;Total ram usage:       14 bytes
  8125 ;; Hardware stack levels used:    1
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_Conv_Entero
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text21
  8134  0062D8                     __ptext21:
  8135                           	opt stack 0
  8136  0062D8                     ___aldiv:
  8137                           	opt stack 29
  8138                           
  8139                           ;incstack = 0
  8140  0062D8  0E00               	movlw	0
  8141  0062DA  6E0A               	movwf	___aldiv@sign,c
  8142  0062DC  5008               	movf	___aldiv@divisor+3,w,c
  8143  0062DE  0A80               	xorlw	128
  8144  0062E0  0F80               	addlw	128
  8145  0062E2  E108               	bnz	u1825
  8146  0062E4  0E00               	movlw	0
  8147  0062E6  5C07               	subwf	___aldiv@divisor+2,w,c
  8148  0062E8  E105               	bnz	u1825
  8149  0062EA  0E00               	movlw	0
  8150  0062EC  5C06               	subwf	___aldiv@divisor+1,w,c
  8151  0062EE  E102               	bnz	u1825
  8152  0062F0  0E00               	movlw	0
  8153  0062F2  5C05               	subwf	___aldiv@divisor,w,c
  8154  0062F4                     u1825:
  8155  0062F4  B0D8               	btfsc	status,0,c
  8156  0062F6  D00A               	goto	l2448
  8157  0062F8  1E08               	comf	___aldiv@divisor+3,f,c
  8158  0062FA  1E07               	comf	___aldiv@divisor+2,f,c
  8159  0062FC  1E06               	comf	___aldiv@divisor+1,f,c
  8160  0062FE  6C05               	negf	___aldiv@divisor,c
  8161  006300  0E00               	movlw	0
  8162  006302  2206               	addwfc	___aldiv@divisor+1,f,c
  8163  006304  2207               	addwfc	___aldiv@divisor+2,f,c
  8164  006306  2208               	addwfc	___aldiv@divisor+3,f,c
  8165  006308  0E01               	movlw	1
  8166  00630A  6E0A               	movwf	___aldiv@sign,c
  8167  00630C                     l2448:
  8168  00630C  5004               	movf	___aldiv@dividend+3,w,c
  8169  00630E  0A80               	xorlw	128
  8170  006310  0F80               	addlw	128
  8171  006312  E108               	bnz	u1835
  8172  006314  0E00               	movlw	0
  8173  006316  5C03               	subwf	___aldiv@dividend+2,w,c
  8174  006318  E105               	bnz	u1835
  8175  00631A  0E00               	movlw	0
  8176  00631C  5C02               	subwf	___aldiv@dividend+1,w,c
  8177  00631E  E102               	bnz	u1835
  8178  006320  0E00               	movlw	0
  8179  006322  5C01               	subwf	___aldiv@dividend,w,c
  8180  006324                     u1835:
  8181  006324  B0D8               	btfsc	status,0,c
  8182  006326  D00A               	goto	l2454
  8183  006328  1E04               	comf	___aldiv@dividend+3,f,c
  8184  00632A  1E03               	comf	___aldiv@dividend+2,f,c
  8185  00632C  1E02               	comf	___aldiv@dividend+1,f,c
  8186  00632E  6C01               	negf	___aldiv@dividend,c
  8187  006330  0E00               	movlw	0
  8188  006332  2202               	addwfc	___aldiv@dividend+1,f,c
  8189  006334  2203               	addwfc	___aldiv@dividend+2,f,c
  8190  006336  2204               	addwfc	___aldiv@dividend+3,f,c
  8191  006338  0E01               	movlw	1
  8192  00633A  1A0A               	xorwf	___aldiv@sign,f,c
  8193  00633C                     l2454:
  8194  00633C  0E00               	movlw	0
  8195  00633E  6E0B               	movwf	___aldiv@quotient,c
  8196  006340  0E00               	movlw	0
  8197  006342  6E0C               	movwf	___aldiv@quotient+1,c
  8198  006344  0E00               	movlw	0
  8199  006346  6E0D               	movwf	___aldiv@quotient+2,c
  8200  006348  0E00               	movlw	0
  8201  00634A  6E0E               	movwf	___aldiv@quotient+3,c
  8202  00634C  5008               	movf	___aldiv@divisor+3,w,c
  8203  00634E  1005               	iorwf	___aldiv@divisor,w,c
  8204  006350  1006               	iorwf	___aldiv@divisor+1,w,c
  8205  006352  1007               	iorwf	___aldiv@divisor+2,w,c
  8206  006354  B4D8               	btfsc	status,2,c
  8207  006356  D02A               	goto	l2476
  8208  006358  0E01               	movlw	1
  8209  00635A  6E09               	movwf	___aldiv@counter,c
  8210  00635C  D006               	goto	l2462
  8211  00635E                     l2460:
  8212  00635E  90D8               	bcf	status,0,c
  8213  006360  3605               	rlcf	___aldiv@divisor,f,c
  8214  006362  3606               	rlcf	___aldiv@divisor+1,f,c
  8215  006364  3607               	rlcf	___aldiv@divisor+2,f,c
  8216  006366  3608               	rlcf	___aldiv@divisor+3,f,c
  8217  006368  2A09               	incf	___aldiv@counter,f,c
  8218  00636A                     l2462:
  8219  00636A  AE08               	btfss	___aldiv@divisor+3,7,c
  8220  00636C  D7F8               	goto	l2460
  8221  00636E                     l2464:
  8222  00636E  90D8               	bcf	status,0,c
  8223  006370  360B               	rlcf	___aldiv@quotient,f,c
  8224  006372  360C               	rlcf	___aldiv@quotient+1,f,c
  8225  006374  360D               	rlcf	___aldiv@quotient+2,f,c
  8226  006376  360E               	rlcf	___aldiv@quotient+3,f,c
  8227  006378  5005               	movf	___aldiv@divisor,w,c
  8228  00637A  5C01               	subwf	___aldiv@dividend,w,c
  8229  00637C  5006               	movf	___aldiv@divisor+1,w,c
  8230  00637E  5802               	subwfb	___aldiv@dividend+1,w,c
  8231  006380  5007               	movf	___aldiv@divisor+2,w,c
  8232  006382  5803               	subwfb	___aldiv@dividend+2,w,c
  8233  006384  5008               	movf	___aldiv@divisor+3,w,c
  8234  006386  5804               	subwfb	___aldiv@dividend+3,w,c
  8235  006388  A0D8               	btfss	status,0,c
  8236  00638A  D009               	goto	l2472
  8237  00638C  5005               	movf	___aldiv@divisor,w,c
  8238  00638E  5E01               	subwf	___aldiv@dividend,f,c
  8239  006390  5006               	movf	___aldiv@divisor+1,w,c
  8240  006392  5A02               	subwfb	___aldiv@dividend+1,f,c
  8241  006394  5007               	movf	___aldiv@divisor+2,w,c
  8242  006396  5A03               	subwfb	___aldiv@dividend+2,f,c
  8243  006398  5008               	movf	___aldiv@divisor+3,w,c
  8244  00639A  5A04               	subwfb	___aldiv@dividend+3,f,c
  8245  00639C  800B               	bsf	___aldiv@quotient,0,c
  8246  00639E                     l2472:
  8247  00639E  90D8               	bcf	status,0,c
  8248  0063A0  3208               	rrcf	___aldiv@divisor+3,f,c
  8249  0063A2  3207               	rrcf	___aldiv@divisor+2,f,c
  8250  0063A4  3206               	rrcf	___aldiv@divisor+1,f,c
  8251  0063A6  3205               	rrcf	___aldiv@divisor,f,c
  8252  0063A8  2E09               	decfsz	___aldiv@counter,f,c
  8253  0063AA  D7E1               	goto	l2464
  8254  0063AC                     l2476:
  8255  0063AC  500A               	movf	___aldiv@sign,w,c
  8256  0063AE  B4D8               	btfsc	status,2,c
  8257  0063B0  D008               	goto	l2480
  8258  0063B2  1E0E               	comf	___aldiv@quotient+3,f,c
  8259  0063B4  1E0D               	comf	___aldiv@quotient+2,f,c
  8260  0063B6  1E0C               	comf	___aldiv@quotient+1,f,c
  8261  0063B8  6C0B               	negf	___aldiv@quotient,c
  8262  0063BA  0E00               	movlw	0
  8263  0063BC  220C               	addwfc	___aldiv@quotient+1,f,c
  8264  0063BE  220D               	addwfc	___aldiv@quotient+2,f,c
  8265  0063C0  220E               	addwfc	___aldiv@quotient+3,f,c
  8266  0063C2                     l2480:
  8267  0063C2  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  8268  0063C6  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  8269  0063CA  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  8270  0063CE  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  8271  0063D2  0012               	return	
  8272  0063D4                     __end_of___aldiv:
  8273                           	opt stack 0
  8274                           tblptru	equ	0xFF8
  8275                           tblptrh	equ	0xFF7
  8276                           tblptrl	equ	0xFF6
  8277                           tablat	equ	0xFF5
  8278                           prodh	equ	0xFF4
  8279                           prodl	equ	0xFF3
  8280                           postinc0	equ	0xFEE
  8281                           wreg	equ	0xFE8
  8282                           indf1	equ	0xFE7
  8283                           postinc1	equ	0xFE6
  8284                           postdec1	equ	0xFE5
  8285                           fsr1h	equ	0xFE2
  8286                           fsr1l	equ	0xFE1
  8287                           indf2	equ	0xFDF
  8288                           postinc2	equ	0xFDE
  8289                           postdec2	equ	0xFDD
  8290                           fsr2h	equ	0xFDA
  8291                           fsr2l	equ	0xFD9
  8292                           status	equ	0xFD8
  8293                           tblptru	equ	0xFF8
  8294                           tblptrh	equ	0xFF7
  8295                           tblptrl	equ	0xFF6
  8296                           tablat	equ	0xFF5
  8297                           prodh	equ	0xFF4
  8298                           prodl	equ	0xFF3
  8299                           postinc0	equ	0xFEE
  8300                           wreg	equ	0xFE8
  8301                           indf1	equ	0xFE7
  8302                           postinc1	equ	0xFE6
  8303                           postdec1	equ	0xFE5
  8304                           fsr1h	equ	0xFE2
  8305                           fsr1l	equ	0xFE1
  8306                           indf2	equ	0xFDF
  8307                           postinc2	equ	0xFDE
  8308                           postdec2	equ	0xFDD
  8309                           fsr2h	equ	0xFDA
  8310                           fsr2l	equ	0xFD9
  8311                           status	equ	0xFD8
  8312                           
  8313                           	psect	rparam
  8314  0000                     tblptru	equ	0xFF8
  8315                           tblptrh	equ	0xFF7
  8316                           tblptrl	equ	0xFF6
  8317                           tablat	equ	0xFF5
  8318                           prodh	equ	0xFF4
  8319                           prodl	equ	0xFF3
  8320                           postinc0	equ	0xFEE
  8321                           wreg	equ	0xFE8
  8322                           indf1	equ	0xFE7
  8323                           postinc1	equ	0xFE6
  8324                           postdec1	equ	0xFE5
  8325                           fsr1h	equ	0xFE2
  8326                           fsr1l	equ	0xFE1
  8327                           indf2	equ	0xFDF
  8328                           postinc2	equ	0xFDE
  8329                           postdec2	equ	0xFDD
  8330                           fsr2h	equ	0xFDA
  8331                           fsr2l	equ	0xFD9
  8332                           status	equ	0xFD8


Data Sizes:
    Strings     395
    Constant    0
    Data        226
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     60      66
    BANK0           160     50     132
    BANK1           256      0     160
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 16
		 -> STR_91(CODE[8]), STR_90(CODE[10]), STR_89(CODE[8]), STR_88(CODE[10]), 
		 -> STR_87(CODE[10]), STR_86(CODE[8]), STR_85(CODE[10]), STR_84(CODE[10]), 
		 -> STR_83(CODE[14]), STR_82(CODE[7]), STR_81(CODE[9]), STR_80(CODE[7]), 
		 -> STR_79(CODE[9]), STR_78(CODE[9]), STR_77(CODE[7]), STR_76(CODE[9]), 
		 -> STR_75(CODE[9]), STR_74(CODE[12]), STR_73(CODE[7]), STR_72(CODE[2]), 
		 -> STR_71(CODE[4]), STR_70(CODE[11]), STR_69(CODE[12]), STR_68(CODE[12]), 
		 -> STR_67(CODE[6]), STR_66(CODE[5]), STR_65(CODE[5]), STR_64(CODE[5]), 
		 -> STR_63(CODE[6]), STR_62(CODE[5]), STR_61(CODE[5]), STR_60(CODE[5]), 
		 -> STR_59(CODE[6]), STR_58(CODE[5]), STR_57(CODE[5]), STR_56(CODE[5]), 
		 -> STR_55(CODE[6]), STR_54(CODE[5]), STR_53(CODE[5]), STR_52(CODE[6]), 
		 -> STR_51(CODE[5]), STR_50(CODE[5]), STR_49(CODE[5]), STR_48(CODE[5]), 
		 -> STR_47(CODE[5]), STR_46(CODE[5]), STR_45(CODE[5]), STR_44(CODE[5]), 
		 -> STR_43(CODE[5]), STR_42(CODE[5]), STR_41(CODE[5]), STR_40(CODE[5]), 
		 -> STR_39(CODE[5]), STR_38(CODE[5]), STR_37(CODE[5]), STR_36(CODE[5]), 
		 -> STR_35(CODE[5]), STR_34(CODE[5]), STR_33(CODE[5]), STR_32(CODE[5]), 
		 -> STR_31(CODE[5]), STR_30(CODE[5]), STR_29(CODE[5]), STR_28(CODE[5]), 
		 -> STR_27(CODE[5]), STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), 
		 -> STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 
		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[9]), STR_14(CODE[14]), STR_13(CODE[9]), STR_12(CODE[9]), 
		 -> STR_11(CODE[14]), STR_10(CODE[9]), STR_9(CODE[14]), STR_8(CODE[12]), 
		 -> STR_7(CODE[12]), STR_6(CODE[12]), STR_5(CODE[12]), STR_4(CODE[12]), 
		 -> STR_3(CODE[7]), STR_2(CODE[16]), STR_1(CODE[11]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 20
		 -> main@cadena(BANK0[20]), 

    Conv_Entero@conv	PTR unsigned char  size(2) Largest target is 20
		 -> main@cadena(BANK0[20]), main@cad(BANK0[20]), 

    Conv_Entero@punteroActual	PTR unsigned char  size(2) Largest target is 21
		 -> Conv_Entero@convTemp(COMRAM[21]), 


Critical Paths under _main in COMRAM

    _main->_TRI_2
    _main->_TRI_3
    _lcd_goto->_Lcd_Cmd
    _TRI_3->___awdiv
    _TRI_2->___awdiv
    _PWM_generar->___lldiv
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Conv_Entero->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                51    51      0   20876
                                             59 COMRAM     1     1      0
                                              0 BANK0     50    50      0
                        _Conv_Entero
                         _Lcd_Chr_CP
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                        _PWM_generar
                             _SENO_1
                             _SENO_2
                             _SENO_3
                              _TRI_1
                              _TRI_2
                              _TRI_3
                             ___wmul
                           _lcd_goto
                              _tm_1s
 ---------------------------------------------------------------------------------
 (1) _tm_1s                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             7     3      4     568
                                              3 COMRAM     7     3      4
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TRI_3                                               51    51      0     901
                                              8 COMRAM    51    51      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _TRI_2                                               51    51      0     901
                                              8 COMRAM    51    51      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     556
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TRI_1                                               51    51      0     254
                                              0 COMRAM    51    51      0
 ---------------------------------------------------------------------------------
 (1) _SENO_3                                              41    41      0     254
                                              0 COMRAM    41    41      0
 ---------------------------------------------------------------------------------
 (1) _SENO_2                                              47    47      0     254
                                              0 COMRAM    47    47      0
 ---------------------------------------------------------------------------------
 (1) _SENO_1                                              51    51      0     254
                                              0 COMRAM    51    51      0
 ---------------------------------------------------------------------------------
 (1) _PWM_generar                                         20    16      4    1408
                                             13 COMRAM    20    16      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     2      3   12181
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     661
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Conv_Entero                                         41    35      6    2017
                                             14 COMRAM    41    35      6
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     450
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     424
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Conv_Entero
     ___aldiv
     ___almod
     ___lmul
   _Lcd_Chr_CP
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PWM_generar
     ___lldiv
     ___lmul
   _SENO_1
   _SENO_2
   _SENO_3
   _TRI_1
   _TRI_2
     ___awdiv
   _TRI_3
     ___awdiv
   ___wmul
   _lcd_goto
     _Lcd_Cmd
   _tm_1s

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      A0       8       62.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      84       5       82.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3C      42       1       69.5%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     166       6        0.0%
DATA                 0      0     166       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Jun  1 05:29:15 2019

                       _B 00D4                         _C 003D                         _D 003F  
                       _M 00D6                         _e 00D8                         _p 00DA  
                       _q 00DC                         _r 00DE                         _t 00E0  
                       _w 00E2                        l52 657C              ___awdiv@sign 0006  
     ___wmul@multiplicand 0003              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000         PWM_generar@PR2cal 001A  
                     l200 7B94                       l123 6E6C                       l300 60C2  
                     l230 7E18                       l206 7BC6                       l151 775A  
                     l224 7DE6                       l315 613E                       l171 778C  
                     l165 7724                       l318 61BC                       l343 6238  
                     l183 7972                       l361 67F8                       l177 792E  
                     l282 5FC8                       l346 62B6                       l364 6876  
                     l382 69C0                       l279 5F4A                       l297 6044  
                     l379 6942                       l838 5C30              __CFG_CPB$OFF 000000  
                     _PR2 000FBB              __CFG_CPD$OFF 000000                       wreg 000FE8  
            __CFG_LVP$OFF 000000                      l3002 6920                      l3020 69C8  
                    l3012 694A                      l3040 6E3A                      l3122 7030  
                    l2500 5E86                      l3108 6FDE                      l3060 6EAE  
                    l2502 5E92                      l3150 70A8                      l3142 7080  
                    l3046 6E52                      l2504 5E96                      l2512 5EC8  
                    l2432 5A4E                      l2600 6A62                      l3208 722A  
                    l3152 70B2                      l3144 708A                      l3072 6EF8  
                    l3154 70BC                      l3146 7094                      l3162 70DE  
                    l2460 635E                      l2516 5EDE                      l2508 5EBA  
                    l2436 5A62                      l2700 5B98                      l2540 5DCA  
                    l3500 79EE                      l3340 760A                      l3324 7596  
                    l3308 7522                      l3228 72C2                      l3172 7136  
                    l3156 70C6                      l3148 709E                      l3164 7118  
                    l3084 6F46                      l2462 636A                      l2454 633C  
                    l2622 6B86                      l2614 6B20                      l2542 5DD2  
                    l2534 5DB4                      l2710 59F8                      l3414 77BA  
                    l3158 70D0                      l3174 7140                      l2480 63C2  
                    l2472 639E                      l2464 636E                      l2448 630C  
                    l2704 5BAC                      l2560 5E0A                      l2552 5DF2  
                    l2544 5DD6                      l2528 5D94                      l2712 59FE  
                    l2720 5A36                      l3408 77A8                      l3248 735A  
                    l3168 7126                      l3096 6F90                      l3416 77C6  
                    l2618 6B60                      l2570 5BE2                      l2714 5A04  
                    l3602 7BE2                      l3522 7A62                      l3530 7A80  
                    l3610 7BFE                      l3426 780A                      l3186 7188  
                    l2476 63AC                      l2492 5E48                      l2572 5BEE  
                    l2740 6C8C                      l2556 5DFC                      l2708 59F2  
                    l3372 76F2                      l3356 767E                      l3268 73F2  
                    l2670 5AAA                      l2582 5C22                      l2574 5BF2  
                    l2806 5FD0                      l2830 6022                      l2718 5A0C  
                    l3702 7DC8                      l3622 7C40                      l3462 7924  
                    l2496 5E74                      l2664 5A98                      l2736 6C3C  
                    l2840 604C                      l3608 7BF4                      l3552 7AF4  
                    l3560 7B12                      l3528 7A76                      l3392 7750  
                    l3288 748A                      l2682 5AE6                      l2666 5A9E  
                    l2674 5AB2                      l2690 5B68                      l2914 6216  
                    l3730 7E46                      l3714 7DFE                      l3650 7CC8  
                    l3474 7958                      l3458 7914                      l3378 770A  
                    l2668 5AA4                      l2676 5ACC                      l2692 5B6E  
                    l2932 62BE                      l2924 6240                      l3724 7E34  
                    l3708 7DDC                      l3644 7CB4                      l3652 7CD2  
                    l3732 7E50                      l3580 7B76                      l3484 798E  
                    l3468 7940                      l3388 7740                      l2678 5AD4  
                    l2686 5B5C                      l3558 7B08                      l3398 7772  
                    l3486 799A                      l2688 5B62                      l2696 5B76  
                    l2848 60CA                      l2872 611C                      l3680 7D5A  
                    l3592 7BAC                      l2698 5B90                      l2890 61C4  
                    l2882 6146                      l3674 7D46                      l3682 7D64  
                    l3586 7B8A                      l2788 5F28                      l2798 5F52  
                    l2958 67D6                      l2976 687E                      l2968 6800  
                    STR_1 7EF5                      STR_2 7E73                      STR_3 7F8C  
                    STR_4 7EAD                      STR_5 7EC5                      STR_6 7EDD  
                    STR_7 7ED1                      STR_8 7EDD                      STR_9 7E83  
                    u2110 6C22                      u2120 6C78                      u2035 6A2A  
                    u2115 6C18                      u2125 6C6E                      u2301 60F6  
                    u2150 6DC8                      u2055 6B0A                      u2231 5FFC  
                    u2145 6D1C                      u2161 5F02                      u2155 6DBE  
                    u2511 68AA                      u2441 6760                      u2371 61F0  
                    u1825 62F4                      u1745 63E2                      u1835 6324  
                    u1755 63FC                      u3507 771C                      u1765 6420  
                    u3517 776A                      u1775 6630                      u3607 5C56  
                    u3527 7784                      u1785 664A                      u3617 5C64  
                    u3537 7950                      u3707 6726                      u1795 666E  
                    u3627 5C72                      u3547 796A                      u1885 5E30  
                    u3717 6742                      u3637 5C80                      u3557 7BA4  
                    u3477 6E4A                      u1895 5E60                      u3807 6456  
                    u3727 651C                      u3647 5C8E                      u3567 7BBE  
                    u3487 6E64                      u3817 64D8                      u3737 652C  
                    u3657 5C9C                      u3577 7DF6                      u3497 7702  
                    u3827 64EE                      u3747 653C                      u3667 5CAA  
                    u3587 7E10                      u3757 654C                      u3677 5CB8  
                    u3597 5C48                      u3767 655C                      u3687 5CC6  
                    u3777 656C                      u3697 66A4                      u3787 65AC  
                    u3797 65EE                      _TMR2 000FBC               _PWM_generar 6BBA  
                    _main 6DE8                      fsr2h 000FDA                      indf1 000FE7  
                    fsr1l 000FE1                      indf2 000FDF                      fsr2l 000FD9  
           __CFG_BORV$190 000000              lcd_goto@data 000A                      prodh 000FF4  
                    prodl 000FF3                      start 0000             __CFG_IESO$OFF 000000  
         __end_of_Lcd_Cmd 64FA           __end_of_Lcd_Out 5AF6             __CFG_MCLRE$ON 000000  
            main@cantidad 00CD                _Lcd_Chr_CP 6622            Lcd_Out2@buffer 0005  
     __end_of_Conv_Entero 6BBA           __end_of___aldiv 63D4           __end_of___almod 5EF0  
                   ?_main 0001           __end_of___awdiv 5E14                     STR_10 7F6A  
                   STR_11 7E91                     STR_12 7F6A                     STR_20 7FCD  
                   STR_21 7FD7                     STR_13 7F7C                     STR_14 7E83  
                   STR_30 7FBE                     STR_22 7FA5                     STR_31 7FC3  
                   STR_23 7FB4                     STR_15 7F73                     STR_40 7FA5  
                   STR_24 7FB9                     STR_32 7FCD                     STR_16 7FAA  
                   STR_41 7FAF                     STR_25 7FC3                     STR_33 7FD7  
                   STR_17 7FAF                     STR_34 7FA5                     STR_42 7FB9  
                   STR_50 7FCD                     STR_26 7FCD                     STR_18 7FB9  
                   STR_35 7FAF                     STR_43 7FC3                     STR_27 7FD7  
                   STR_51 7FDC                     STR_19 7FC3                     STR_28 7FA5  
                   STR_36 7FB9                     STR_60 7FE1                     STR_44 7FD2  
                   STR_52 7F9F                     STR_29 7FAF                     STR_45 7FD7  
                   STR_61 7FE6                     STR_53 7FE6                     STR_37 7FC8  
                   STR_46 7FA5                     STR_38 7FCD                     STR_62 7FF5  
                   STR_54 7FF0                     STR_70 7F00                     STR_63 7F93  
                   STR_47 7FAF                     STR_39 7FD7                     STR_71 7FFA  
                   STR_55 7F93                     STR_72 7F97                     STR_48 7FB9  
                   STR_64 7FE1                     STR_80 7F51                     STR_56 7FE1  
                   STR_49 7FC3                     STR_65 7FE6                     STR_57 7FEB  
                   STR_73 7F85                     STR_81 7F61                     STR_66 7FF0  
                   STR_58 7FF0                     STR_82 7F63                     STR_90 7F33  
                   STR_74 7EB9                     STR_59 7F93                     STR_91 7F35  
                   STR_67 7F99                     STR_75 7F46                     STR_83 7E9F  
                   STR_68 7EC5                     STR_76 7F4F                     STR_84 7F15  
                   STR_77 7F3F                     STR_85 7F1F                     STR_69 7EE9  
                   STR_86 7F0D                     STR_78 7F3D                     STR_79 7F58  
                   STR_87 7F0B                     STR_88 7F29                     STR_89 7F21  
         __end_of___lldiv 5C42           ___awdiv@divisor 0003                     _T2CON 000FBA  
         ___awdiv@counter 0005                     _PORTA 000F80                     _TRISA 000F92  
                   _TRI_1 61DE                     _TRI_2 674E                     _TRI_3 6898  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
     ___lmul@multiplicand 0005             __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000  
          __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000  
          __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000                     _tm_1s 5C42  
                   main@A 00D3                     main@V 00CA                     main@X 00CF  
                   main@Z 00D1                     tablat 000FF5                     status 000FD8  
          __CFG_T3CMX$RC0 000000            __CFG_ICPRT$OFF 000000            __CFG_PBADEN$ON 000000  
        __end_of_Lcd_Init 6622          __end_of_Lcd_Out2 5BC0           __initialization 5AF6  
            __end_of_main 7E72                    ??_main 003C             __activetblptr 000002  
                  ?_TRI_1 0001                    ?_TRI_2 0001                    ?_TRI_3 0001  
          __CFG_SDOMX$RB3 000000           __CFG_CCP2MX$RC1 000000                    TRI_1@i 0032  
                  TRI_1@j 0030                    TRI_1@k 002E                    TRI_2@i 003A  
                  TRI_2@j 0038                    TRI_2@k 0036                    TRI_3@i 003A  
                  TRI_3@j 0038                    TRI_3@k 0036                    ?_tm_1s 0001  
                  _CCPR2L 000F90          ___awdiv@dividend 0001                    _ANSELA 000F5B  
                  _ANSELD 000F5E            __CFG_WDTEN$OFF 000000                    _OSCCON 000FD3  
                  _SENO_1 5EF0                    _SENO_2 5FEA                    _SENO_3 60E4  
               ??_Lcd_Cmd 0001                 ??_Lcd_Out 0007            __CFG_XINST$OFF 000000  
             _Conv_Entero 69E2          __end_of_lcd_goto 5A3E                    ___lmul 5A3E  
             ?_Lcd_Chr_CP 0001                 ??___aldiv 0009                 ??___almod 0009  
                  ___wmul 5988                 ??___awdiv 0005            __CFG_STVREN$ON 000000  
               ??___lldiv 0009      PWM_generar@AuxCCPR2L 001E                    clear_0 5AFC  
        ___awdiv@quotient 0007              __mediumconst 7E72                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8      __CFG_LS48MHZ$SYS24X4 000000  
              __accesstop 0060   __end_of__initialization 5B4E             __end_of_TRI_1 62D8  
           __end_of_TRI_2 6898             __end_of_TRI_3 69E2            __pcstackCOMRAM 0001  
            __pidataBANK0 59AE              __pidataBANK1 5CD0             __end_of_tm_1s 5CD0  
        TRI_1@valoresSeno 0006           __CFG_PCLKEN$OFF 000000               SENO_1@F7354 0100  
                 ??_TRI_1 0001                   ??_TRI_2 0009                   ??_TRI_3 0009  
             SENO_2@F7359 0060               SENO_3@F7364 0084                 ?_Lcd_Init 0001  
               ?_Lcd_Out2 0004                   ??_tm_1s 0001       __size_of_Lcd_Chr_CP 012C  
              __pbssBANK0 00D4                   ?_SENO_1 0001                   ?_SENO_2 0001  
                 ?_SENO_3 0001              ?_PWM_generar 000E         SENO_1@valoresSeno 0006  
                 SENO_1@i 0032                   SENO_1@j 0030                   SENO_1@k 002E  
                 SENO_2@i 002E                   SENO_2@j 002C                   SENO_2@k 002A  
                 SENO_3@i 0028                   SENO_3@j 0026                   SENO_3@k 0024  
       __CFG_PLLSEL$PLL4X 000000                   ?___lmul 0001                   ?___wmul 0001  
                 _CCP2CON 000F97            ___lmul@product 0009          TRI_2@valoresSeno 000E  
              ??_Lcd_Init 0004                ??_Lcd_Out2 0007                 ?_lcd_goto 0004  
                 _Lcd_Cmd 63D4                   _Lcd_Out 5A94           __size_of_SENO_1 00FA  
         __size_of_SENO_2 00FA           __size_of_SENO_3 00FA                _frecuencia 0041  
       SENO_2@valoresSeno 0006                   __Hparam 0000                   __Lparam 0000  
                 ___aldiv 62D8                   ___almod 5E14                   ___awdiv 5D70  
         __size_of___lmul 0056                   ___lldiv 5BC0           __size_of___wmul 0026  
                 __pcinit 5AF6     PWM_generar@AuxCCP2CON 0018          TRI_3@valoresSeno 000E  
                 __ramtop 0800                   __ptext0 6DE8                   __ptext1 5C42  
                 __ptext2 59F0                   __ptext3 5988                   __ptext4 6898  
                 __ptext5 674E                   __ptext6 5D70                   __ptext7 61DE  
                 __ptext8 60E4                   __ptext9 5FEA                 _T2CONbits 000FBA  
        ___aldiv@dividend 0001                   main@cad 00A2                   main@fre 00CC  
              ??_lcd_goto 0008      end_of_initialization 5B4E             __Lmediumconst 7E72  
         ___lldiv@divisor 0005         SENO_3@valoresSeno 0006           ___lldiv@counter 000D  
            ?_Conv_Entero 000F          ___aldiv@quotient 000B              ??_Lcd_Chr_CP 0001  
               Lcd_Out2@x 0004                 Lcd_Out2@y 0007                   postdec1 000FE5  
                 postdec2 000FDD                   postinc0 000FEE                   postinc1 000FE6  
                 postinc2 000FDE                 _PORTAbits 000F80                 _PORTCbits 000F82  
         Conv_Entero@conv 0013                 _PORTDbits 000F83                 _TRISAbits 000F92  
               _TRISCbits 000F94                 _TRISDbits 000F95        __end_of_Lcd_Chr_CP 674E  
              main@cadena 00B6          PWM_generar@ciclo 000E            __end_of_SENO_1 5FEA  
          __end_of_SENO_2 60E4            __end_of_SENO_3 61DE      __size_of_PWM_generar 022E  
          __end_of___lmul 5A94            __end_of___wmul 59AE       start_initialization 5AF6  
           Lcd_Out@buffer 0005         __size_of_Lcd_Init 0128         __size_of_Lcd_Out2 0068  
                ??_SENO_1 0001                  ??_SENO_2 0001                  ??_SENO_3 0001  
         __CFG_nLPBOR$OFF 000000                  ??___lmul 0009      Conv_Entero@numeroReg 0034  
                ??___wmul 0005               __pdataBANK0 0060               __pdataBANK1 0100  
             __pbssCOMRAM 003D             __pcstackBANK0 00A2       __end_of__stringdata 7FFE  
         __CFG_nPWRTEN$ON 000000                  ?_Lcd_Cmd 0001         __size_of_lcd_goto 004E  
                ?_Lcd_Out 0004             __pmediumconst 7E72                  ?___aldiv 0001  
                ?___almod 0001                  ?___awdiv 0001                  ?___lldiv 0001  
    __size_of_Conv_Entero 01D8          ___almod@dividend 0001    PWM_generar@prescalador 0016  
          __size_of_TRI_1 00FA            __size_of_TRI_2 014A            __size_of_TRI_3 014A  
          __size_of_tm_1s 008E           ___aldiv@divisor 0005           ___aldiv@counter 0009  
          ___wmul@product 0005                  Lcd_Out@x 0004          __CFG_WDTPS$32768 000000  
                Lcd_Out@y 0007            Conv_Entero@num 002F                TRI_1@F7354 0128  
              TRI_2@F7359 0150                TRI_3@F7364 0178              Lcd_Init@data 0005  
   PWM_generar@frecuencia 0010               __stringdata 7E73         ___wmul@multiplier 0001  
               lcd_goto@x 0004                 lcd_goto@y 0006         __CFG_CFGPLLEN$OFF 000000  
            Lcd_Out2@data 0008                  _Lcd_Init 64FA                  _Lcd_Out2 5B58  
     Conv_Entero@convTemp 001A         ___lmul@multiplier 0001                 copy_data0 5B22  
               copy_data1 5B42          __size_of_Lcd_Cmd 0126          __size_of_Lcd_Out 0062  
                __Hrparam 0000                  __Lrparam 0000        __CFG_BOREN$SBORDIS 000000  
        __size_of___aldiv 00FC          __size_of___almod 00DC          __size_of___awdiv 00A4  
        __size_of___lldiv 0082            Lcd_Chr_CP@data 0003                  __ptext10 5EF0  
                __ptext11 6BBA                  __ptext20 5E14                  __ptext12 5BC0  
                __ptext21 62D8                  __ptext13 5B58                  __ptext14 5A94  
                __ptext15 6622                  __ptext16 64FA                  __ptext17 63D4  
                __ptext18 69E2                  __ptext19 5A3E                  _lcd_goto 59F0  
         ___almod@divisor 0005           ___almod@counter 0009             ??_PWM_generar 0012  
             Lcd_Cmd@data 0003             __size_of_main 108A                  main@cant 00CE  
             Lcd_Out@data 0008          ___lldiv@dividend 0001  Conv_Entero@punteroActual 0032  
     __end_of_PWM_generar 6DE8              Conv_Entero@i 0031      __CFG_CPUDIV$NOCLKDIV 000000  
       Conv_Entero@numero 000F          ___lldiv@quotient 0009              ___aldiv@sign 000A  
      __CFG_FOSC$INTOSCIO 000000              ___almod@sign 000A             ??_Conv_Entero 0015  
