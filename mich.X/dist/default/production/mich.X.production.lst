

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue May 21 20:13:38 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataBANK0
    41  0059A0                     __pidataBANK0:
    42                           	opt stack 0
    43                           
    44                           ;initializer for SENO_2@F7359
    45  0059A0  0032               	dw	50
    46  0059A2  0043               	dw	67
    47  0059A4  0052               	dw	82
    48  0059A6  005D               	dw	93
    49  0059A8  0063               	dw	99
    50  0059AA  0063               	dw	99
    51  0059AC  005D               	dw	93
    52  0059AE  0052               	dw	82
    53  0059B0  0043               	dw	67
    54  0059B2  0032               	dw	50
    55  0059B4  0021               	dw	33
    56  0059B6  0012               	dw	18
    57  0059B8  0007               	dw	7
    58  0059BA  0001               	dw	1
    59  0059BC  0001               	dw	1
    60  0059BE  0007               	dw	7
    61  0059C0  0012               	dw	18
    62  0059C2  0021               	dw	33
    63                           
    64                           ;initializer for SENO_3@F7364
    65  0059C4  0032               	dw	50
    66  0059C6  0046               	dw	70
    67  0059C8  0057               	dw	87
    68  0059CA  0062               	dw	98
    69  0059CC  0064               	dw	100
    70  0059CE  005D               	dw	93
    71  0059D0  004F               	dw	79
    72  0059D2  003C               	dw	60
    73  0059D4  0028               	dw	40
    74  0059D6  0015               	dw	21
    75  0059D8  0007               	dw	7
    76  0059DA  0000               	dw	0
    77  0059DC  0002               	dw	2
    78  0059DE  000D               	dw	13
    79  0059E0  001E               	dw	30
    80                           
    81                           	psect	idataBANK1
    82  005CC2                     __pidataBANK1:
    83                           	opt stack 0
    84                           
    85                           ;initializer for SENO_1@F7354
    86  005CC2  0032               	dw	50
    87  005CC4  0023               	dw	35
    88  005CC6  0015               	dw	21
    89  005CC8  000A               	dw	10
    90  005CCA  0002               	dw	2
    91  005CCC  0000               	dw	0
    92  005CCE  0002               	dw	2
    93  005CD0  000A               	dw	10
    94  005CD2  0015               	dw	21
    95  005CD4  0023               	dw	35
    96  005CD6  0032               	dw	50
    97  005CD8  0041               	dw	65
    98  005CDA  004F               	dw	79
    99  005CDC  005A               	dw	90
   100  005CDE  0062               	dw	98
   101  005CE0  0064               	dw	100
   102  005CE2  0062               	dw	98
   103  005CE4  005A               	dw	90
   104  005CE6  004F               	dw	79
   105  005CE8  0041               	dw	65
   106                           
   107                           ;initializer for TRI_1@F7354
   108  005CEA  000A               	dw	10
   109  005CEC  0014               	dw	20
   110  005CEE  001E               	dw	30
   111  005CF0  0028               	dw	40
   112  005CF2  0032               	dw	50
   113  005CF4  003C               	dw	60
   114  005CF6  0046               	dw	70
   115  005CF8  0050               	dw	80
   116  005CFA  005A               	dw	90
   117  005CFC  0064               	dw	100
   118  005CFE  005A               	dw	90
   119  005D00  0050               	dw	80
   120  005D02  0046               	dw	70
   121  005D04  003C               	dw	60
   122  005D06  0032               	dw	50
   123  005D08  0028               	dw	40
   124  005D0A  001E               	dw	30
   125  005D0C  0014               	dw	20
   126  005D0E  000A               	dw	10
   127  005D10  0000               	dw	0
   128                           
   129                           ;initializer for TRI_2@F7359
   130  005D12  000A               	dw	10
   131  005D14  0014               	dw	20
   132  005D16  001E               	dw	30
   133  005D18  0028               	dw	40
   134  005D1A  0032               	dw	50
   135  005D1C  003C               	dw	60
   136  005D1E  0046               	dw	70
   137  005D20  0050               	dw	80
   138  005D22  005A               	dw	90
   139  005D24  0064               	dw	100
   140  005D26  005A               	dw	90
   141  005D28  0050               	dw	80
   142  005D2A  0046               	dw	70
   143  005D2C  003C               	dw	60
   144  005D2E  0032               	dw	50
   145  005D30  0028               	dw	40
   146  005D32  001E               	dw	30
   147  005D34  0014               	dw	20
   148  005D36  000A               	dw	10
   149  005D38  0000               	dw	0
   150                           
   151                           ;initializer for TRI_3@F7364
   152  005D3A  000A               	dw	10
   153  005D3C  0014               	dw	20
   154  005D3E  001E               	dw	30
   155  005D40  0028               	dw	40
   156  005D42  0032               	dw	50
   157  005D44  003C               	dw	60
   158  005D46  0046               	dw	70
   159  005D48  0050               	dw	80
   160  005D4A  005A               	dw	90
   161  005D4C  0064               	dw	100
   162  005D4E  005A               	dw	90
   163  005D50  0050               	dw	80
   164  005D52  0046               	dw	70
   165  005D54  003C               	dw	60
   166  005D56  0032               	dw	50
   167  005D58  0028               	dw	40
   168  005D5A  001E               	dw	30
   169  005D5C  0014               	dw	20
   170  005D5E  000A               	dw	10
   171  005D60  0000               	dw	0
   172  0000                     _ANSELB	set	3932
   173  0000                     _ANSELD	set	3934
   174  0000                     _CCP2CON	set	3991
   175  0000                     _CCPR2L	set	3984
   176  0000                     _OSCCON	set	4051
   177  0000                     _PORTAbits	set	3968
   178  0000                     _PORTBbits	set	3969
   179  0000                     _PORTCbits	set	3970
   180  0000                     _PORTDbits	set	3971
   181  0000                     _PR2	set	4027
   182  0000                     _T2CON	set	4026
   183  0000                     _T2CONbits	set	4026
   184  0000                     _TMR2	set	4028
   185  0000                     _TRISAbits	set	3986
   186  0000                     _TRISBbits	set	3987
   187  0000                     _TRISCbits	set	3988
   188  0000                     _TRISDbits	set	3989
   189                           
   190                           	psect	mediumconst
   191  007E6C                     __pmediumconst:
   192                           	opt stack 0
   193  007E6C  00                 	db	0
   194  007E6D                     __stringdata:
   195                           	opt stack 0
   196  007E6D                     STR_2:
   197  007E6D  50                 	db	80	;'P'
   198  007E6E  72                 	db	114	;'r'
   199  007E6F  6F                 	db	111	;'o'
   200  007E70  79                 	db	121	;'y'
   201  007E71  65                 	db	101	;'e'
   202  007E72  63                 	db	99	;'c'
   203  007E73  74                 	db	116	;'t'
   204  007E74  6F                 	db	111	;'o'
   205  007E75  20                 	db	32
   206  007E76  46                 	db	70	;'F'
   207  007E77  69                 	db	105	;'i'
   208  007E78  6E                 	db	110	;'n'
   209  007E79  61                 	db	97	;'a'
   210  007E7A  6C                 	db	108	;'l'
   211  007E7B  20                 	db	32
   212  007E7C  00                 	db	0
   213  007E7D                     STR_28:
   214  007E7D  20                 	db	32
   215  007E7E  20                 	db	32
   216  007E7F  20                 	db	32
   217  007E80  46                 	db	70	;'F'
   218  007E81  72                 	db	114	;'r'
   219  007E82  65                 	db	101	;'e'
   220  007E83  63                 	db	99	;'c'
   221  007E84  75                 	db	117	;'u'
   222  007E85  65                 	db	101	;'e'
   223  007E86  6E                 	db	110	;'n'
   224  007E87  63                 	db	99	;'c'
   225  007E88  69                 	db	105	;'i'
   226  007E89  61                 	db	97	;'a'
   227  007E8A  00                 	db	0
   228  007E8B                     STR_30:
   229  007E8B  3D                 	db	61	;'='
   230  007E8C  3E                 	db	62	;'>'
   231  007E8D  20                 	db	32
   232  007E8E  46                 	db	70	;'F'
   233  007E8F  72                 	db	114	;'r'
   234  007E90  65                 	db	101	;'e'
   235  007E91  63                 	db	99	;'c'
   236  007E92  75                 	db	117	;'u'
   237  007E93  65                 	db	101	;'e'
   238  007E94  6E                 	db	110	;'n'
   239  007E95  63                 	db	99	;'c'
   240  007E96  69                 	db	105	;'i'
   241  007E97  61                 	db	97	;'a'
   242  007E98  00                 	db	0
   243  007E99                     STR_4:
   244  007E99  20                 	db	32
   245  007E9A  20                 	db	32
   246  007E9B  20                 	db	32
   247  007E9C  54                 	db	84	;'T'
   248  007E9D  72                 	db	114	;'r'
   249  007E9E  69                 	db	105	;'i'
   250  007E9F  61                 	db	97	;'a'
   251  007EA0  6E                 	db	110	;'n'
   252  007EA1  67                 	db	103	;'g'
   253  007EA2  75                 	db	117	;'u'
   254  007EA3  6C                 	db	108	;'l'
   255  007EA4  61                 	db	97	;'a'
   256  007EA5  72                 	db	114	;'r'
   257  007EA6  00                 	db	0
   258  007EA7                     STR_14:
   259  007EA7  3D                 	db	61	;'='
   260  007EA8  3E                 	db	62	;'>'
   261  007EA9  20                 	db	32
   262  007EAA  54                 	db	84	;'T'
   263  007EAB  72                 	db	114	;'r'
   264  007EAC  69                 	db	105	;'i'
   265  007EAD  61                 	db	97	;'a'
   266  007EAE  6E                 	db	110	;'n'
   267  007EAF  67                 	db	103	;'g'
   268  007EB0  75                 	db	117	;'u'
   269  007EB1  6C                 	db	108	;'l'
   270  007EB2  61                 	db	97	;'a'
   271  007EB3  72                 	db	114	;'r'
   272  007EB4  00                 	db	0
   273  007EB5                     STR_13:
   274  007EB5  20                 	db	32
   275  007EB6  20                 	db	32
   276  007EB7  20                 	db	32
   277  007EB8  53                 	db	83	;'S'
   278  007EB9  65                 	db	101	;'e'
   279  007EBA  6E                 	db	110	;'n'
   280  007EBB  6F                 	db	111	;'o'
   281  007EBC  69                 	db	105	;'i'
   282  007EBD  64                 	db	100	;'d'
   283  007EBE  61                 	db	97	;'a'
   284  007EBF  6C                 	db	108	;'l'
   285  007EC0  00                 	db	0
   286  007EC1                     STR_3:
   287  007EC1  3D                 	db	61	;'='
   288  007EC2  3E                 	db	62	;'>'
   289  007EC3  20                 	db	32
   290  007EC4  53                 	db	83	;'S'
   291  007EC5  65                 	db	101	;'e'
   292  007EC6  6E                 	db	110	;'n'
   293  007EC7  6F                 	db	111	;'o'
   294  007EC8  69                 	db	105	;'i'
   295  007EC9  64                 	db	100	;'d'
   296  007ECA  61                 	db	97	;'a'
   297  007ECB  6C                 	db	108	;'l'
   298  007ECC  00                 	db	0
   299  007ECD                     STR_24:
   300  007ECD  20                 	db	32
   301  007ECE  20                 	db	32
   302  007ECF  20                 	db	32
   303  007ED0  49                 	db	73	;'I'
   304  007ED1  6E                 	db	110	;'n'
   305  007ED2  67                 	db	103	;'g'
   306  007ED3  72                 	db	114	;'r'
   307  007ED4  65                 	db	101	;'e'
   308  007ED5  73                 	db	115	;'s'
   309  007ED6  61                 	db	97	;'a'
   310  007ED7  72                 	db	114	;'r'
   311  007ED8  00                 	db	0
   312  007ED9                     STR_26:
   313  007ED9  3D                 	db	61	;'='
   314  007EDA  3E                 	db	62	;'>'
   315  007EDB  20                 	db	32
   316  007EDC  49                 	db	73	;'I'
   317  007EDD  6E                 	db	110	;'n'
   318  007EDE  67                 	db	103	;'g'
   319  007EDF  72                 	db	114	;'r'
   320  007EE0  65                 	db	101	;'e'
   321  007EE1  73                 	db	115	;'s'
   322  007EE2  61                 	db	97	;'a'
   323  007EE3  72                 	db	114	;'r'
   324  007EE4  00                 	db	0
   325  007EE5                     STR_25:
   326  007EE5  20                 	db	32
   327  007EE6  20                 	db	32
   328  007EE7  20                 	db	32
   329  007EE8  43                 	db	67	;'C'
   330  007EE9  6F                 	db	111	;'o'
   331  007EEA  6D                 	db	109	;'m'
   332  007EEB  65                 	db	101	;'e'
   333  007EEC  6E                 	db	110	;'n'
   334  007EED  7A                 	db	122	;'z'
   335  007EEE  61                 	db	97	;'a'
   336  007EEF  72                 	db	114	;'r'
   337  007EF0  00                 	db	0
   338  007EF1                     STR_88:
   339  007EF1  3D                 	db	61	;'='
   340  007EF2  3E                 	db	62	;'>'
   341  007EF3  20                 	db	32
   342  007EF4  43                 	db	67	;'C'
   343  007EF5  6F                 	db	111	;'o'
   344  007EF6  6D                 	db	109	;'m'
   345  007EF7  65                 	db	101	;'e'
   346  007EF8  6E                 	db	110	;'n'
   347  007EF9  7A                 	db	122	;'z'
   348  007EFA  61                 	db	97	;'a'
   349  007EFB  72                 	db	114	;'r'
   350  007EFC  00                 	db	0
   351  007EFD                     STR_1:
   352  007EFD  20                 	db	32
   353  007EFE  20                 	db	32
   354  007EFF  20                 	db	32
   355  007F00  20                 	db	32
   356  007F01  20                 	db	32
   357  007F02  44                 	db	68	;'D'
   358  007F03  49                 	db	73	;'I'
   359  007F04  43                 	db	67	;'C'
   360  007F05  49                 	db	73	;'I'
   361  007F06  53                 	db	83	;'S'
   362  007F07  00                 	db	0
   363  007F08                     STR_89:
   364  007F08  46                 	db	70	;'F'
   365  007F09  3A                 	db	58	;':'
   366  007F0A  20                 	db	32
   367  007F0B  20                 	db	32
   368  007F0C  30                 	db	48	;'0'
   369  007F0D  30                 	db	48	;'0'
   370  007F0E  30                 	db	48	;'0'
   371  007F0F  20                 	db	32
   372  007F10  68                 	db	104	;'h'
   373  007F11  7A                 	db	122	;'z'
   374  007F12  00                 	db	0
   375  007F13                     STR_18:
   376  007F13  20                 	db	32
   377  007F14  20                 	db	32
   378  007F15  20                 	db	32
   379  007F16  54                 	db	84	;'T'
   380  007F17  72                 	db	114	;'r'
   381  007F18  69                 	db	105	;'i'
   382  007F19  6E                 	db	110	;'n'
   383  007F1A  20                 	db	32
   384  007F1B  31                 	db	49	;'1'
   385  007F1C  00                 	db	0
   386  007F1D                     STR_15:
   387  007F1D  3D                 	db	61	;'='
   388  007F1E  3E                 	db	62	;'>'
   389  007F1F  20                 	db	32
   390  007F20  54                 	db	84	;'T'
   391  007F21  72                 	db	114	;'r'
   392  007F22  69                 	db	105	;'i'
   393  007F23  6E                 	db	110	;'n'
   394  007F24  20                 	db	32
   395  007F25  31                 	db	49	;'1'
   396  007F26  00                 	db	0
   397  007F27                     STR_16:
   398  007F27  20                 	db	32
   399  007F28  20                 	db	32
   400  007F29  20                 	db	32
   401  007F2A  54                 	db	84	;'T'
   402  007F2B  72                 	db	114	;'r'
   403  007F2C  69                 	db	105	;'i'
   404  007F2D  6E                 	db	110	;'n'
   405  007F2E  20                 	db	32
   406  007F2F  32                 	db	50	;'2'
   407  007F30  00                 	db	0
   408  007F31                     STR_19:
   409  007F31  3D                 	db	61	;'='
   410  007F32  3E                 	db	62	;'>'
   411  007F33  20                 	db	32
   412  007F34  54                 	db	84	;'T'
   413  007F35  72                 	db	114	;'r'
   414  007F36  69                 	db	105	;'i'
   415  007F37  6E                 	db	110	;'n'
   416  007F38  20                 	db	32
   417  007F39  32                 	db	50	;'2'
   418  007F3A  00                 	db	0
   419  007F3B                     STR_21:
   420  007F3B  3D                 	db	61	;'='
   421  007F3C  3E                 	db	62	;'>'
   422  007F3D  20                 	db	32
   423  007F3E  54                 	db	84	;'T'
   424  007F3F  72                 	db	114	;'r'
   425  007F40  69                 	db	105	;'i'
   426  007F41  6E                 	db	110	;'n'
   427  007F42  20                 	db	32
   428  007F43  33                 	db	51	;'3'
   429  007F44  00                 	db	0
   430  007F45                     STR_8:
   431  007F45  20                 	db	32
   432  007F46  20                 	db	32
   433  007F47  20                 	db	32
   434  007F48  53                 	db	83	;'S'
   435  007F49  69                 	db	105	;'i'
   436  007F4A  6E                 	db	110	;'n'
   437  007F4B  20                 	db	32
   438  007F4C  31                 	db	49	;'1'
   439  007F4D  00                 	db	0
   440  007F4E                     STR_5:
   441  007F4E  3D                 	db	61	;'='
   442  007F4F  3E                 	db	62	;'>'
   443  007F50  20                 	db	32
   444  007F51  53                 	db	83	;'S'
   445  007F52  69                 	db	105	;'i'
   446  007F53  6E                 	db	110	;'n'
   447  007F54  20                 	db	32
   448  007F55  31                 	db	49	;'1'
   449  007F56  00                 	db	0
   450  007F57                     STR_6:
   451  007F57  20                 	db	32
   452  007F58  20                 	db	32
   453  007F59  20                 	db	32
   454  007F5A  53                 	db	83	;'S'
   455  007F5B  69                 	db	105	;'i'
   456  007F5C  6E                 	db	110	;'n'
   457  007F5D  20                 	db	32
   458  007F5E  32                 	db	50	;'2'
   459  007F5F  00                 	db	0
   460  007F60                     STR_9:
   461  007F60  3D                 	db	61	;'='
   462  007F61  3E                 	db	62	;'>'
   463  007F62  20                 	db	32
   464  007F63  53                 	db	83	;'S'
   465  007F64  69                 	db	105	;'i'
   466  007F65  6E                 	db	110	;'n'
   467  007F66  20                 	db	32
   468  007F67  32                 	db	50	;'2'
   469  007F68  00                 	db	0
   470  007F69                     STR_11:
   471  007F69  3D                 	db	61	;'='
   472  007F6A  3E                 	db	62	;'>'
   473  007F6B  20                 	db	32
   474  007F6C  53                 	db	83	;'S'
   475  007F6D  69                 	db	105	;'i'
   476  007F6E  6E                 	db	110	;'n'
   477  007F6F  20                 	db	32
   478  007F70  33                 	db	51	;'3'
   479  007F71  00                 	db	0
   480  007F72                     STR_29:
   481  007F72  20                 	db	32
   482  007F73  20                 	db	32
   483  007F74  20                 	db	32
   484  007F75  43                 	db	67	;'C'
   485  007F76  69                 	db	105	;'i'
   486  007F77  63                 	db	99	;'c'
   487  007F78  6C                 	db	108	;'l'
   488  007F79  6F                 	db	111	;'o'
   489  007F7A  00                 	db	0
   490  007F7B                     STR_34:
   491  007F7B  3D                 	db	61	;'='
   492  007F7C  3E                 	db	62	;'>'
   493  007F7D  20                 	db	32
   494  007F7E  43                 	db	67	;'C'
   495  007F7F  69                 	db	105	;'i'
   496  007F80  63                 	db	99	;'c'
   497  007F81  6C                 	db	108	;'l'
   498  007F82  6F                 	db	111	;'o'
   499  007F83  00                 	db	0
   500  007F84                     STR_32:
   501  007F84  20                 	db	32
   502  007F85  20                 	db	32
   503  007F86  30                 	db	48	;'0'
   504  007F87  30                 	db	48	;'0'
   505  007F88  30                 	db	48	;'0'
   506  007F89  20                 	db	32
   507  007F8A  48                 	db	72	;'H'
   508  007F8B  7A                 	db	122	;'z'
   509  007F8C  00                 	db	0
   510  007F8D                     STR_23:
   511  007F8D  3D                 	db	61	;'='
   512  007F8E  3E                 	db	62	;'>'
   513  007F8F  20                 	db	32
   514  007F90  50                 	db	80	;'P'
   515  007F91  57                 	db	87	;'W'
   516  007F92  4D                 	db	77	;'M'
   517  007F93  00                 	db	0
   518  007F94                     STR_74:
   519  007F94  20                 	db	32
   520  007F95  31                 	db	49	;'1'
   521  007F96  30                 	db	48	;'0'
   522  007F97  30                 	db	48	;'0'
   523  007F98  25                 	db	37
   524  007F99  00                 	db	0
   525  007F9A                     STR_86:
   526  007F9A  2A                 	db	42
   527  007F9B  31                 	db	49	;'1'
   528  007F9C  30                 	db	48	;'0'
   529  007F9D  30                 	db	48	;'0'
   530  007F9E  25                 	db	37
   531  007F9F  00                 	db	0
   532  007FA0                     STR_71:
   533  007FA0  20                 	db	32
   534  007FA1  2A                 	db	42
   535  007FA2  37                 	db	55	;'7'
   536  007FA3  30                 	db	48	;'0'
   537  007FA4  25                 	db	37
   538  007FA5  00                 	db	0
   539  007FA6                     STR_41:
   540  007FA6  20                 	db	32
   541  007FA7  31                 	db	49	;'1'
   542  007FA8  30                 	db	48	;'0'
   543  007FA9  25                 	db	37
   544  007FAA  00                 	db	0
   545  007FAB                     STR_35:
   546  007FAB  2A                 	db	42
   547  007FAC  31                 	db	49	;'1'
   548  007FAD  30                 	db	48	;'0'
   549  007FAE  25                 	db	37
   550  007FAF  00                 	db	0
   551  007FB0                     STR_36:
   552  007FB0  20                 	db	32
   553  007FB1  32                 	db	50	;'2'
   554  007FB2  30                 	db	48	;'0'
   555  007FB3  25                 	db	37
   556  007FB4  00                 	db	0
   557  007FB5                     STR_42:
   558  007FB5  2A                 	db	42
   559  007FB6  32                 	db	50	;'2'
   560  007FB7  30                 	db	48	;'0'
   561  007FB8  25                 	db	37
   562  007FB9  00                 	db	0
   563  007FBA                     STR_37:
   564  007FBA  20                 	db	32
   565  007FBB  33                 	db	51	;'3'
   566  007FBC  30                 	db	48	;'0'
   567  007FBD  25                 	db	37
   568  007FBE  00                 	db	0
   569  007FBF                     STR_49:
   570  007FBF  2A                 	db	42
   571  007FC0  33                 	db	51	;'3'
   572  007FC1  30                 	db	48	;'0'
   573  007FC2  25                 	db	37
   574  007FC3  00                 	db	0
   575  007FC4                     STR_38:
   576  007FC4  20                 	db	32
   577  007FC5  34                 	db	52	;'4'
   578  007FC6  30                 	db	48	;'0'
   579  007FC7  25                 	db	37
   580  007FC8  00                 	db	0
   581  007FC9                     STR_56:
   582  007FC9  2A                 	db	42
   583  007FCA  34                 	db	52	;'4'
   584  007FCB  30                 	db	48	;'0'
   585  007FCC  25                 	db	37
   586  007FCD  00                 	db	0
   587  007FCE                     STR_39:
   588  007FCE  20                 	db	32
   589  007FCF  35                 	db	53	;'5'
   590  007FD0  30                 	db	48	;'0'
   591  007FD1  25                 	db	37
   592  007FD2  00                 	db	0
   593  007FD3                     STR_63:
   594  007FD3  2A                 	db	42
   595  007FD4  35                 	db	53	;'5'
   596  007FD5  30                 	db	48	;'0'
   597  007FD6  25                 	db	37
   598  007FD7  00                 	db	0
   599  007FD8                     STR_40:
   600  007FD8  20                 	db	32
   601  007FD9  36                 	db	54	;'6'
   602  007FDA  30                 	db	48	;'0'
   603  007FDB  25                 	db	37
   604  007FDC  00                 	db	0
   605  007FDD                     STR_70:
   606  007FDD  2A                 	db	42
   607  007FDE  36                 	db	54	;'6'
   608  007FDF  30                 	db	48	;'0'
   609  007FE0  25                 	db	37
   610  007FE1  00                 	db	0
   611  007FE2                     STR_75:
   612  007FE2  20                 	db	32
   613  007FE3  37                 	db	55	;'7'
   614  007FE4  30                 	db	48	;'0'
   615  007FE5  25                 	db	37
   616  007FE6  00                 	db	0
   617  007FE7                     STR_72:
   618  007FE7  20                 	db	32
   619  007FE8  38                 	db	56	;'8'
   620  007FE9  30                 	db	48	;'0'
   621  007FEA  25                 	db	37
   622  007FEB  00                 	db	0
   623  007FEC                     STR_76:
   624  007FEC  2A                 	db	42
   625  007FED  38                 	db	56	;'8'
   626  007FEE  30                 	db	48	;'0'
   627  007FEF  25                 	db	37
   628  007FF0  00                 	db	0
   629  007FF1                     STR_73:
   630  007FF1  20                 	db	32
   631  007FF2  39                 	db	57	;'9'
   632  007FF3  30                 	db	48	;'0'
   633  007FF4  25                 	db	37
   634  007FF5  00                 	db	0
   635  007FF6                     STR_81:
   636  007FF6  2A                 	db	42
   637  007FF7  39                 	db	57	;'9'
   638  007FF8  30                 	db	48	;'0'
   639  007FF9  25                 	db	37
   640  007FFA  00                 	db	0
   641  007FFB                     STR_90:
   642  007FFB  43                 	db	67	;'C'
   643  007FFC  3A                 	db	58	;':'
   644  007FFD  20                 	db	32
   645  007FFE  00                 	db	0
   646  007FFF                     __end_of__stringdata:
   647                           	opt stack 0
   648                           
   649                           ; #config settings
   650  007FFF  00                 	db	0	; dummy byte at the end
   651  0000                     
   652                           	psect	cinit
   653  005AE8                     __pcinit:
   654                           	opt stack 0
   655  005AE8                     start_initialization:
   656                           	opt stack 0
   657  005AE8                     __initialization:
   658                           	opt stack 0
   659                           
   660                           ; Clear objects allocated to BANK0 (16 bytes)
   661  005AE8  EE00  F0D4         	lfsr	0,__pbssBANK0
   662  005AEC  0E10               	movlw	16
   663  005AEE                     clear_0:
   664  005AEE  6AEE               	clrf	postinc0,c
   665  005AF0  06E8               	decf	wreg,f,c
   666  005AF2  E1FD               	bnz	clear_0
   667                           
   668                           ; Clear objects allocated to COMRAM (6 bytes)
   669  005AF4  6A42               	clrf	(__pbssCOMRAM+5)& (0+255),c
   670  005AF6  6A41               	clrf	(__pbssCOMRAM+4)& (0+255),c
   671  005AF8  6A40               	clrf	(__pbssCOMRAM+3)& (0+255),c
   672  005AFA  6A3F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   673  005AFC  6A3E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   674  005AFE  6A3D               	clrf	__pbssCOMRAM& (0+255),c
   675                           
   676                           ; Initialize objects allocated to BANK1 (160 bytes)
   677                           ; load TBLPTR registers with __pidataBANK1
   678  005B00  0EC2               	movlw	low __pidataBANK1
   679  005B02  6EF6               	movwf	tblptrl,c
   680  005B04  0E5C               	movlw	high __pidataBANK1
   681  005B06  6EF7               	movwf	tblptrh,c
   682  005B08  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   683  005B0A  6EF8               	movwf	tblptru,c
   684  005B0C  EE01  F000         	lfsr	0,__pdataBANK1
   685  005B10  EE10 F0A0          	lfsr	1,160
   686  005B14                     copy_data0:
   687  005B14  0009               	tblrd		*+
   688  005B16  CFF5 FFEE          	movff	tablat,postinc0
   689  005B1A  50E5               	movf	postdec1,w,c
   690  005B1C  50E1               	movf	fsr1l,w,c
   691  005B1E  E1FA               	bnz	copy_data0
   692                           
   693                           ; Initialize objects allocated to BANK0 (66 bytes)
   694                           ; load TBLPTR registers with __pidataBANK0
   695  005B20  0EA0               	movlw	low __pidataBANK0
   696  005B22  6EF6               	movwf	tblptrl,c
   697  005B24  0E59               	movlw	high __pidataBANK0
   698  005B26  6EF7               	movwf	tblptrh,c
   699  005B28  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   700  005B2A  6EF8               	movwf	tblptru,c
   701  005B2C  EE00  F060         	lfsr	0,__pdataBANK0
   702  005B30  EE10 F042          	lfsr	1,66
   703  005B34                     copy_data1:
   704  005B34  0009               	tblrd		*+
   705  005B36  CFF5 FFEE          	movff	tablat,postinc0
   706  005B3A  50E5               	movf	postdec1,w,c
   707  005B3C  50E1               	movf	fsr1l,w,c
   708  005B3E  E1FA               	bnz	copy_data1
   709  005B40                     end_of_initialization:
   710                           	opt stack 0
   711  005B40                     __end_of__initialization:
   712                           	opt stack 0
   713  005B40  0E00               	movlw	low (__Lmediumconst shr (0+16))
   714  005B42  6EF8               	movwf	tblptru,c
   715  005B44  0100               	movlb	0
   716  005B46  EFED  F036         	goto	_main	;jump to C main() function
   717                           tblptru	equ	0xFF8
   718                           tblptrh	equ	0xFF7
   719                           tblptrl	equ	0xFF6
   720                           tablat	equ	0xFF5
   721                           postinc0	equ	0xFEE
   722                           wreg	equ	0xFE8
   723                           postdec1	equ	0xFE5
   724                           fsr1l	equ	0xFE1
   725                           
   726                           	psect	bssCOMRAM
   727  00003D                     __pbssCOMRAM:
   728                           	opt stack 0
   729  00003D                     _C:
   730                           	opt stack 0
   731  00003D                     	ds	2
   732  00003F                     _D:
   733                           	opt stack 0
   734  00003F                     	ds	2
   735  000041                     _frecuencia:
   736                           	opt stack 0
   737  000041                     	ds	2
   738                           tblptru	equ	0xFF8
   739                           tblptrh	equ	0xFF7
   740                           tblptrl	equ	0xFF6
   741                           tablat	equ	0xFF5
   742                           postinc0	equ	0xFEE
   743                           wreg	equ	0xFE8
   744                           postdec1	equ	0xFE5
   745                           fsr1l	equ	0xFE1
   746                           
   747                           	psect	bssBANK0
   748  0000D4                     __pbssBANK0:
   749                           	opt stack 0
   750  0000D4                     _B:
   751                           	opt stack 0
   752  0000D4                     	ds	2
   753  0000D6                     _M:
   754                           	opt stack 0
   755  0000D6                     	ds	2
   756  0000D8                     _e:
   757                           	opt stack 0
   758  0000D8                     	ds	2
   759  0000DA                     _p:
   760                           	opt stack 0
   761  0000DA                     	ds	2
   762  0000DC                     _q:
   763                           	opt stack 0
   764  0000DC                     	ds	2
   765  0000DE                     _r:
   766                           	opt stack 0
   767  0000DE                     	ds	2
   768  0000E0                     _t:
   769                           	opt stack 0
   770  0000E0                     	ds	2
   771  0000E2                     _w:
   772                           	opt stack 0
   773  0000E2                     	ds	2
   774                           tblptru	equ	0xFF8
   775                           tblptrh	equ	0xFF7
   776                           tblptrl	equ	0xFF6
   777                           tablat	equ	0xFF5
   778                           postinc0	equ	0xFEE
   779                           wreg	equ	0xFE8
   780                           postdec1	equ	0xFE5
   781                           fsr1l	equ	0xFE1
   782                           
   783                           	psect	dataBANK0
   784  000060                     __pdataBANK0:
   785                           	opt stack 0
   786  000060                     SENO_2@F7359:
   787                           	opt stack 0
   788  000060                     	ds	36
   789  000084                     SENO_3@F7364:
   790                           	opt stack 0
   791  000084                     	ds	30
   792                           tblptru	equ	0xFF8
   793                           tblptrh	equ	0xFF7
   794                           tblptrl	equ	0xFF6
   795                           tablat	equ	0xFF5
   796                           postinc0	equ	0xFEE
   797                           wreg	equ	0xFE8
   798                           postdec1	equ	0xFE5
   799                           fsr1l	equ	0xFE1
   800                           
   801                           	psect	dataBANK1
   802  000100                     __pdataBANK1:
   803                           	opt stack 0
   804  000100                     SENO_1@F7354:
   805                           	opt stack 0
   806  000100                     	ds	40
   807  000128                     TRI_1@F7354:
   808                           	opt stack 0
   809  000128                     	ds	40
   810  000150                     TRI_2@F7359:
   811                           	opt stack 0
   812  000150                     	ds	40
   813  000178                     TRI_3@F7364:
   814                           	opt stack 0
   815  000178                     	ds	40
   816                           tblptru	equ	0xFF8
   817                           tblptrh	equ	0xFF7
   818                           tblptrl	equ	0xFF6
   819                           tablat	equ	0xFF5
   820                           postinc0	equ	0xFEE
   821                           wreg	equ	0xFE8
   822                           postdec1	equ	0xFE5
   823                           fsr1l	equ	0xFE1
   824                           
   825                           	psect	cstackBANK0
   826  0000A2                     __pcstackBANK0:
   827                           	opt stack 0
   828  0000A2                     main@cad:
   829                           	opt stack 0
   830                           
   831                           ; 20 bytes @ 0x0
   832  0000A2                     	ds	20
   833  0000B6                     main@cadena:
   834                           	opt stack 0
   835                           
   836                           ; 20 bytes @ 0x14
   837  0000B6                     	ds	20
   838  0000CA                     main@V:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x28
   842  0000CA                     	ds	2
   843  0000CC                     main@fre:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x2A
   847  0000CC                     	ds	1
   848  0000CD                     main@cantidad:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x2B
   852  0000CD                     	ds	1
   853  0000CE                     main@cant:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0x2C
   857  0000CE                     	ds	1
   858  0000CF                     main@X:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x2D
   862  0000CF                     	ds	2
   863  0000D1                     main@Z:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x2F
   867  0000D1                     	ds	2
   868  0000D3                     main@A:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x31
   872  0000D3                     	ds	1
   873                           tblptru	equ	0xFF8
   874                           tblptrh	equ	0xFF7
   875                           tblptrl	equ	0xFF6
   876                           tablat	equ	0xFF5
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           postdec1	equ	0xFE5
   880                           fsr1l	equ	0xFE1
   881                           
   882                           	psect	cstackCOMRAM
   883  000001                     __pcstackCOMRAM:
   884                           	opt stack 0
   885  000001                     ??_Lcd_Cmd:
   886  000001                     ??_Lcd_Chr_CP:
   887  000001                     ??_SENO_1:
   888  000001                     ??_SENO_2:
   889  000001                     ??_SENO_3:
   890  000001                     ??_TRI_1:
   891  000001                     ??_tm_1s:
   892  000001                     ?___wmul:
   893                           	opt stack 0
   894  000001                     ?___awdiv:
   895                           	opt stack 0
   896  000001                     ?___lmul:
   897                           	opt stack 0
   898  000001                     ?___aldiv:
   899                           	opt stack 0
   900  000001                     ?___almod:
   901                           	opt stack 0
   902  000001                     ?___lldiv:
   903                           	opt stack 0
   904  000001                     ___wmul@multiplier:
   905                           	opt stack 0
   906  000001                     ___awdiv@dividend:
   907                           	opt stack 0
   908  000001                     ___lmul@multiplier:
   909                           	opt stack 0
   910  000001                     ___aldiv@dividend:
   911                           	opt stack 0
   912  000001                     ___almod@dividend:
   913                           	opt stack 0
   914  000001                     ___lldiv@dividend:
   915                           	opt stack 0
   916                           
   917                           ; 4 bytes @ 0x0
   918  000001                     	ds	2
   919  000003                     Lcd_Chr_CP@data:
   920                           	opt stack 0
   921  000003                     Lcd_Cmd@data:
   922                           	opt stack 0
   923  000003                     ___wmul@multiplicand:
   924                           	opt stack 0
   925  000003                     ___awdiv@divisor:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x2
   929  000003                     	ds	1
   930  000004                     ??_Lcd_Init:
   931  000004                     Lcd_Out@x:
   932                           	opt stack 0
   933  000004                     Lcd_Out2@x:
   934                           	opt stack 0
   935  000004                     lcd_goto@x:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x3
   939  000004                     	ds	1
   940  000005                     Lcd_Init@data:
   941                           	opt stack 0
   942  000005                     ___awdiv@counter:
   943                           	opt stack 0
   944  000005                     Lcd_Out@buffer:
   945                           	opt stack 0
   946  000005                     Lcd_Out2@buffer:
   947                           	opt stack 0
   948  000005                     ___wmul@product:
   949                           	opt stack 0
   950  000005                     ___lmul@multiplicand:
   951                           	opt stack 0
   952  000005                     ___aldiv@divisor:
   953                           	opt stack 0
   954  000005                     ___almod@divisor:
   955                           	opt stack 0
   956  000005                     ___lldiv@divisor:
   957                           	opt stack 0
   958                           
   959                           ; 4 bytes @ 0x4
   960  000005                     	ds	1
   961  000006                     ___awdiv@sign:
   962                           	opt stack 0
   963  000006                     lcd_goto@y:
   964                           	opt stack 0
   965  000006                     SENO_3@valoresSeno:
   966                           	opt stack 0
   967  000006                     SENO_2@valoresSeno:
   968                           	opt stack 0
   969  000006                     SENO_1@valoresSeno:
   970                           	opt stack 0
   971  000006                     TRI_1@valoresSeno:
   972                           	opt stack 0
   973                           
   974                           ; 40 bytes @ 0x5
   975  000006                     	ds	1
   976  000007                     Lcd_Out@y:
   977                           	opt stack 0
   978  000007                     Lcd_Out2@y:
   979                           	opt stack 0
   980  000007                     ___awdiv@quotient:
   981                           	opt stack 0
   982                           
   983                           ; 2 bytes @ 0x6
   984  000007                     	ds	1
   985  000008                     ??_lcd_goto:
   986  000008                     Lcd_Out@data:
   987                           	opt stack 0
   988  000008                     Lcd_Out2@data:
   989                           	opt stack 0
   990                           
   991                           ; 1 bytes @ 0x7
   992  000008                     	ds	1
   993  000009                     ??_TRI_2:
   994  000009                     ??_TRI_3:
   995  000009                     ___aldiv@counter:
   996                           	opt stack 0
   997  000009                     ___almod@counter:
   998                           	opt stack 0
   999  000009                     ___lmul@product:
  1000                           	opt stack 0
  1001  000009                     ___lldiv@quotient:
  1002                           	opt stack 0
  1003                           
  1004                           ; 4 bytes @ 0x8
  1005  000009                     	ds	1
  1006  00000A                     lcd_goto@data:
  1007                           	opt stack 0
  1008  00000A                     ___aldiv@sign:
  1009                           	opt stack 0
  1010  00000A                     ___almod@sign:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x9
  1014  00000A                     	ds	1
  1015  00000B                     ___aldiv@quotient:
  1016                           	opt stack 0
  1017                           
  1018                           ; 4 bytes @ 0xA
  1019  00000B                     	ds	2
  1020  00000D                     ___lldiv@counter:
  1021                           	opt stack 0
  1022                           
  1023                           ; 1 bytes @ 0xC
  1024  00000D                     	ds	1
  1025  00000E                     PWM_generar@ciclo:
  1026                           	opt stack 0
  1027  00000E                     TRI_2@valoresSeno:
  1028                           	opt stack 0
  1029  00000E                     TRI_3@valoresSeno:
  1030                           	opt stack 0
  1031                           
  1032                           ; 40 bytes @ 0xD
  1033  00000E                     	ds	1
  1034  00000F                     ?_Conv_Entero:
  1035                           	opt stack 0
  1036  00000F                     Conv_Entero@numero:
  1037                           	opt stack 0
  1038                           
  1039                           ; 4 bytes @ 0xE
  1040  00000F                     	ds	1
  1041  000010                     PWM_generar@frecuencia:
  1042                           	opt stack 0
  1043                           
  1044                           ; 2 bytes @ 0xF
  1045  000010                     	ds	2
  1046  000012                     ??_PWM_generar:
  1047                           
  1048                           ; 0 bytes @ 0x11
  1049  000012                     	ds	1
  1050  000013                     Conv_Entero@conv:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x12
  1054  000013                     	ds	2
  1055  000015                     ??_Conv_Entero:
  1056                           
  1057                           ; 0 bytes @ 0x14
  1058  000015                     	ds	1
  1059  000016                     PWM_generar@prescalador:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0x15
  1063  000016                     	ds	2
  1064  000018                     PWM_generar@AuxCCP2CON:
  1065                           	opt stack 0
  1066                           
  1067                           ; 2 bytes @ 0x17
  1068  000018                     	ds	2
  1069  00001A                     PWM_generar@PR2cal:
  1070                           	opt stack 0
  1071  00001A                     Conv_Entero@convTemp:
  1072                           	opt stack 0
  1073                           
  1074                           ; 21 bytes @ 0x19
  1075  00001A                     	ds	4
  1076  00001E                     PWM_generar@AuxCCPR2L:
  1077                           	opt stack 0
  1078                           
  1079                           ; 4 bytes @ 0x1D
  1080  00001E                     	ds	6
  1081  000024                     SENO_3@k:
  1082                           	opt stack 0
  1083                           
  1084                           ; 2 bytes @ 0x23
  1085  000024                     	ds	2
  1086  000026                     SENO_3@j:
  1087                           	opt stack 0
  1088                           
  1089                           ; 2 bytes @ 0x25
  1090  000026                     	ds	2
  1091  000028                     SENO_3@i:
  1092                           	opt stack 0
  1093                           
  1094                           ; 2 bytes @ 0x27
  1095  000028                     	ds	2
  1096  00002A                     SENO_2@k:
  1097                           	opt stack 0
  1098                           
  1099                           ; 2 bytes @ 0x29
  1100  00002A                     	ds	2
  1101  00002C                     SENO_2@j:
  1102                           	opt stack 0
  1103                           
  1104                           ; 2 bytes @ 0x2B
  1105  00002C                     	ds	2
  1106  00002E                     SENO_1@k:
  1107                           	opt stack 0
  1108  00002E                     SENO_2@i:
  1109                           	opt stack 0
  1110  00002E                     TRI_1@k:
  1111                           	opt stack 0
  1112                           
  1113                           ; 2 bytes @ 0x2D
  1114  00002E                     	ds	1
  1115  00002F                     Conv_Entero@num:
  1116                           	opt stack 0
  1117                           
  1118                           ; 2 bytes @ 0x2E
  1119  00002F                     	ds	1
  1120  000030                     SENO_1@j:
  1121                           	opt stack 0
  1122  000030                     TRI_1@j:
  1123                           	opt stack 0
  1124                           
  1125                           ; 2 bytes @ 0x2F
  1126  000030                     	ds	1
  1127  000031                     Conv_Entero@i:
  1128                           	opt stack 0
  1129                           
  1130                           ; 1 bytes @ 0x30
  1131  000031                     	ds	1
  1132  000032                     Conv_Entero@punteroActual:
  1133                           	opt stack 0
  1134  000032                     SENO_1@i:
  1135                           	opt stack 0
  1136  000032                     TRI_1@i:
  1137                           	opt stack 0
  1138                           
  1139                           ; 2 bytes @ 0x31
  1140  000032                     	ds	2
  1141  000034                     Conv_Entero@numeroReg:
  1142                           	opt stack 0
  1143                           
  1144                           ; 4 bytes @ 0x33
  1145  000034                     	ds	2
  1146  000036                     TRI_2@k:
  1147                           	opt stack 0
  1148  000036                     TRI_3@k:
  1149                           	opt stack 0
  1150                           
  1151                           ; 2 bytes @ 0x35
  1152  000036                     	ds	2
  1153  000038                     TRI_2@j:
  1154                           	opt stack 0
  1155  000038                     TRI_3@j:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0x37
  1159  000038                     	ds	2
  1160  00003A                     TRI_2@i:
  1161                           	opt stack 0
  1162  00003A                     TRI_3@i:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0x39
  1166  00003A                     	ds	2
  1167  00003C                     ??_main:
  1168                           
  1169                           ; 0 bytes @ 0x3B
  1170  00003C                     	ds	1
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           postinc0	equ	0xFEE
  1176                           wreg	equ	0xFE8
  1177                           postdec1	equ	0xFE5
  1178                           fsr1l	equ	0xFE1
  1179                           
  1180 ;;
  1181 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1182 ;;
  1183 ;; *************** function _main *****************
  1184 ;; Defined at:
  1185 ;;		line 22 in file "main.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  fre             1   42[BANK0 ] unsigned char 
  1190 ;;  cadena         20   20[BANK0 ] unsigned char [20]
  1191 ;;  cad            20    0[BANK0 ] unsigned char [20]
  1192 ;;  Z               2   47[BANK0 ] unsigned int 
  1193 ;;  X               2   45[BANK0 ] unsigned int 
  1194 ;;  V               2   40[BANK0 ] unsigned int 
  1195 ;;  A               1   49[BANK0 ] unsigned char 
  1196 ;;  cant            1   44[BANK0 ] unsigned char 
  1197 ;;  cantidad        1   43[BANK0 ] unsigned char 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;		None               void
  1200 ;; Registers used:
  1201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1207 ;;      Params:         0       0       0       0       0       0       0       0       0
  1208 ;;      Locals:         0      50       0       0       0       0       0       0       0
  1209 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1210 ;;      Totals:         1      50       0       0       0       0       0       0       0
  1211 ;;Total ram usage:       51 bytes
  1212 ;; Hardware stack levels required when called:    2
  1213 ;; This function calls:
  1214 ;;		_Conv_Entero
  1215 ;;		_Lcd_Chr_CP
  1216 ;;		_Lcd_Cmd
  1217 ;;		_Lcd_Init
  1218 ;;		_Lcd_Out
  1219 ;;		_Lcd_Out2
  1220 ;;		_PWM_generar
  1221 ;;		_SENO_1
  1222 ;;		_SENO_2
  1223 ;;		_SENO_3
  1224 ;;		_TRI_1
  1225 ;;		_TRI_2
  1226 ;;		_TRI_3
  1227 ;;		___wmul
  1228 ;;		_lcd_goto
  1229 ;;		_tm_1s
  1230 ;; This function is called by:
  1231 ;;		Startup code after reset
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text0
  1236  006DDA                     __ptext0:
  1237                           	opt stack 0
  1238  006DDA                     _main:
  1239                           	opt stack 29
  1240                           
  1241                           ;main.c: 24: unsigned char A=47,cantidad=0,cant=0;
  1242                           
  1243                           ;incstack = 0
  1244  006DDA  0E2F               	movlw	47
  1245  006DDC  0100               	movlb	0	; () banked
  1246  006DDE  6FD3               	movwf	main@A& (0+255),b
  1247  006DE0  0E00               	movlw	0
  1248  006DE2  0100               	movlb	0	; () banked
  1249  006DE4  6FCD               	movwf	main@cantidad& (0+255),b
  1250  006DE6  0E00               	movlw	0
  1251  006DE8  0100               	movlb	0	; () banked
  1252  006DEA  6FCE               	movwf	main@cant& (0+255),b
  1253                           
  1254                           ;main.c: 25: char cadena[20],cad[20];
  1255                           ;main.c: 26: unsigned int Z=0,X=0,V=0;
  1256  006DEC  0E00               	movlw	0
  1257  006DEE  0100               	movlb	0	; () banked
  1258  006DF0  6FD2               	movwf	(main@Z+1)& (0+255),b
  1259  006DF2  0E00               	movlw	0
  1260  006DF4  0100               	movlb	0	; () banked
  1261  006DF6  6FD1               	movwf	main@Z& (0+255),b
  1262  006DF8  0E00               	movlw	0
  1263  006DFA  0100               	movlb	0	; () banked
  1264  006DFC  6FD0               	movwf	(main@X+1)& (0+255),b
  1265  006DFE  0E00               	movlw	0
  1266  006E00  0100               	movlb	0	; () banked
  1267  006E02  6FCF               	movwf	main@X& (0+255),b
  1268  006E04  0E00               	movlw	0
  1269  006E06  0100               	movlb	0	; () banked
  1270  006E08  6FCB               	movwf	(main@V+1)& (0+255),b
  1271  006E0A  0E00               	movlw	0
  1272  006E0C  0100               	movlb	0	; () banked
  1273  006E0E  6FCA               	movwf	main@V& (0+255),b
  1274                           
  1275                           ;main.c: 27: OSCCON=0b01010111;
  1276  006E10  0E57               	movlw	87
  1277  006E12  6ED3               	movwf	4051,c	;volatile
  1278                           
  1279                           ;main.c: 28: ANSELD=0;
  1280  006E14  0E00               	movlw	0
  1281  006E16  010F               	movlb	15	; () banked
  1282  006E18  6F5E               	movwf	94,b	;volatile
  1283                           
  1284                           ; BSR set to: 15
  1285                           ;main.c: 29: Lcd_Init();
  1286  006E1A  EC76  F032         	call	_Lcd_Init	;wreg free
  1287                           
  1288                           ;main.c: 31: TRISBbits.RB0=1;
  1289  006E1E  8093               	bsf	3987,0,c	;volatile
  1290                           
  1291                           ;main.c: 32: TRISBbits.RB1=1;
  1292  006E20  8293               	bsf	3987,1,c	;volatile
  1293                           
  1294                           ;main.c: 33: TRISBbits.RB2=1;
  1295  006E22  8493               	bsf	3987,2,c	;volatile
  1296                           
  1297                           ;main.c: 34: TRISBbits.RB3=1;
  1298  006E24  8693               	bsf	3987,3,c	;volatile
  1299                           
  1300                           ;main.c: 35: TRISBbits.RB4=1;
  1301  006E26  8893               	bsf	3987,4,c	;volatile
  1302                           
  1303                           ;main.c: 36: ANSELB=0;
  1304  006E28  0E00               	movlw	0
  1305  006E2A  010F               	movlb	15	; () banked
  1306  006E2C  6F5C               	movwf	92,b	;volatile
  1307  006E2E                     l3060:
  1308                           
  1309                           ;main.c: 39: if(PORTBbits.RB0==1)
  1310  006E2E  A081               	btfss	3969,0,c	;volatile
  1311  006E30  D00A               	goto	l3066
  1312                           
  1313                           ;main.c: 40: {
  1314                           ;main.c: 41: B++;
  1315  006E32  0100               	movlb	0	; () banked
  1316  006E34  4BD4               	infsnz	_B& (0+255),f,b
  1317  006E36  2BD5               	incf	(_B+1)& (0+255),f,b
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;main.c: 42: _delay((unsigned long)((10)*(4000000/4000.0)));
  1321  006E38  0E0D               	movlw	13
  1322  006E3A  6E3C               	movwf	??_main& (0+255),c
  1323  006E3C  0EFC               	movlw	252
  1324  006E3E                     u3537:
  1325  006E3E  2EE8               	decfsz	wreg,f,c
  1326  006E40  D7FE               	goto	u3537
  1327  006E42  2E3C               	decfsz	??_main& (0+255),f,c
  1328  006E44  D7FC               	goto	u3537
  1329  006E46                     l3066:
  1330                           
  1331                           ;main.c: 43: }
  1332                           ;main.c: 45: if(PORTBbits.RB1==1)
  1333  006E46  A281               	btfss	3969,1,c	;volatile
  1334  006E48  D00B               	goto	l121
  1335                           
  1336                           ;main.c: 46: {
  1337                           ;main.c: 47: B--;
  1338  006E4A  0100               	movlb	0	; () banked
  1339  006E4C  07D4               	decf	_B& (0+255),f,b
  1340  006E4E  A0D8               	btfss	status,0,c
  1341  006E50  07D5               	decf	(_B+1)& (0+255),f,b
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;main.c: 48: _delay((unsigned long)((10)*(4000000/4000.0)));
  1345  006E52  0E0D               	movlw	13
  1346  006E54  6E3C               	movwf	??_main& (0+255),c
  1347  006E56  0EFC               	movlw	252
  1348  006E58                     u3547:
  1349  006E58  2EE8               	decfsz	wreg,f,c
  1350  006E5A  D7FE               	goto	u3547
  1351  006E5C  2E3C               	decfsz	??_main& (0+255),f,c
  1352  006E5E  D7FC               	goto	u3547
  1353  006E60                     l121:
  1354                           
  1355                           ;main.c: 49: }
  1356                           ;main.c: 51: if(B==0){
  1357  006E60  0100               	movlb	0	; () banked
  1358  006E62  51D5               	movf	(_B+1)& (0+255),w,b
  1359  006E64  11D4               	iorwf	_B& (0+255),w,b
  1360  006E66  A4D8               	btfss	status,2,c
  1361  006E68  D01C               	goto	l3080
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;main.c: 52: Lcd_Init();
  1365  006E6A  EC76  F032         	call	_Lcd_Init	;wreg free
  1366                           
  1367                           ;main.c: 53: Lcd_Cmd(1);
  1368  006E6E  0E01               	movlw	1
  1369  006E70  ECE3  F031         	call	_Lcd_Cmd
  1370                           
  1371                           ;main.c: 54: Lcd_Cmd(12);
  1372  006E74  0E0C               	movlw	12
  1373  006E76  ECE3  F031         	call	_Lcd_Cmd
  1374                           
  1375                           ;main.c: 55: Lcd_Out2(1,1,"     DICIS");
  1376  006E7A  0E01               	movlw	1
  1377  006E7C  6E04               	movwf	Lcd_Out2@x,c
  1378  006E7E  0E7E               	movlw	high STR_1
  1379  006E80  6E06               	movwf	Lcd_Out2@buffer+1,c
  1380  006E82  0EFD               	movlw	low STR_1
  1381  006E84  6E05               	movwf	Lcd_Out2@buffer,c
  1382  006E86  0E01               	movlw	1
  1383  006E88  ECA5  F02D         	call	_Lcd_Out2
  1384                           
  1385                           ;main.c: 56: Lcd_Out2(2,1,"Proyecto Final ");
  1386  006E8C  0E01               	movlw	1
  1387  006E8E  6E04               	movwf	Lcd_Out2@x,c
  1388  006E90  0E7E               	movlw	high STR_2
  1389  006E92  6E06               	movwf	Lcd_Out2@buffer+1,c
  1390  006E94  0E6D               	movlw	low STR_2
  1391  006E96  6E05               	movwf	Lcd_Out2@buffer,c
  1392  006E98  0E02               	movlw	2
  1393  006E9A  ECA5  F02D         	call	_Lcd_Out2
  1394                           
  1395                           ;main.c: 57: tm_1s();
  1396  006E9E  EC1A  F02E         	call	_tm_1s	;wreg free
  1397  006EA2                     l3080:
  1398                           
  1399                           ;main.c: 60: }
  1400                           ;main.c: 62: if(B==1){
  1401  006EA2  0100               	movlb	0	; () banked
  1402  006EA4  05D4               	decf	_B& (0+255),w,b
  1403  006EA6  11D5               	iorwf	(_B+1)& (0+255),w,b
  1404  006EA8  A4D8               	btfss	status,2,c
  1405  006EAA  D12C               	goto	l3204
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;main.c: 63: Lcd_Init();
  1409  006EAC  EC76  F032         	call	_Lcd_Init	;wreg free
  1410                           
  1411                           ;main.c: 64: Lcd_Cmd(1);
  1412  006EB0  0E01               	movlw	1
  1413  006EB2  ECE3  F031         	call	_Lcd_Cmd
  1414                           
  1415                           ;main.c: 65: Lcd_Cmd(12);
  1416  006EB6  0E0C               	movlw	12
  1417  006EB8  ECE3  F031         	call	_Lcd_Cmd
  1418                           
  1419                           ;main.c: 66: Lcd_Out2(1,1,"=> Senoidal");
  1420  006EBC  0E01               	movlw	1
  1421  006EBE  6E04               	movwf	Lcd_Out2@x,c
  1422  006EC0  0E7E               	movlw	high STR_3
  1423  006EC2  6E06               	movwf	Lcd_Out2@buffer+1,c
  1424  006EC4  0EC1               	movlw	low STR_3
  1425  006EC6  6E05               	movwf	Lcd_Out2@buffer,c
  1426  006EC8  0E01               	movlw	1
  1427  006ECA  ECA5  F02D         	call	_Lcd_Out2
  1428                           
  1429                           ;main.c: 67: Lcd_Out2(2,1,"   Triangular");
  1430  006ECE  0E01               	movlw	1
  1431  006ED0  6E04               	movwf	Lcd_Out2@x,c
  1432  006ED2  0E7E               	movlw	high STR_4
  1433  006ED4  6E06               	movwf	Lcd_Out2@buffer+1,c
  1434  006ED6  0E99               	movlw	low STR_4
  1435  006ED8  6E05               	movwf	Lcd_Out2@buffer,c
  1436  006EDA  0E02               	movlw	2
  1437  006EDC  ECA5  F02D         	call	_Lcd_Out2
  1438                           
  1439                           ;main.c: 68: tm_1s();
  1440  006EE0  EC1A  F02E         	call	_tm_1s	;wreg free
  1441                           
  1442                           ;main.c: 70: if(PORTBbits.RB2==1){
  1443  006EE4  A481               	btfss	3969,2,c	;volatile
  1444  006EE6  D10E               	goto	l3204
  1445                           
  1446                           ;main.c: 71: w=0;
  1447  006EE8  0E00               	movlw	0
  1448  006EEA  0100               	movlb	0	; () banked
  1449  006EEC  6FE3               	movwf	(_w+1)& (0+255),b
  1450  006EEE  0E00               	movlw	0
  1451  006EF0  0100               	movlb	0	; () banked
  1452  006EF2  6FE2               	movwf	_w& (0+255),b
  1453  006EF4                     l3094:
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;main.c: 74: if(B==0){
  1457  006EF4  0100               	movlb	0	; () banked
  1458  006EF6  51D5               	movf	(_B+1)& (0+255),w,b
  1459  006EF8  11D4               	iorwf	_B& (0+255),w,b
  1460  006EFA  A4D8               	btfss	status,2,c
  1461  006EFC  D044               	goto	l3124
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;main.c: 75: Lcd_Init();
  1465  006EFE  EC76  F032         	call	_Lcd_Init	;wreg free
  1466                           
  1467                           ;main.c: 76: Lcd_Cmd(1);
  1468  006F02  0E01               	movlw	1
  1469  006F04  ECE3  F031         	call	_Lcd_Cmd
  1470                           
  1471                           ;main.c: 77: Lcd_Cmd(12);
  1472  006F08  0E0C               	movlw	12
  1473  006F0A  ECE3  F031         	call	_Lcd_Cmd
  1474                           
  1475                           ;main.c: 78: Lcd_Out2(1,1,"=> Sin 1");
  1476  006F0E  0E01               	movlw	1
  1477  006F10  6E04               	movwf	Lcd_Out2@x,c
  1478  006F12  0E7F               	movlw	high STR_5
  1479  006F14  6E06               	movwf	Lcd_Out2@buffer+1,c
  1480  006F16  0E4E               	movlw	low STR_5
  1481  006F18  6E05               	movwf	Lcd_Out2@buffer,c
  1482  006F1A  0E01               	movlw	1
  1483  006F1C  ECA5  F02D         	call	_Lcd_Out2
  1484                           
  1485                           ;main.c: 79: Lcd_Out2(2,1,"   Sin 2");
  1486  006F20  0E01               	movlw	1
  1487  006F22  6E04               	movwf	Lcd_Out2@x,c
  1488  006F24  0E7F               	movlw	high STR_6
  1489  006F26  6E06               	movwf	Lcd_Out2@buffer+1,c
  1490  006F28  0E57               	movlw	low STR_6
  1491  006F2A  6E05               	movwf	Lcd_Out2@buffer,c
  1492  006F2C  0E02               	movlw	2
  1493  006F2E  ECA5  F02D         	call	_Lcd_Out2
  1494                           
  1495                           ;main.c: 80: tm_1s();
  1496  006F32  EC1A  F02E         	call	_tm_1s	;wreg free
  1497                           
  1498                           ;main.c: 81: if(PORTBbits.RB2==1){
  1499  006F36  A481               	btfss	3969,2,c	;volatile
  1500  006F38  D026               	goto	l3124
  1501                           
  1502                           ;main.c: 82: q=0;
  1503  006F3A  0E00               	movlw	0
  1504  006F3C  0100               	movlb	0	; () banked
  1505  006F3E  6FDD               	movwf	(_q+1)& (0+255),b
  1506  006F40  0E00               	movlw	0
  1507  006F42  0100               	movlb	0	; () banked
  1508  006F44  6FDC               	movwf	_q& (0+255),b
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;main.c: 83: Lcd_Init();
  1512  006F46  EC76  F032         	call	_Lcd_Init	;wreg free
  1513                           
  1514                           ;main.c: 84: Lcd_Cmd(1);
  1515  006F4A  0E01               	movlw	1
  1516  006F4C  ECE3  F031         	call	_Lcd_Cmd
  1517                           
  1518                           ;main.c: 85: Lcd_Cmd(12);
  1519  006F50  0E0C               	movlw	12
  1520  006F52  ECE3  F031         	call	_Lcd_Cmd
  1521                           
  1522                           ;main.c: 86: Lcd_Out2(1,1," Sin 1");
  1523  006F56  0E01               	movlw	1
  1524  006F58  6E04               	movwf	Lcd_Out2@x,c
  1525  006F5A  0E7F               	movlw	high (STR_8+2)
  1526  006F5C  6E06               	movwf	Lcd_Out2@buffer+1,c
  1527  006F5E  0E47               	movlw	low (STR_8+2)
  1528  006F60  6E05               	movwf	Lcd_Out2@buffer,c
  1529  006F62  0E01               	movlw	1
  1530  006F64  ECA5  F02D         	call	_Lcd_Out2
  1531  006F68                     l3116:
  1532                           
  1533                           ;main.c: 88: SENO_1();
  1534  006F68  EC71  F02F         	call	_SENO_1	;wreg free
  1535                           
  1536                           ;main.c: 89: if(PORTBbits.RB3==1){
  1537  006F6C  A681               	btfss	3969,3,c	;volatile
  1538  006F6E  D006               	goto	l3122
  1539                           
  1540                           ;main.c: 90: q=1;
  1541  006F70  0E00               	movlw	0
  1542  006F72  0100               	movlb	0	; () banked
  1543  006F74  6FDD               	movwf	(_q+1)& (0+255),b
  1544  006F76  0E01               	movlw	1
  1545  006F78  0100               	movlb	0	; () banked
  1546  006F7A  6FDC               	movwf	_q& (0+255),b
  1547  006F7C                     l3122:
  1548                           
  1549                           ;main.c: 91: }
  1550                           ;main.c: 92: }while(q==0);
  1551  006F7C  0100               	movlb	0	; () banked
  1552  006F7E  51DD               	movf	(_q+1)& (0+255),w,b
  1553  006F80  11DC               	iorwf	_q& (0+255),w,b
  1554  006F82  B4D8               	btfsc	status,2,c
  1555  006F84  D7F1               	goto	l3116
  1556  006F86                     l3124:
  1557                           
  1558                           ;main.c: 93: }
  1559                           ;main.c: 94: }
  1560                           ;main.c: 96: if(B==1){
  1561  006F86  0100               	movlb	0	; () banked
  1562  006F88  05D4               	decf	_B& (0+255),w,b
  1563  006F8A  11D5               	iorwf	(_B+1)& (0+255),w,b
  1564  006F8C  A4D8               	btfss	status,2,c
  1565  006F8E  D044               	goto	l3154
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;main.c: 97: Lcd_Init();
  1569  006F90  EC76  F032         	call	_Lcd_Init	;wreg free
  1570                           
  1571                           ;main.c: 98: Lcd_Cmd(1);
  1572  006F94  0E01               	movlw	1
  1573  006F96  ECE3  F031         	call	_Lcd_Cmd
  1574                           
  1575                           ;main.c: 99: Lcd_Cmd(12);
  1576  006F9A  0E0C               	movlw	12
  1577  006F9C  ECE3  F031         	call	_Lcd_Cmd
  1578                           
  1579                           ;main.c: 100: Lcd_Out2(1,1,"   Sin 1");
  1580  006FA0  0E01               	movlw	1
  1581  006FA2  6E04               	movwf	Lcd_Out2@x,c
  1582  006FA4  0E7F               	movlw	high STR_8
  1583  006FA6  6E06               	movwf	Lcd_Out2@buffer+1,c
  1584  006FA8  0E45               	movlw	low STR_8
  1585  006FAA  6E05               	movwf	Lcd_Out2@buffer,c
  1586  006FAC  0E01               	movlw	1
  1587  006FAE  ECA5  F02D         	call	_Lcd_Out2
  1588                           
  1589                           ;main.c: 101: Lcd_Out2(2,1,"=> Sin 2");
  1590  006FB2  0E01               	movlw	1
  1591  006FB4  6E04               	movwf	Lcd_Out2@x,c
  1592  006FB6  0E7F               	movlw	high STR_9
  1593  006FB8  6E06               	movwf	Lcd_Out2@buffer+1,c
  1594  006FBA  0E60               	movlw	low STR_9
  1595  006FBC  6E05               	movwf	Lcd_Out2@buffer,c
  1596  006FBE  0E02               	movlw	2
  1597  006FC0  ECA5  F02D         	call	_Lcd_Out2
  1598                           
  1599                           ;main.c: 102: tm_1s();
  1600  006FC4  EC1A  F02E         	call	_tm_1s	;wreg free
  1601                           
  1602                           ;main.c: 103: if(PORTBbits.RB2==1){
  1603  006FC8  A481               	btfss	3969,2,c	;volatile
  1604  006FCA  D026               	goto	l3154
  1605                           
  1606                           ;main.c: 104: q=0;
  1607  006FCC  0E00               	movlw	0
  1608  006FCE  0100               	movlb	0	; () banked
  1609  006FD0  6FDD               	movwf	(_q+1)& (0+255),b
  1610  006FD2  0E00               	movlw	0
  1611  006FD4  0100               	movlb	0	; () banked
  1612  006FD6  6FDC               	movwf	_q& (0+255),b
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;main.c: 105: Lcd_Init();
  1616  006FD8  EC76  F032         	call	_Lcd_Init	;wreg free
  1617                           
  1618                           ;main.c: 106: Lcd_Cmd(1);
  1619  006FDC  0E01               	movlw	1
  1620  006FDE  ECE3  F031         	call	_Lcd_Cmd
  1621                           
  1622                           ;main.c: 107: Lcd_Cmd(12);
  1623  006FE2  0E0C               	movlw	12
  1624  006FE4  ECE3  F031         	call	_Lcd_Cmd
  1625                           
  1626                           ;main.c: 108: Lcd_Out2(1,1," Sin 2");
  1627  006FE8  0E01               	movlw	1
  1628  006FEA  6E04               	movwf	Lcd_Out2@x,c
  1629  006FEC  0E7F               	movlw	high (STR_6+2)
  1630  006FEE  6E06               	movwf	Lcd_Out2@buffer+1,c
  1631  006FF0  0E59               	movlw	low (STR_6+2)
  1632  006FF2  6E05               	movwf	Lcd_Out2@buffer,c
  1633  006FF4  0E01               	movlw	1
  1634  006FF6  ECA5  F02D         	call	_Lcd_Out2
  1635  006FFA                     l3146:
  1636                           
  1637                           ;main.c: 110: SENO_2();
  1638  006FFA  ECEE  F02F         	call	_SENO_2	;wreg free
  1639                           
  1640                           ;main.c: 111: if(PORTBbits.RB3==1){
  1641  006FFE  A681               	btfss	3969,3,c	;volatile
  1642  007000  D006               	goto	l3152
  1643                           
  1644                           ;main.c: 112: q=1;
  1645  007002  0E00               	movlw	0
  1646  007004  0100               	movlb	0	; () banked
  1647  007006  6FDD               	movwf	(_q+1)& (0+255),b
  1648  007008  0E01               	movlw	1
  1649  00700A  0100               	movlb	0	; () banked
  1650  00700C  6FDC               	movwf	_q& (0+255),b
  1651  00700E                     l3152:
  1652                           
  1653                           ;main.c: 113: }
  1654                           ;main.c: 114: }while(q==0);
  1655  00700E  0100               	movlb	0	; () banked
  1656  007010  51DD               	movf	(_q+1)& (0+255),w,b
  1657  007012  11DC               	iorwf	_q& (0+255),w,b
  1658  007014  B4D8               	btfsc	status,2,c
  1659  007016  D7F1               	goto	l3146
  1660  007018                     l3154:
  1661                           
  1662                           ;main.c: 115: }
  1663                           ;main.c: 116: }
  1664                           ;main.c: 118: if(B==2){
  1665  007018  0100               	movlb	0	; () banked
  1666  00701A  51D4               	movf	_B& (0+255),w,b
  1667  00701C  0A02               	xorlw	2
  1668  00701E  11D5               	iorwf	(_B+1)& (0+255),w,b
  1669  007020  A4D8               	btfss	status,2,c
  1670  007022  D03B               	goto	l136
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;main.c: 119: Lcd_Init();
  1674  007024  EC76  F032         	call	_Lcd_Init	;wreg free
  1675                           
  1676                           ;main.c: 120: Lcd_Cmd(1);
  1677  007028  0E01               	movlw	1
  1678  00702A  ECE3  F031         	call	_Lcd_Cmd
  1679                           
  1680                           ;main.c: 121: Lcd_Cmd(12);
  1681  00702E  0E0C               	movlw	12
  1682  007030  ECE3  F031         	call	_Lcd_Cmd
  1683                           
  1684                           ;main.c: 122: Lcd_Out2(1,1,"=> Sin 3");
  1685  007034  0E01               	movlw	1
  1686  007036  6E04               	movwf	Lcd_Out2@x,c
  1687  007038  0E7F               	movlw	high STR_11
  1688  00703A  6E06               	movwf	Lcd_Out2@buffer+1,c
  1689  00703C  0E69               	movlw	low STR_11
  1690  00703E  6E05               	movwf	Lcd_Out2@buffer,c
  1691  007040  0E01               	movlw	1
  1692  007042  ECA5  F02D         	call	_Lcd_Out2
  1693                           
  1694                           ;main.c: 123: tm_1s();
  1695  007046  EC1A  F02E         	call	_tm_1s	;wreg free
  1696                           
  1697                           ;main.c: 124: if(PORTBbits.RB2==1){
  1698  00704A  A481               	btfss	3969,2,c	;volatile
  1699  00704C  D026               	goto	l136
  1700                           
  1701                           ;main.c: 125: q=0;
  1702  00704E  0E00               	movlw	0
  1703  007050  0100               	movlb	0	; () banked
  1704  007052  6FDD               	movwf	(_q+1)& (0+255),b
  1705  007054  0E00               	movlw	0
  1706  007056  0100               	movlb	0	; () banked
  1707  007058  6FDC               	movwf	_q& (0+255),b
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;main.c: 126: Lcd_Init();
  1711  00705A  EC76  F032         	call	_Lcd_Init	;wreg free
  1712                           
  1713                           ;main.c: 127: Lcd_Cmd(1);
  1714  00705E  0E01               	movlw	1
  1715  007060  ECE3  F031         	call	_Lcd_Cmd
  1716                           
  1717                           ;main.c: 128: Lcd_Cmd(12);
  1718  007064  0E0C               	movlw	12
  1719  007066  ECE3  F031         	call	_Lcd_Cmd
  1720                           
  1721                           ;main.c: 129: Lcd_Out2(1,1," Sin 3");
  1722  00706A  0E01               	movlw	1
  1723  00706C  6E04               	movwf	Lcd_Out2@x,c
  1724  00706E  0E7F               	movlw	high (STR_11+2)
  1725  007070  6E06               	movwf	Lcd_Out2@buffer+1,c
  1726  007072  0E6B               	movlw	low (STR_11+2)
  1727  007074  6E05               	movwf	Lcd_Out2@buffer,c
  1728  007076  0E01               	movlw	1
  1729  007078  ECA5  F02D         	call	_Lcd_Out2
  1730  00707C                     l3174:
  1731                           
  1732                           ;main.c: 131: SENO_3();
  1733  00707C  EC6B  F030         	call	_SENO_3	;wreg free
  1734                           
  1735                           ;main.c: 132: if(PORTBbits.RB3==1){
  1736  007080  A681               	btfss	3969,3,c	;volatile
  1737  007082  D006               	goto	l3180
  1738                           
  1739                           ;main.c: 133: q=1;
  1740  007084  0E00               	movlw	0
  1741  007086  0100               	movlb	0	; () banked
  1742  007088  6FDD               	movwf	(_q+1)& (0+255),b
  1743  00708A  0E01               	movlw	1
  1744  00708C  0100               	movlb	0	; () banked
  1745  00708E  6FDC               	movwf	_q& (0+255),b
  1746  007090                     l3180:
  1747                           
  1748                           ;main.c: 134: }
  1749                           ;main.c: 135: }while(q==0);
  1750  007090  0100               	movlb	0	; () banked
  1751  007092  51DD               	movf	(_q+1)& (0+255),w,b
  1752  007094  11DC               	iorwf	_q& (0+255),w,b
  1753  007096  B4D8               	btfsc	status,2,c
  1754  007098  D7F1               	goto	l3174
  1755  00709A                     l136:
  1756                           
  1757                           ;main.c: 136: }
  1758                           ;main.c: 137: }
  1759                           ;main.c: 139: if(PORTBbits.RB0==1)
  1760  00709A  A081               	btfss	3969,0,c	;volatile
  1761  00709C  D00A               	goto	l3186
  1762                           
  1763                           ;main.c: 140: {
  1764                           ;main.c: 141: B++;
  1765  00709E  0100               	movlb	0	; () banked
  1766  0070A0  4BD4               	infsnz	_B& (0+255),f,b
  1767  0070A2  2BD5               	incf	(_B+1)& (0+255),f,b
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;main.c: 142: _delay((unsigned long)((10)*(4000000/4000.0)));
  1771  0070A4  0E0D               	movlw	13
  1772  0070A6  6E3C               	movwf	??_main& (0+255),c
  1773  0070A8  0EFC               	movlw	252
  1774  0070AA                     u3557:
  1775  0070AA  2EE8               	decfsz	wreg,f,c
  1776  0070AC  D7FE               	goto	u3557
  1777  0070AE  2E3C               	decfsz	??_main& (0+255),f,c
  1778  0070B0  D7FC               	goto	u3557
  1779  0070B2                     l3186:
  1780                           
  1781                           ;main.c: 143: }
  1782                           ;main.c: 145: if(PORTBbits.RB1==1)
  1783  0070B2  A281               	btfss	3969,1,c	;volatile
  1784  0070B4  D00B               	goto	l142
  1785                           
  1786                           ;main.c: 146: {
  1787                           ;main.c: 147: B--;
  1788  0070B6  0100               	movlb	0	; () banked
  1789  0070B8  07D4               	decf	_B& (0+255),f,b
  1790  0070BA  A0D8               	btfss	status,0,c
  1791  0070BC  07D5               	decf	(_B+1)& (0+255),f,b
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;main.c: 148: _delay((unsigned long)((10)*(4000000/4000.0)));
  1795  0070BE  0E0D               	movlw	13
  1796  0070C0  6E3C               	movwf	??_main& (0+255),c
  1797  0070C2  0EFC               	movlw	252
  1798  0070C4                     u3567:
  1799  0070C4  2EE8               	decfsz	wreg,f,c
  1800  0070C6  D7FE               	goto	u3567
  1801  0070C8  2E3C               	decfsz	??_main& (0+255),f,c
  1802  0070CA  D7FC               	goto	u3567
  1803  0070CC                     l142:
  1804                           
  1805                           ;main.c: 149: }
  1806                           ;main.c: 150: if(B>2){
  1807  0070CC  0E03               	movlw	3
  1808  0070CE  0100               	movlb	0	; () banked
  1809  0070D0  5DD4               	subwf	_B& (0+255),w,b
  1810  0070D2  0E00               	movlw	0
  1811  0070D4  0100               	movlb	0	; () banked
  1812  0070D6  59D5               	subwfb	(_B+1)& (0+255),w,b
  1813  0070D8  A0D8               	btfss	status,0,c
  1814  0070DA  D006               	goto	l3196
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;main.c: 151: B=0;
  1818  0070DC  0E00               	movlw	0
  1819  0070DE  0100               	movlb	0	; () banked
  1820  0070E0  6FD5               	movwf	(_B+1)& (0+255),b
  1821  0070E2  0E00               	movlw	0
  1822  0070E4  0100               	movlb	0	; () banked
  1823  0070E6  6FD4               	movwf	_B& (0+255),b
  1824  0070E8                     l3196:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;main.c: 156: }
  1828                           ;main.c: 157: if(PORTBbits.RB0==1 && PORTBbits.RB3==1 ){
  1829  0070E8  B081               	btfsc	3969,0,c	;volatile
  1830                           
  1831                           ; BSR set to: 0
  1832  0070EA  A681               	btfss	3969,3,c	;volatile
  1833  0070EC  D006               	goto	l3202
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;main.c: 158: w=1;
  1837  0070EE  0E00               	movlw	0
  1838  0070F0  0100               	movlb	0	; () banked
  1839  0070F2  6FE3               	movwf	(_w+1)& (0+255),b
  1840  0070F4  0E01               	movlw	1
  1841  0070F6  0100               	movlb	0	; () banked
  1842  0070F8  6FE2               	movwf	_w& (0+255),b
  1843  0070FA                     l3202:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;main.c: 159: }
  1847                           ;main.c: 160: }while(w==0);
  1848  0070FA  0100               	movlb	0	; () banked
  1849  0070FC  51E3               	movf	(_w+1)& (0+255),w,b
  1850  0070FE  11E2               	iorwf	_w& (0+255),w,b
  1851  007100  B4D8               	btfsc	status,2,c
  1852  007102  D6F8               	goto	l3094
  1853  007104                     l3204:
  1854                           
  1855                           ;main.c: 162: }
  1856                           ;main.c: 165: }
  1857                           ;main.c: 168: if(B==2){
  1858  007104  0100               	movlb	0	; () banked
  1859  007106  51D4               	movf	_B& (0+255),w,b
  1860  007108  0A02               	xorlw	2
  1861  00710A  11D5               	iorwf	(_B+1)& (0+255),w,b
  1862  00710C  A4D8               	btfss	status,2,c
  1863  00710E  D12C               	goto	l3328
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;main.c: 169: Lcd_Init();
  1867  007110  EC76  F032         	call	_Lcd_Init	;wreg free
  1868                           
  1869                           ;main.c: 170: Lcd_Cmd(1);
  1870  007114  0E01               	movlw	1
  1871  007116  ECE3  F031         	call	_Lcd_Cmd
  1872                           
  1873                           ;main.c: 171: Lcd_Cmd(12);
  1874  00711A  0E0C               	movlw	12
  1875  00711C  ECE3  F031         	call	_Lcd_Cmd
  1876                           
  1877                           ;main.c: 172: Lcd_Out2(1,1,"   Senoidal");
  1878  007120  0E01               	movlw	1
  1879  007122  6E04               	movwf	Lcd_Out2@x,c
  1880  007124  0E7E               	movlw	high STR_13
  1881  007126  6E06               	movwf	Lcd_Out2@buffer+1,c
  1882  007128  0EB5               	movlw	low STR_13
  1883  00712A  6E05               	movwf	Lcd_Out2@buffer,c
  1884  00712C  0E01               	movlw	1
  1885  00712E  ECA5  F02D         	call	_Lcd_Out2
  1886                           
  1887                           ;main.c: 173: Lcd_Out2(2,1,"=> Triangular");
  1888  007132  0E01               	movlw	1
  1889  007134  6E04               	movwf	Lcd_Out2@x,c
  1890  007136  0E7E               	movlw	high STR_14
  1891  007138  6E06               	movwf	Lcd_Out2@buffer+1,c
  1892  00713A  0EA7               	movlw	low STR_14
  1893  00713C  6E05               	movwf	Lcd_Out2@buffer,c
  1894  00713E  0E02               	movlw	2
  1895  007140  ECA5  F02D         	call	_Lcd_Out2
  1896                           
  1897                           ;main.c: 174: tm_1s();
  1898  007144  EC1A  F02E         	call	_tm_1s	;wreg free
  1899                           
  1900                           ;main.c: 177: if(PORTBbits.RB2==1){
  1901  007148  A481               	btfss	3969,2,c	;volatile
  1902  00714A  D10E               	goto	l3328
  1903                           
  1904                           ;main.c: 178: w=0;
  1905  00714C  0E00               	movlw	0
  1906  00714E  0100               	movlb	0	; () banked
  1907  007150  6FE3               	movwf	(_w+1)& (0+255),b
  1908  007152  0E00               	movlw	0
  1909  007154  0100               	movlb	0	; () banked
  1910  007156  6FE2               	movwf	_w& (0+255),b
  1911  007158                     l3218:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;main.c: 181: if(B==0){
  1915  007158  0100               	movlb	0	; () banked
  1916  00715A  51D5               	movf	(_B+1)& (0+255),w,b
  1917  00715C  11D4               	iorwf	_B& (0+255),w,b
  1918  00715E  A4D8               	btfss	status,2,c
  1919  007160  D044               	goto	l3248
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;main.c: 182: Lcd_Init();
  1923  007162  EC76  F032         	call	_Lcd_Init	;wreg free
  1924                           
  1925                           ;main.c: 183: Lcd_Cmd(1);
  1926  007166  0E01               	movlw	1
  1927  007168  ECE3  F031         	call	_Lcd_Cmd
  1928                           
  1929                           ;main.c: 184: Lcd_Cmd(12);
  1930  00716C  0E0C               	movlw	12
  1931  00716E  ECE3  F031         	call	_Lcd_Cmd
  1932                           
  1933                           ;main.c: 185: Lcd_Out2(1,1,"=> Trin 1");
  1934  007172  0E01               	movlw	1
  1935  007174  6E04               	movwf	Lcd_Out2@x,c
  1936  007176  0E7F               	movlw	high STR_15
  1937  007178  6E06               	movwf	Lcd_Out2@buffer+1,c
  1938  00717A  0E1D               	movlw	low STR_15
  1939  00717C  6E05               	movwf	Lcd_Out2@buffer,c
  1940  00717E  0E01               	movlw	1
  1941  007180  ECA5  F02D         	call	_Lcd_Out2
  1942                           
  1943                           ;main.c: 186: Lcd_Out2(2,1,"   Trin 2");
  1944  007184  0E01               	movlw	1
  1945  007186  6E04               	movwf	Lcd_Out2@x,c
  1946  007188  0E7F               	movlw	high STR_16
  1947  00718A  6E06               	movwf	Lcd_Out2@buffer+1,c
  1948  00718C  0E27               	movlw	low STR_16
  1949  00718E  6E05               	movwf	Lcd_Out2@buffer,c
  1950  007190  0E02               	movlw	2
  1951  007192  ECA5  F02D         	call	_Lcd_Out2
  1952                           
  1953                           ;main.c: 187: tm_1s();
  1954  007196  EC1A  F02E         	call	_tm_1s	;wreg free
  1955                           
  1956                           ;main.c: 188: if(PORTBbits.RB2==1){
  1957  00719A  A481               	btfss	3969,2,c	;volatile
  1958  00719C  D026               	goto	l3248
  1959                           
  1960                           ;main.c: 189: q=0;
  1961  00719E  0E00               	movlw	0
  1962  0071A0  0100               	movlb	0	; () banked
  1963  0071A2  6FDD               	movwf	(_q+1)& (0+255),b
  1964  0071A4  0E00               	movlw	0
  1965  0071A6  0100               	movlb	0	; () banked
  1966  0071A8  6FDC               	movwf	_q& (0+255),b
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;main.c: 190: Lcd_Init();
  1970  0071AA  EC76  F032         	call	_Lcd_Init	;wreg free
  1971                           
  1972                           ;main.c: 191: Lcd_Cmd(1);
  1973  0071AE  0E01               	movlw	1
  1974  0071B0  ECE3  F031         	call	_Lcd_Cmd
  1975                           
  1976                           ;main.c: 192: Lcd_Cmd(12);
  1977  0071B4  0E0C               	movlw	12
  1978  0071B6  ECE3  F031         	call	_Lcd_Cmd
  1979                           
  1980                           ;main.c: 193: Lcd_Out2(1,1," Trin 1");
  1981  0071BA  0E01               	movlw	1
  1982  0071BC  6E04               	movwf	Lcd_Out2@x,c
  1983  0071BE  0E7F               	movlw	high (STR_18+2)
  1984  0071C0  6E06               	movwf	Lcd_Out2@buffer+1,c
  1985  0071C2  0E15               	movlw	low (STR_18+2)
  1986  0071C4  6E05               	movwf	Lcd_Out2@buffer,c
  1987  0071C6  0E01               	movlw	1
  1988  0071C8  ECA5  F02D         	call	_Lcd_Out2
  1989  0071CC                     l3240:
  1990                           
  1991                           ;main.c: 195: TRI_1();
  1992  0071CC  ECE8  F030         	call	_TRI_1	;wreg free
  1993                           
  1994                           ;main.c: 196: if(PORTBbits.RB3==1){
  1995  0071D0  A681               	btfss	3969,3,c	;volatile
  1996  0071D2  D006               	goto	l3246
  1997                           
  1998                           ;main.c: 197: q=1;
  1999  0071D4  0E00               	movlw	0
  2000  0071D6  0100               	movlb	0	; () banked
  2001  0071D8  6FDD               	movwf	(_q+1)& (0+255),b
  2002  0071DA  0E01               	movlw	1
  2003  0071DC  0100               	movlb	0	; () banked
  2004  0071DE  6FDC               	movwf	_q& (0+255),b
  2005  0071E0                     l3246:
  2006                           
  2007                           ;main.c: 198: }
  2008                           ;main.c: 199: }while(q==0);
  2009  0071E0  0100               	movlb	0	; () banked
  2010  0071E2  51DD               	movf	(_q+1)& (0+255),w,b
  2011  0071E4  11DC               	iorwf	_q& (0+255),w,b
  2012  0071E6  B4D8               	btfsc	status,2,c
  2013  0071E8  D7F1               	goto	l3240
  2014  0071EA                     l3248:
  2015                           
  2016                           ;main.c: 200: }
  2017                           ;main.c: 201: }
  2018                           ;main.c: 203: if(B==1){
  2019  0071EA  0100               	movlb	0	; () banked
  2020  0071EC  05D4               	decf	_B& (0+255),w,b
  2021  0071EE  11D5               	iorwf	(_B+1)& (0+255),w,b
  2022  0071F0  A4D8               	btfss	status,2,c
  2023  0071F2  D044               	goto	l3278
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;main.c: 204: Lcd_Init();
  2027  0071F4  EC76  F032         	call	_Lcd_Init	;wreg free
  2028                           
  2029                           ;main.c: 205: Lcd_Cmd(1);
  2030  0071F8  0E01               	movlw	1
  2031  0071FA  ECE3  F031         	call	_Lcd_Cmd
  2032                           
  2033                           ;main.c: 206: Lcd_Cmd(12);
  2034  0071FE  0E0C               	movlw	12
  2035  007200  ECE3  F031         	call	_Lcd_Cmd
  2036                           
  2037                           ;main.c: 207: Lcd_Out2(1,1,"   Trin 1");
  2038  007204  0E01               	movlw	1
  2039  007206  6E04               	movwf	Lcd_Out2@x,c
  2040  007208  0E7F               	movlw	high STR_18
  2041  00720A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2042  00720C  0E13               	movlw	low STR_18
  2043  00720E  6E05               	movwf	Lcd_Out2@buffer,c
  2044  007210  0E01               	movlw	1
  2045  007212  ECA5  F02D         	call	_Lcd_Out2
  2046                           
  2047                           ;main.c: 208: Lcd_Out2(2,1,"=> Trin 2");
  2048  007216  0E01               	movlw	1
  2049  007218  6E04               	movwf	Lcd_Out2@x,c
  2050  00721A  0E7F               	movlw	high STR_19
  2051  00721C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2052  00721E  0E31               	movlw	low STR_19
  2053  007220  6E05               	movwf	Lcd_Out2@buffer,c
  2054  007222  0E02               	movlw	2
  2055  007224  ECA5  F02D         	call	_Lcd_Out2
  2056                           
  2057                           ;main.c: 209: tm_1s();
  2058  007228  EC1A  F02E         	call	_tm_1s	;wreg free
  2059                           
  2060                           ;main.c: 210: if(PORTBbits.RB2==1){
  2061  00722C  A481               	btfss	3969,2,c	;volatile
  2062  00722E  D026               	goto	l3278
  2063                           
  2064                           ;main.c: 211: q=0;
  2065  007230  0E00               	movlw	0
  2066  007232  0100               	movlb	0	; () banked
  2067  007234  6FDD               	movwf	(_q+1)& (0+255),b
  2068  007236  0E00               	movlw	0
  2069  007238  0100               	movlb	0	; () banked
  2070  00723A  6FDC               	movwf	_q& (0+255),b
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;main.c: 212: Lcd_Init();
  2074  00723C  EC76  F032         	call	_Lcd_Init	;wreg free
  2075                           
  2076                           ;main.c: 213: Lcd_Cmd(1);
  2077  007240  0E01               	movlw	1
  2078  007242  ECE3  F031         	call	_Lcd_Cmd
  2079                           
  2080                           ;main.c: 214: Lcd_Cmd(12);
  2081  007246  0E0C               	movlw	12
  2082  007248  ECE3  F031         	call	_Lcd_Cmd
  2083                           
  2084                           ;main.c: 215: Lcd_Out2(1,1," Trin 2");
  2085  00724C  0E01               	movlw	1
  2086  00724E  6E04               	movwf	Lcd_Out2@x,c
  2087  007250  0E7F               	movlw	high (STR_16+2)
  2088  007252  6E06               	movwf	Lcd_Out2@buffer+1,c
  2089  007254  0E29               	movlw	low (STR_16+2)
  2090  007256  6E05               	movwf	Lcd_Out2@buffer,c
  2091  007258  0E01               	movlw	1
  2092  00725A  ECA5  F02D         	call	_Lcd_Out2
  2093  00725E                     l3270:
  2094                           
  2095                           ;main.c: 217: TRI_2();
  2096  00725E  ECA0  F033         	call	_TRI_2	;wreg free
  2097                           
  2098                           ;main.c: 218: if(PORTBbits.RB3==1){
  2099  007262  A681               	btfss	3969,3,c	;volatile
  2100  007264  D006               	goto	l3276
  2101                           
  2102                           ;main.c: 219: q=1;
  2103  007266  0E00               	movlw	0
  2104  007268  0100               	movlb	0	; () banked
  2105  00726A  6FDD               	movwf	(_q+1)& (0+255),b
  2106  00726C  0E01               	movlw	1
  2107  00726E  0100               	movlb	0	; () banked
  2108  007270  6FDC               	movwf	_q& (0+255),b
  2109  007272                     l3276:
  2110                           
  2111                           ;main.c: 220: }
  2112                           ;main.c: 221: }while(q==0);
  2113  007272  0100               	movlb	0	; () banked
  2114  007274  51DD               	movf	(_q+1)& (0+255),w,b
  2115  007276  11DC               	iorwf	_q& (0+255),w,b
  2116  007278  B4D8               	btfsc	status,2,c
  2117  00727A  D7F1               	goto	l3270
  2118  00727C                     l3278:
  2119                           
  2120                           ;main.c: 222: }
  2121                           ;main.c: 223: }
  2122                           ;main.c: 225: if(B==2){
  2123  00727C  0100               	movlb	0	; () banked
  2124  00727E  51D4               	movf	_B& (0+255),w,b
  2125  007280  0A02               	xorlw	2
  2126  007282  11D5               	iorwf	(_B+1)& (0+255),w,b
  2127  007284  A4D8               	btfss	status,2,c
  2128  007286  D03B               	goto	l160
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;main.c: 226: Lcd_Init();
  2132  007288  EC76  F032         	call	_Lcd_Init	;wreg free
  2133                           
  2134                           ;main.c: 227: Lcd_Cmd(1);
  2135  00728C  0E01               	movlw	1
  2136  00728E  ECE3  F031         	call	_Lcd_Cmd
  2137                           
  2138                           ;main.c: 228: Lcd_Cmd(12);
  2139  007292  0E0C               	movlw	12
  2140  007294  ECE3  F031         	call	_Lcd_Cmd
  2141                           
  2142                           ;main.c: 229: Lcd_Out2(1,1,"=> Trin 3");
  2143  007298  0E01               	movlw	1
  2144  00729A  6E04               	movwf	Lcd_Out2@x,c
  2145  00729C  0E7F               	movlw	high STR_21
  2146  00729E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2147  0072A0  0E3B               	movlw	low STR_21
  2148  0072A2  6E05               	movwf	Lcd_Out2@buffer,c
  2149  0072A4  0E01               	movlw	1
  2150  0072A6  ECA5  F02D         	call	_Lcd_Out2
  2151                           
  2152                           ;main.c: 230: tm_1s();
  2153  0072AA  EC1A  F02E         	call	_tm_1s	;wreg free
  2154                           
  2155                           ;main.c: 231: if(PORTBbits.RB2==1){
  2156  0072AE  A481               	btfss	3969,2,c	;volatile
  2157  0072B0  D026               	goto	l160
  2158                           
  2159                           ;main.c: 232: q=0;
  2160  0072B2  0E00               	movlw	0
  2161  0072B4  0100               	movlb	0	; () banked
  2162  0072B6  6FDD               	movwf	(_q+1)& (0+255),b
  2163  0072B8  0E00               	movlw	0
  2164  0072BA  0100               	movlb	0	; () banked
  2165  0072BC  6FDC               	movwf	_q& (0+255),b
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;main.c: 233: Lcd_Init();
  2169  0072BE  EC76  F032         	call	_Lcd_Init	;wreg free
  2170                           
  2171                           ;main.c: 234: Lcd_Cmd(1);
  2172  0072C2  0E01               	movlw	1
  2173  0072C4  ECE3  F031         	call	_Lcd_Cmd
  2174                           
  2175                           ;main.c: 235: Lcd_Cmd(12);
  2176  0072C8  0E0C               	movlw	12
  2177  0072CA  ECE3  F031         	call	_Lcd_Cmd
  2178                           
  2179                           ;main.c: 236: Lcd_Out2(1,1," Trin 3");
  2180  0072CE  0E01               	movlw	1
  2181  0072D0  6E04               	movwf	Lcd_Out2@x,c
  2182  0072D2  0E7F               	movlw	high (STR_21+2)
  2183  0072D4  6E06               	movwf	Lcd_Out2@buffer+1,c
  2184  0072D6  0E3D               	movlw	low (STR_21+2)
  2185  0072D8  6E05               	movwf	Lcd_Out2@buffer,c
  2186  0072DA  0E01               	movlw	1
  2187  0072DC  ECA5  F02D         	call	_Lcd_Out2
  2188  0072E0                     l3298:
  2189                           
  2190                           ;main.c: 238: TRI_3();
  2191  0072E0  EC45  F034         	call	_TRI_3	;wreg free
  2192                           
  2193                           ;main.c: 239: if(PORTBbits.RB3==1){
  2194  0072E4  A681               	btfss	3969,3,c	;volatile
  2195  0072E6  D006               	goto	l3304
  2196                           
  2197                           ;main.c: 240: q=1;
  2198  0072E8  0E00               	movlw	0
  2199  0072EA  0100               	movlb	0	; () banked
  2200  0072EC  6FDD               	movwf	(_q+1)& (0+255),b
  2201  0072EE  0E01               	movlw	1
  2202  0072F0  0100               	movlb	0	; () banked
  2203  0072F2  6FDC               	movwf	_q& (0+255),b
  2204  0072F4                     l3304:
  2205                           
  2206                           ;main.c: 241: }
  2207                           ;main.c: 242: }while(q==0);
  2208  0072F4  0100               	movlb	0	; () banked
  2209  0072F6  51DD               	movf	(_q+1)& (0+255),w,b
  2210  0072F8  11DC               	iorwf	_q& (0+255),w,b
  2211  0072FA  B4D8               	btfsc	status,2,c
  2212  0072FC  D7F1               	goto	l3298
  2213  0072FE                     l160:
  2214                           
  2215                           ;main.c: 243: }
  2216                           ;main.c: 244: }
  2217                           ;main.c: 246: if(PORTBbits.RB0==1)
  2218  0072FE  A081               	btfss	3969,0,c	;volatile
  2219  007300  D00A               	goto	l3310
  2220                           
  2221                           ;main.c: 247: {
  2222                           ;main.c: 248: B++;
  2223  007302  0100               	movlb	0	; () banked
  2224  007304  4BD4               	infsnz	_B& (0+255),f,b
  2225  007306  2BD5               	incf	(_B+1)& (0+255),f,b
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;main.c: 249: _delay((unsigned long)((10)*(4000000/4000.0)));
  2229  007308  0E0D               	movlw	13
  2230  00730A  6E3C               	movwf	??_main& (0+255),c
  2231  00730C  0EFC               	movlw	252
  2232  00730E                     u3577:
  2233  00730E  2EE8               	decfsz	wreg,f,c
  2234  007310  D7FE               	goto	u3577
  2235  007312  2E3C               	decfsz	??_main& (0+255),f,c
  2236  007314  D7FC               	goto	u3577
  2237  007316                     l3310:
  2238                           
  2239                           ;main.c: 250: }
  2240                           ;main.c: 252: if(PORTBbits.RB1==1)
  2241  007316  A281               	btfss	3969,1,c	;volatile
  2242  007318  D00B               	goto	l166
  2243                           
  2244                           ;main.c: 253: {
  2245                           ;main.c: 254: B--;
  2246  00731A  0100               	movlb	0	; () banked
  2247  00731C  07D4               	decf	_B& (0+255),f,b
  2248  00731E  A0D8               	btfss	status,0,c
  2249  007320  07D5               	decf	(_B+1)& (0+255),f,b
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;main.c: 255: _delay((unsigned long)((10)*(4000000/4000.0)));
  2253  007322  0E0D               	movlw	13
  2254  007324  6E3C               	movwf	??_main& (0+255),c
  2255  007326  0EFC               	movlw	252
  2256  007328                     u3587:
  2257  007328  2EE8               	decfsz	wreg,f,c
  2258  00732A  D7FE               	goto	u3587
  2259  00732C  2E3C               	decfsz	??_main& (0+255),f,c
  2260  00732E  D7FC               	goto	u3587
  2261  007330                     l166:
  2262                           
  2263                           ;main.c: 256: }
  2264                           ;main.c: 257: if(B>2){
  2265  007330  0E03               	movlw	3
  2266  007332  0100               	movlb	0	; () banked
  2267  007334  5DD4               	subwf	_B& (0+255),w,b
  2268  007336  0E00               	movlw	0
  2269  007338  0100               	movlb	0	; () banked
  2270  00733A  59D5               	subwfb	(_B+1)& (0+255),w,b
  2271  00733C  A0D8               	btfss	status,0,c
  2272  00733E  D006               	goto	l3320
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;main.c: 258: B=0;
  2276  007340  0E00               	movlw	0
  2277  007342  0100               	movlb	0	; () banked
  2278  007344  6FD5               	movwf	(_B+1)& (0+255),b
  2279  007346  0E00               	movlw	0
  2280  007348  0100               	movlb	0	; () banked
  2281  00734A  6FD4               	movwf	_B& (0+255),b
  2282  00734C                     l3320:
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;main.c: 263: }
  2286                           ;main.c: 264: if(PORTBbits.RB0==1 && PORTBbits.RB3==1 ){
  2287  00734C  B081               	btfsc	3969,0,c	;volatile
  2288                           
  2289                           ; BSR set to: 0
  2290  00734E  A681               	btfss	3969,3,c	;volatile
  2291  007350  D006               	goto	l3326
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;main.c: 265: w=1;
  2295  007352  0E00               	movlw	0
  2296  007354  0100               	movlb	0	; () banked
  2297  007356  6FE3               	movwf	(_w+1)& (0+255),b
  2298  007358  0E01               	movlw	1
  2299  00735A  0100               	movlb	0	; () banked
  2300  00735C  6FE2               	movwf	_w& (0+255),b
  2301  00735E                     l3326:
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;main.c: 266: }
  2305                           ;main.c: 267: }while(w==0);
  2306  00735E  0100               	movlb	0	; () banked
  2307  007360  51E3               	movf	(_w+1)& (0+255),w,b
  2308  007362  11E2               	iorwf	_w& (0+255),w,b
  2309  007364  B4D8               	btfsc	status,2,c
  2310  007366  D6F8               	goto	l3218
  2311  007368                     l3328:
  2312                           
  2313                           ;main.c: 269: }
  2314                           ;main.c: 271: }
  2315                           ;main.c: 273: if(B==3){
  2316  007368  0100               	movlb	0	; () banked
  2317  00736A  51D4               	movf	_B& (0+255),w,b
  2318  00736C  0A03               	xorlw	3
  2319  00736E  11D5               	iorwf	(_B+1)& (0+255),w,b
  2320  007370  A4D8               	btfss	status,2,c
  2321  007372  EF25  F03F         	goto	l3758
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;main.c: 274: Lcd_Init();
  2325  007376  EC76  F032         	call	_Lcd_Init	;wreg free
  2326                           
  2327                           ;main.c: 275: Lcd_Cmd(1);
  2328  00737A  0E01               	movlw	1
  2329  00737C  ECE3  F031         	call	_Lcd_Cmd
  2330                           
  2331                           ;main.c: 276: Lcd_Cmd(12);
  2332  007380  0E0C               	movlw	12
  2333  007382  ECE3  F031         	call	_Lcd_Cmd
  2334                           
  2335                           ;main.c: 277: Lcd_Out2(1,1,"=> PWM");
  2336  007386  0E01               	movlw	1
  2337  007388  6E04               	movwf	Lcd_Out2@x,c
  2338  00738A  0E7F               	movlw	high STR_23
  2339  00738C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2340  00738E  0E8D               	movlw	low STR_23
  2341  007390  6E05               	movwf	Lcd_Out2@buffer,c
  2342  007392  0E01               	movlw	1
  2343  007394  ECA5  F02D         	call	_Lcd_Out2
  2344                           
  2345                           ;main.c: 278: tm_1s();
  2346  007398  EC1A  F02E         	call	_tm_1s	;wreg free
  2347                           
  2348                           ;main.c: 281: if(PORTBbits.RB4==1){
  2349  00739C  A881               	btfss	3969,4,c	;volatile
  2350  00739E  EF25  F03F         	goto	l3758
  2351  0073A2                     l3338:
  2352                           
  2353                           ;main.c: 283: w=0;
  2354  0073A2  0E00               	movlw	0
  2355  0073A4  0100               	movlb	0	; () banked
  2356  0073A6  6FE3               	movwf	(_w+1)& (0+255),b
  2357  0073A8  0E00               	movlw	0
  2358  0073AA  0100               	movlb	0	; () banked
  2359  0073AC  6FE2               	movwf	_w& (0+255),b
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;main.c: 284: if(B==0){
  2363  0073AE  0100               	movlb	0	; () banked
  2364  0073B0  51D5               	movf	(_B+1)& (0+255),w,b
  2365  0073B2  11D4               	iorwf	_B& (0+255),w,b
  2366  0073B4  A4D8               	btfss	status,2,c
  2367  0073B6  D01C               	goto	l3350
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;main.c: 285: Lcd_Init();
  2371  0073B8  EC76  F032         	call	_Lcd_Init	;wreg free
  2372                           
  2373                           ;main.c: 286: Lcd_Cmd(1);
  2374  0073BC  0E01               	movlw	1
  2375  0073BE  ECE3  F031         	call	_Lcd_Cmd
  2376                           
  2377                           ;main.c: 287: Lcd_Cmd(12);
  2378  0073C2  0E0C               	movlw	12
  2379  0073C4  ECE3  F031         	call	_Lcd_Cmd
  2380                           
  2381                           ;main.c: 288: Lcd_Out2(1,1,"   Ingresar");
  2382  0073C8  0E01               	movlw	1
  2383  0073CA  6E04               	movwf	Lcd_Out2@x,c
  2384  0073CC  0E7E               	movlw	high STR_24
  2385  0073CE  6E06               	movwf	Lcd_Out2@buffer+1,c
  2386  0073D0  0ECD               	movlw	low STR_24
  2387  0073D2  6E05               	movwf	Lcd_Out2@buffer,c
  2388  0073D4  0E01               	movlw	1
  2389  0073D6  ECA5  F02D         	call	_Lcd_Out2
  2390                           
  2391                           ;main.c: 289: Lcd_Out2(2,1,"   Comenzar");
  2392  0073DA  0E01               	movlw	1
  2393  0073DC  6E04               	movwf	Lcd_Out2@x,c
  2394  0073DE  0E7E               	movlw	high STR_25
  2395  0073E0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2396  0073E2  0EE5               	movlw	low STR_25
  2397  0073E4  6E05               	movwf	Lcd_Out2@buffer,c
  2398  0073E6  0E02               	movlw	2
  2399  0073E8  ECA5  F02D         	call	_Lcd_Out2
  2400                           
  2401                           ;main.c: 290: tm_1s();
  2402  0073EC  EC1A  F02E         	call	_tm_1s	;wreg free
  2403  0073F0                     l3350:
  2404                           
  2405                           ;main.c: 291: }
  2406                           ;main.c: 292: if(B==1){
  2407  0073F0  0100               	movlb	0	; () banked
  2408  0073F2  05D4               	decf	_B& (0+255),w,b
  2409  0073F4  11D5               	iorwf	(_B+1)& (0+255),w,b
  2410  0073F6  A4D8               	btfss	status,2,c
  2411  0073F8  EF3A  F03E         	goto	l3686
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;main.c: 293: Lcd_Init();
  2415  0073FC  EC76  F032         	call	_Lcd_Init	;wreg free
  2416                           
  2417                           ;main.c: 294: Lcd_Cmd(1);
  2418  007400  0E01               	movlw	1
  2419  007402  ECE3  F031         	call	_Lcd_Cmd
  2420                           
  2421                           ;main.c: 295: Lcd_Cmd(12);
  2422  007406  0E0C               	movlw	12
  2423  007408  ECE3  F031         	call	_Lcd_Cmd
  2424                           
  2425                           ;main.c: 296: Lcd_Out2(1,1,"=> Ingresar");
  2426  00740C  0E01               	movlw	1
  2427  00740E  6E04               	movwf	Lcd_Out2@x,c
  2428  007410  0E7E               	movlw	high STR_26
  2429  007412  6E06               	movwf	Lcd_Out2@buffer+1,c
  2430  007414  0ED9               	movlw	low STR_26
  2431  007416  6E05               	movwf	Lcd_Out2@buffer,c
  2432  007418  0E01               	movlw	1
  2433  00741A  ECA5  F02D         	call	_Lcd_Out2
  2434                           
  2435                           ;main.c: 297: Lcd_Out2(2,1,"   Comenzar");
  2436  00741E  0E01               	movlw	1
  2437  007420  6E04               	movwf	Lcd_Out2@x,c
  2438  007422  0E7E               	movlw	high STR_25
  2439  007424  6E06               	movwf	Lcd_Out2@buffer+1,c
  2440  007426  0EE5               	movlw	low STR_25
  2441  007428  6E05               	movwf	Lcd_Out2@buffer,c
  2442  00742A  0E02               	movlw	2
  2443  00742C  ECA5  F02D         	call	_Lcd_Out2
  2444                           
  2445                           ;main.c: 298: tm_1s();
  2446  007430  EC1A  F02E         	call	_tm_1s	;wreg free
  2447                           
  2448                           ;main.c: 301: if(PORTBbits.RB4==1){
  2449  007434  A881               	btfss	3969,4,c	;volatile
  2450  007436  EF3A  F03E         	goto	l3686
  2451  00743A                     l3362:
  2452                           
  2453                           ;main.c: 303: e=0;
  2454  00743A  0E00               	movlw	0
  2455  00743C  0100               	movlb	0	; () banked
  2456  00743E  6FD9               	movwf	(_e+1)& (0+255),b
  2457  007440  0E00               	movlw	0
  2458  007442  0100               	movlb	0	; () banked
  2459  007444  6FD8               	movwf	_e& (0+255),b
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;main.c: 304: if(B==0){
  2463  007446  0100               	movlb	0	; () banked
  2464  007448  51D5               	movf	(_B+1)& (0+255),w,b
  2465  00744A  11D4               	iorwf	_B& (0+255),w,b
  2466  00744C  A4D8               	btfss	status,2,c
  2467  00744E  D01C               	goto	l3374
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;main.c: 305: Lcd_Init();
  2471  007450  EC76  F032         	call	_Lcd_Init	;wreg free
  2472                           
  2473                           ;main.c: 306: Lcd_Cmd(1);
  2474  007454  0E01               	movlw	1
  2475  007456  ECE3  F031         	call	_Lcd_Cmd
  2476                           
  2477                           ;main.c: 307: Lcd_Cmd(12);
  2478  00745A  0E0C               	movlw	12
  2479  00745C  ECE3  F031         	call	_Lcd_Cmd
  2480                           
  2481                           ;main.c: 308: Lcd_Out2(1,1,"   Frecuencia");
  2482  007460  0E01               	movlw	1
  2483  007462  6E04               	movwf	Lcd_Out2@x,c
  2484  007464  0E7E               	movlw	high STR_28
  2485  007466  6E06               	movwf	Lcd_Out2@buffer+1,c
  2486  007468  0E7D               	movlw	low STR_28
  2487  00746A  6E05               	movwf	Lcd_Out2@buffer,c
  2488  00746C  0E01               	movlw	1
  2489  00746E  ECA5  F02D         	call	_Lcd_Out2
  2490                           
  2491                           ;main.c: 309: Lcd_Out2(2,1,"   Ciclo");
  2492  007472  0E01               	movlw	1
  2493  007474  6E04               	movwf	Lcd_Out2@x,c
  2494  007476  0E7F               	movlw	high STR_29
  2495  007478  6E06               	movwf	Lcd_Out2@buffer+1,c
  2496  00747A  0E72               	movlw	low STR_29
  2497  00747C  6E05               	movwf	Lcd_Out2@buffer,c
  2498  00747E  0E02               	movlw	2
  2499  007480  ECA5  F02D         	call	_Lcd_Out2
  2500                           
  2501                           ;main.c: 310: tm_1s();
  2502  007484  EC1A  F02E         	call	_tm_1s	;wreg free
  2503  007488                     l3374:
  2504                           
  2505                           ;main.c: 312: }
  2506                           ;main.c: 313: if(B==1){
  2507  007488  0100               	movlb	0	; () banked
  2508  00748A  05D4               	decf	_B& (0+255),w,b
  2509  00748C  11D5               	iorwf	(_B+1)& (0+255),w,b
  2510  00748E  A4D8               	btfss	status,2,c
  2511  007490  D0AD               	goto	l3442
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;main.c: 315: Lcd_Init();
  2515  007492  EC76  F032         	call	_Lcd_Init	;wreg free
  2516                           
  2517                           ;main.c: 316: Lcd_Cmd(1);
  2518  007496  0E01               	movlw	1
  2519  007498  ECE3  F031         	call	_Lcd_Cmd
  2520                           
  2521                           ;main.c: 317: Lcd_Cmd(12);
  2522  00749C  0E0C               	movlw	12
  2523  00749E  ECE3  F031         	call	_Lcd_Cmd
  2524                           
  2525                           ;main.c: 318: Lcd_Out2(1,1,"=> Frecuencia");
  2526  0074A2  0E01               	movlw	1
  2527  0074A4  6E04               	movwf	Lcd_Out2@x,c
  2528  0074A6  0E7E               	movlw	high STR_30
  2529  0074A8  6E06               	movwf	Lcd_Out2@buffer+1,c
  2530  0074AA  0E8B               	movlw	low STR_30
  2531  0074AC  6E05               	movwf	Lcd_Out2@buffer,c
  2532  0074AE  0E01               	movlw	1
  2533  0074B0  ECA5  F02D         	call	_Lcd_Out2
  2534                           
  2535                           ;main.c: 319: Lcd_Out2(2,1,"   Ciclo");
  2536  0074B4  0E01               	movlw	1
  2537  0074B6  6E04               	movwf	Lcd_Out2@x,c
  2538  0074B8  0E7F               	movlw	high STR_29
  2539  0074BA  6E06               	movwf	Lcd_Out2@buffer+1,c
  2540  0074BC  0E72               	movlw	low STR_29
  2541  0074BE  6E05               	movwf	Lcd_Out2@buffer,c
  2542  0074C0  0E02               	movlw	2
  2543  0074C2  ECA5  F02D         	call	_Lcd_Out2
  2544                           
  2545                           ;main.c: 320: tm_1s();
  2546  0074C6  EC1A  F02E         	call	_tm_1s	;wreg free
  2547                           
  2548                           ;main.c: 323: if(PORTBbits.RB4==1){
  2549  0074CA  A881               	btfss	3969,4,c	;volatile
  2550  0074CC  D08F               	goto	l3442
  2551                           
  2552                           ;main.c: 324: r=0;
  2553  0074CE  0E00               	movlw	0
  2554  0074D0  0100               	movlb	0	; () banked
  2555  0074D2  6FDF               	movwf	(_r+1)& (0+255),b
  2556  0074D4  0E00               	movlw	0
  2557  0074D6  0100               	movlb	0	; () banked
  2558  0074D8  6FDE               	movwf	_r& (0+255),b
  2559  0074DA                     l3388:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;main.c: 326: Lcd_Init();
  2563  0074DA  EC76  F032         	call	_Lcd_Init	;wreg free
  2564                           
  2565                           ;main.c: 327: Lcd_Cmd(1);
  2566  0074DE  0E01               	movlw	1
  2567  0074E0  ECE3  F031         	call	_Lcd_Cmd
  2568                           
  2569                           ;main.c: 328: Lcd_Cmd(12);
  2570  0074E4  0E0C               	movlw	12
  2571  0074E6  ECE3  F031         	call	_Lcd_Cmd
  2572                           
  2573                           ;main.c: 329: Lcd_Out2(1,1,"  000 Hz");
  2574  0074EA  0E01               	movlw	1
  2575  0074EC  6E04               	movwf	Lcd_Out2@x,c
  2576  0074EE  0E7F               	movlw	high STR_32
  2577  0074F0  6E06               	movwf	Lcd_Out2@buffer+1,c
  2578  0074F2  0E84               	movlw	low STR_32
  2579  0074F4  6E05               	movwf	Lcd_Out2@buffer,c
  2580  0074F6  0E01               	movlw	1
  2581  0074F8  ECA5  F02D         	call	_Lcd_Out2
  2582                           
  2583                           ;main.c: 330: tm_1s();
  2584  0074FC  EC1A  F02E         	call	_tm_1s	;wreg free
  2585                           
  2586                           ;main.c: 332: if(PORTBbits.RB3==1){
  2587  007500  A681               	btfss	3969,3,c	;volatile
  2588  007502  D05F               	goto	l3430
  2589                           
  2590                           ;main.c: 333: A++;
  2591  007504  0100               	movlb	0	; () banked
  2592  007506  2BD3               	incf	main@A& (0+255),f,b
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;main.c: 334: lcd_goto(2,1);
  2596  007508  0E00               	movlw	0
  2597  00750A  6E05               	movwf	lcd_goto@x+1,c
  2598  00750C  0E02               	movlw	2
  2599  00750E  6E04               	movwf	lcd_goto@x,c
  2600  007510  0E00               	movlw	0
  2601  007512  6E07               	movwf	lcd_goto@y+1,c
  2602  007514  0E01               	movlw	1
  2603  007516  6E06               	movwf	lcd_goto@y,c
  2604  007518  ECF1  F02C         	call	_lcd_goto	;wreg free
  2605                           
  2606                           ;main.c: 335: Lcd_Chr_CP(A);
  2607  00751C  0100               	movlb	0	; () banked
  2608  00751E  51D3               	movf	main@A& (0+255),w,b
  2609  007520  EC0A  F033         	call	_Lcd_Chr_CP
  2610                           
  2611                           ;main.c: 336: tm_1s();
  2612  007524  EC1A  F02E         	call	_tm_1s	;wreg free
  2613                           
  2614                           ;main.c: 337: switch(A){
  2615  007528  D02F               	goto	l3428
  2616  00752A                     l3408:
  2617  00752A  0E03               	movlw	3
  2618  00752C  0100               	movlb	0	; () banked
  2619  00752E  6FD7               	movwf	(_M+1)& (0+255),b
  2620  007530  0EE8               	movlw	232
  2621  007532  D027               	goto	L8
  2622  007534                     l3410:
  2623                           
  2624                           ; BSR set to: 0
  2625  007534  0E07               	movlw	7
  2626  007536  0100               	movlb	0	; () banked
  2627  007538  6FD7               	movwf	(_M+1)& (0+255),b
  2628  00753A  0ED0               	movlw	208
  2629  00753C  D022               	goto	L8
  2630  00753E                     l3412:
  2631                           
  2632                           ; BSR set to: 0
  2633  00753E  0E0B               	movlw	11
  2634  007540  0100               	movlb	0	; () banked
  2635  007542  6FD7               	movwf	(_M+1)& (0+255),b
  2636  007544  0EB8               	movlw	184
  2637  007546  D01D               	goto	L8
  2638  007548                     l3414:
  2639                           
  2640                           ; BSR set to: 0
  2641  007548  0E0F               	movlw	15
  2642  00754A  0100               	movlb	0	; () banked
  2643  00754C  6FD7               	movwf	(_M+1)& (0+255),b
  2644  00754E  0EA0               	movlw	160
  2645  007550  D018               	goto	L8
  2646  007552                     l3416:
  2647                           
  2648                           ; BSR set to: 0
  2649  007552  0E13               	movlw	19
  2650  007554  0100               	movlb	0	; () banked
  2651  007556  6FD7               	movwf	(_M+1)& (0+255),b
  2652  007558  0E88               	movlw	136
  2653  00755A  D013               	goto	L8
  2654  00755C                     l3418:
  2655                           
  2656                           ; BSR set to: 0
  2657  00755C  0E17               	movlw	23
  2658  00755E  0100               	movlb	0	; () banked
  2659  007560  6FD7               	movwf	(_M+1)& (0+255),b
  2660  007562  0E70               	movlw	112
  2661  007564  D00E               	goto	L8
  2662  007566                     l3420:
  2663                           
  2664                           ; BSR set to: 0
  2665  007566  0E1B               	movlw	27
  2666  007568  0100               	movlb	0	; () banked
  2667  00756A  6FD7               	movwf	(_M+1)& (0+255),b
  2668  00756C  0E58               	movlw	88
  2669  00756E  D009               	goto	L8
  2670  007570                     l3422:
  2671                           
  2672                           ; BSR set to: 0
  2673  007570  0E1F               	movlw	31
  2674  007572  0100               	movlb	0	; () banked
  2675  007574  6FD7               	movwf	(_M+1)& (0+255),b
  2676  007576  0E40               	movlw	64
  2677  007578  D004               	goto	L8
  2678  00757A                     l3424:
  2679                           
  2680                           ; BSR set to: 0
  2681  00757A  0E23               	movlw	35
  2682  00757C  0100               	movlb	0	; () banked
  2683  00757E  6FD7               	movwf	(_M+1)& (0+255),b
  2684  007580  0E28               	movlw	40
  2685  007582                     L8:
  2686  007582  0100               	movlb	0	; () banked
  2687  007584  6FD6               	movwf	_M& (0+255),b
  2688                           
  2689                           ;main.c: 355: break;
  2690  007586  D01D               	goto	l3430
  2691  007588                     l3428:
  2692  007588  0100               	movlb	0	; () banked
  2693  00758A  51D3               	movf	main@A& (0+255),w,b
  2694                           
  2695                           ; Switch size 1, requested type "space"
  2696                           ; Number of cases is 9, Range of values is 49 to 57
  2697                           ; switch strategies available:
  2698                           ; Name         Instructions Cycles
  2699                           ; simple_byte           28    15 (average)
  2700                           ;	Chosen strategy is simple_byte
  2701  00758C  0A31               	xorlw	49	; case 49
  2702  00758E  B4D8               	btfsc	status,2,c
  2703  007590  D7CC               	goto	l3408
  2704  007592  0A03               	xorlw	3	; case 50
  2705  007594  B4D8               	btfsc	status,2,c
  2706  007596  D7CE               	goto	l3410
  2707  007598  0A01               	xorlw	1	; case 51
  2708  00759A  B4D8               	btfsc	status,2,c
  2709  00759C  D7D0               	goto	l3412
  2710  00759E  0A07               	xorlw	7	; case 52
  2711  0075A0  B4D8               	btfsc	status,2,c
  2712  0075A2  D7D2               	goto	l3414
  2713  0075A4  0A01               	xorlw	1	; case 53
  2714  0075A6  B4D8               	btfsc	status,2,c
  2715  0075A8  D7D4               	goto	l3416
  2716  0075AA  0A03               	xorlw	3	; case 54
  2717  0075AC  B4D8               	btfsc	status,2,c
  2718  0075AE  D7D6               	goto	l3418
  2719  0075B0  0A01               	xorlw	1	; case 55
  2720  0075B2  B4D8               	btfsc	status,2,c
  2721  0075B4  D7D8               	goto	l3420
  2722  0075B6  0A0F               	xorlw	15	; case 56
  2723  0075B8  B4D8               	btfsc	status,2,c
  2724  0075BA  D7DA               	goto	l3422
  2725  0075BC  0A01               	xorlw	1	; case 57
  2726  0075BE  B4D8               	btfsc	status,2,c
  2727  0075C0  D7DC               	goto	l3424
  2728  0075C2                     l3430:
  2729                           
  2730                           ;main.c: 357: }
  2731                           ;main.c: 358: if(A>57){
  2732  0075C2  0E39               	movlw	57
  2733  0075C4  0100               	movlb	0	; () banked
  2734  0075C6  65D3               	cpfsgt	main@A& (0+255),b
  2735  0075C8  D003               	goto	l3434
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;main.c: 359: A=47;
  2739  0075CA  0E2F               	movlw	47
  2740  0075CC  0100               	movlb	0	; () banked
  2741  0075CE  6FD3               	movwf	main@A& (0+255),b
  2742  0075D0                     l3434:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;main.c: 360: }
  2746                           ;main.c: 361: if(PORTBbits.RB0==1 && PORTBbits.RB1==1){
  2747  0075D0  B081               	btfsc	3969,0,c	;volatile
  2748                           
  2749                           ; BSR set to: 0
  2750  0075D2  A281               	btfss	3969,1,c	;volatile
  2751  0075D4  D006               	goto	l3440
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;main.c: 362: r=1;
  2755  0075D6  0E00               	movlw	0
  2756  0075D8  0100               	movlb	0	; () banked
  2757  0075DA  6FDF               	movwf	(_r+1)& (0+255),b
  2758  0075DC  0E01               	movlw	1
  2759  0075DE  0100               	movlb	0	; () banked
  2760  0075E0  6FDE               	movwf	_r& (0+255),b
  2761  0075E2                     l3440:
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;main.c: 363: }
  2765                           ;main.c: 365: }while(r==0);
  2766  0075E2  0100               	movlb	0	; () banked
  2767  0075E4  51DF               	movf	(_r+1)& (0+255),w,b
  2768  0075E6  11DE               	iorwf	_r& (0+255),w,b
  2769  0075E8  B4D8               	btfsc	status,2,c
  2770  0075EA  D777               	goto	l3388
  2771  0075EC                     l3442:
  2772                           
  2773                           ;main.c: 367: }
  2774                           ;main.c: 368: }
  2775                           ;main.c: 370: if(B==2){
  2776  0075EC  0100               	movlb	0	; () banked
  2777  0075EE  51D4               	movf	_B& (0+255),w,b
  2778  0075F0  0A02               	xorlw	2
  2779  0075F2  11D5               	iorwf	(_B+1)& (0+255),w,b
  2780  0075F4  A4D8               	btfss	status,2,c
  2781  0075F6  D308               	goto	l197
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;main.c: 371: Lcd_Init();
  2785  0075F8  EC76  F032         	call	_Lcd_Init	;wreg free
  2786                           
  2787                           ;main.c: 372: Lcd_Cmd(1);
  2788  0075FC  0E01               	movlw	1
  2789  0075FE  ECE3  F031         	call	_Lcd_Cmd
  2790                           
  2791                           ;main.c: 373: Lcd_Cmd(12);
  2792  007602  0E0C               	movlw	12
  2793  007604  ECE3  F031         	call	_Lcd_Cmd
  2794                           
  2795                           ;main.c: 374: Lcd_Out2(1,1,"   Frecuencia");
  2796  007608  0E01               	movlw	1
  2797  00760A  6E04               	movwf	Lcd_Out2@x,c
  2798  00760C  0E7E               	movlw	high STR_28
  2799  00760E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2800  007610  0E7D               	movlw	low STR_28
  2801  007612  6E05               	movwf	Lcd_Out2@buffer,c
  2802  007614  0E01               	movlw	1
  2803  007616  ECA5  F02D         	call	_Lcd_Out2
  2804                           
  2805                           ;main.c: 375: Lcd_Out2(2,1,"=> Ciclo");
  2806  00761A  0E01               	movlw	1
  2807  00761C  6E04               	movwf	Lcd_Out2@x,c
  2808  00761E  0E7F               	movlw	high STR_34
  2809  007620  6E06               	movwf	Lcd_Out2@buffer+1,c
  2810  007622  0E7B               	movlw	low STR_34
  2811  007624  6E05               	movwf	Lcd_Out2@buffer,c
  2812  007626  0E02               	movlw	2
  2813  007628  ECA5  F02D         	call	_Lcd_Out2
  2814                           
  2815                           ;main.c: 376: tm_1s();
  2816  00762C  EC1A  F02E         	call	_tm_1s	;wreg free
  2817                           
  2818                           ;main.c: 378: if(PORTBbits.RB4==1){
  2819  007630  A881               	btfss	3969,4,c	;volatile
  2820  007632  D2EA               	goto	l197
  2821  007634                     l3454:
  2822                           
  2823                           ;main.c: 381: t=0;
  2824  007634  0E00               	movlw	0
  2825  007636  0100               	movlb	0	; () banked
  2826  007638  6FE1               	movwf	(_t+1)& (0+255),b
  2827  00763A  0E00               	movlw	0
  2828  00763C  0100               	movlb	0	; () banked
  2829  00763E  6FE0               	movwf	_t& (0+255),b
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;main.c: 384: if(B==1){
  2833  007640  0100               	movlb	0	; () banked
  2834  007642  05D4               	decf	_B& (0+255),w,b
  2835  007644  11D5               	iorwf	(_B+1)& (0+255),w,b
  2836  007646  A4D8               	btfss	status,2,c
  2837  007648  D046               	goto	l3476
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;main.c: 385: Lcd_Init();
  2841  00764A  EC76  F032         	call	_Lcd_Init	;wreg free
  2842                           
  2843                           ;main.c: 386: Lcd_Cmd(1);
  2844  00764E  0E01               	movlw	1
  2845  007650  ECE3  F031         	call	_Lcd_Cmd
  2846                           
  2847                           ;main.c: 387: Lcd_Cmd(12);
  2848  007654  0E0C               	movlw	12
  2849  007656  ECE3  F031         	call	_Lcd_Cmd
  2850                           
  2851                           ;main.c: 388: Lcd_Out2(1,0,"*10%");
  2852  00765A  0E00               	movlw	0
  2853  00765C  6E04               	movwf	Lcd_Out2@x,c
  2854  00765E  0E7F               	movlw	high STR_35
  2855  007660  6E06               	movwf	Lcd_Out2@buffer+1,c
  2856  007662  0EAB               	movlw	low STR_35
  2857  007664  6E05               	movwf	Lcd_Out2@buffer,c
  2858  007666  0E01               	movlw	1
  2859  007668  ECA5  F02D         	call	_Lcd_Out2
  2860                           
  2861                           ;main.c: 389: Lcd_Out2(2,0," 20%");
  2862  00766C  0E00               	movlw	0
  2863  00766E  6E04               	movwf	Lcd_Out2@x,c
  2864  007670  0E7F               	movlw	high STR_36
  2865  007672  6E06               	movwf	Lcd_Out2@buffer+1,c
  2866  007674  0EB0               	movlw	low STR_36
  2867  007676  6E05               	movwf	Lcd_Out2@buffer,c
  2868  007678  0E02               	movlw	2
  2869  00767A  ECA5  F02D         	call	_Lcd_Out2
  2870                           
  2871                           ;main.c: 390: Lcd_Out2(1,5," 30%");
  2872  00767E  0E05               	movlw	5
  2873  007680  6E04               	movwf	Lcd_Out2@x,c
  2874  007682  0E7F               	movlw	high STR_37
  2875  007684  6E06               	movwf	Lcd_Out2@buffer+1,c
  2876  007686  0EBA               	movlw	low STR_37
  2877  007688  6E05               	movwf	Lcd_Out2@buffer,c
  2878  00768A  0E01               	movlw	1
  2879  00768C  ECA5  F02D         	call	_Lcd_Out2
  2880                           
  2881                           ;main.c: 391: Lcd_Out2(2,5," 40%");
  2882  007690  0E05               	movlw	5
  2883  007692  6E04               	movwf	Lcd_Out2@x,c
  2884  007694  0E7F               	movlw	high STR_38
  2885  007696  6E06               	movwf	Lcd_Out2@buffer+1,c
  2886  007698  0EC4               	movlw	low STR_38
  2887  00769A  6E05               	movwf	Lcd_Out2@buffer,c
  2888  00769C  0E02               	movlw	2
  2889  00769E  ECA5  F02D         	call	_Lcd_Out2
  2890                           
  2891                           ;main.c: 392: Lcd_Out2(1,10," 50%");
  2892  0076A2  0E0A               	movlw	10
  2893  0076A4  6E04               	movwf	Lcd_Out2@x,c
  2894  0076A6  0E7F               	movlw	high STR_39
  2895  0076A8  6E06               	movwf	Lcd_Out2@buffer+1,c
  2896  0076AA  0ECE               	movlw	low STR_39
  2897  0076AC  6E05               	movwf	Lcd_Out2@buffer,c
  2898  0076AE  0E01               	movlw	1
  2899  0076B0  ECA5  F02D         	call	_Lcd_Out2
  2900                           
  2901                           ;main.c: 393: Lcd_Out2(2,10," 60%");
  2902  0076B4  0E0A               	movlw	10
  2903  0076B6  6E04               	movwf	Lcd_Out2@x,c
  2904  0076B8  0E7F               	movlw	high STR_40
  2905  0076BA  6E06               	movwf	Lcd_Out2@buffer+1,c
  2906  0076BC  0ED8               	movlw	low STR_40
  2907  0076BE  6E05               	movwf	Lcd_Out2@buffer,c
  2908  0076C0  0E02               	movlw	2
  2909  0076C2  ECA5  F02D         	call	_Lcd_Out2
  2910                           
  2911                           ;main.c: 394: tm_1s();
  2912  0076C6  EC1A  F02E         	call	_tm_1s	;wreg free
  2913                           
  2914                           ;main.c: 395: Z=10;
  2915  0076CA  0E00               	movlw	0
  2916  0076CC  0100               	movlb	0	; () banked
  2917  0076CE  6FD2               	movwf	(main@Z+1)& (0+255),b
  2918  0076D0  0E0A               	movlw	10
  2919  0076D2  0100               	movlb	0	; () banked
  2920  0076D4  6FD1               	movwf	main@Z& (0+255),b
  2921  0076D6                     l3476:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;main.c: 397: }
  2925                           ;main.c: 398: if(B==2){
  2926  0076D6  0100               	movlb	0	; () banked
  2927  0076D8  51D4               	movf	_B& (0+255),w,b
  2928  0076DA  0A02               	xorlw	2
  2929  0076DC  11D5               	iorwf	(_B+1)& (0+255),w,b
  2930  0076DE  A4D8               	btfss	status,2,c
  2931  0076E0  D046               	goto	l3496
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;main.c: 399: Lcd_Init();
  2935  0076E2  EC76  F032         	call	_Lcd_Init	;wreg free
  2936                           
  2937                           ;main.c: 400: Lcd_Cmd(1);
  2938  0076E6  0E01               	movlw	1
  2939  0076E8  ECE3  F031         	call	_Lcd_Cmd
  2940                           
  2941                           ;main.c: 401: Lcd_Cmd(12);
  2942  0076EC  0E0C               	movlw	12
  2943  0076EE  ECE3  F031         	call	_Lcd_Cmd
  2944                           
  2945                           ;main.c: 402: Lcd_Out2(1,0," 10%");
  2946  0076F2  0E00               	movlw	0
  2947  0076F4  6E04               	movwf	Lcd_Out2@x,c
  2948  0076F6  0E7F               	movlw	high STR_41
  2949  0076F8  6E06               	movwf	Lcd_Out2@buffer+1,c
  2950  0076FA  0EA6               	movlw	low STR_41
  2951  0076FC  6E05               	movwf	Lcd_Out2@buffer,c
  2952  0076FE  0E01               	movlw	1
  2953  007700  ECA5  F02D         	call	_Lcd_Out2
  2954                           
  2955                           ;main.c: 403: Lcd_Out2(2,0,"*20%");
  2956  007704  0E00               	movlw	0
  2957  007706  6E04               	movwf	Lcd_Out2@x,c
  2958  007708  0E7F               	movlw	high STR_42
  2959  00770A  6E06               	movwf	Lcd_Out2@buffer+1,c
  2960  00770C  0EB5               	movlw	low STR_42
  2961  00770E  6E05               	movwf	Lcd_Out2@buffer,c
  2962  007710  0E02               	movlw	2
  2963  007712  ECA5  F02D         	call	_Lcd_Out2
  2964                           
  2965                           ;main.c: 404: Lcd_Out2(1,5," 30%");
  2966  007716  0E05               	movlw	5
  2967  007718  6E04               	movwf	Lcd_Out2@x,c
  2968  00771A  0E7F               	movlw	high STR_37
  2969  00771C  6E06               	movwf	Lcd_Out2@buffer+1,c
  2970  00771E  0EBA               	movlw	low STR_37
  2971  007720  6E05               	movwf	Lcd_Out2@buffer,c
  2972  007722  0E01               	movlw	1
  2973  007724  ECA5  F02D         	call	_Lcd_Out2
  2974                           
  2975                           ;main.c: 405: Lcd_Out2(2,5," 40%");
  2976  007728  0E05               	movlw	5
  2977  00772A  6E04               	movwf	Lcd_Out2@x,c
  2978  00772C  0E7F               	movlw	high STR_38
  2979  00772E  6E06               	movwf	Lcd_Out2@buffer+1,c
  2980  007730  0EC4               	movlw	low STR_38
  2981  007732  6E05               	movwf	Lcd_Out2@buffer,c
  2982  007734  0E02               	movlw	2
  2983  007736  ECA5  F02D         	call	_Lcd_Out2
  2984                           
  2985                           ;main.c: 406: Lcd_Out2(1,10," 50%");
  2986  00773A  0E0A               	movlw	10
  2987  00773C  6E04               	movwf	Lcd_Out2@x,c
  2988  00773E  0E7F               	movlw	high STR_39
  2989  007740  6E06               	movwf	Lcd_Out2@buffer+1,c
  2990  007742  0ECE               	movlw	low STR_39
  2991  007744  6E05               	movwf	Lcd_Out2@buffer,c
  2992  007746  0E01               	movlw	1
  2993  007748  ECA5  F02D         	call	_Lcd_Out2
  2994                           
  2995                           ;main.c: 407: Lcd_Out2(2,10," 60%");
  2996  00774C  0E0A               	movlw	10
  2997  00774E  6E04               	movwf	Lcd_Out2@x,c
  2998  007750  0E7F               	movlw	high STR_40
  2999  007752  6E06               	movwf	Lcd_Out2@buffer+1,c
  3000  007754  0ED8               	movlw	low STR_40
  3001  007756  6E05               	movwf	Lcd_Out2@buffer,c
  3002  007758  0E02               	movlw	2
  3003  00775A  ECA5  F02D         	call	_Lcd_Out2
  3004                           
  3005                           ;main.c: 408: tm_1s();
  3006  00775E  EC1A  F02E         	call	_tm_1s	;wreg free
  3007                           
  3008                           ;main.c: 409: Z=20;
  3009  007762  0E00               	movlw	0
  3010  007764  0100               	movlb	0	; () banked
  3011  007766  6FD2               	movwf	(main@Z+1)& (0+255),b
  3012  007768  0E14               	movlw	20
  3013  00776A  0100               	movlb	0	; () banked
  3014  00776C  6FD1               	movwf	main@Z& (0+255),b
  3015  00776E                     l3496:
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;main.c: 411: }
  3019                           ;main.c: 412: if(B==3){
  3020  00776E  0100               	movlb	0	; () banked
  3021  007770  51D4               	movf	_B& (0+255),w,b
  3022  007772  0A03               	xorlw	3
  3023  007774  11D5               	iorwf	(_B+1)& (0+255),w,b
  3024  007776  A4D8               	btfss	status,2,c
  3025  007778  D046               	goto	l3516
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;main.c: 413: Lcd_Init();
  3029  00777A  EC76  F032         	call	_Lcd_Init	;wreg free
  3030                           
  3031                           ;main.c: 414: Lcd_Cmd(1);
  3032  00777E  0E01               	movlw	1
  3033  007780  ECE3  F031         	call	_Lcd_Cmd
  3034                           
  3035                           ;main.c: 415: Lcd_Cmd(12);
  3036  007784  0E0C               	movlw	12
  3037  007786  ECE3  F031         	call	_Lcd_Cmd
  3038                           
  3039                           ;main.c: 416: Lcd_Out2(1,0," 10%");
  3040  00778A  0E00               	movlw	0
  3041  00778C  6E04               	movwf	Lcd_Out2@x,c
  3042  00778E  0E7F               	movlw	high STR_41
  3043  007790  6E06               	movwf	Lcd_Out2@buffer+1,c
  3044  007792  0EA6               	movlw	low STR_41
  3045  007794  6E05               	movwf	Lcd_Out2@buffer,c
  3046  007796  0E01               	movlw	1
  3047  007798  ECA5  F02D         	call	_Lcd_Out2
  3048                           
  3049                           ;main.c: 417: Lcd_Out2(2,0," 20%");
  3050  00779C  0E00               	movlw	0
  3051  00779E  6E04               	movwf	Lcd_Out2@x,c
  3052  0077A0  0E7F               	movlw	high STR_36
  3053  0077A2  6E06               	movwf	Lcd_Out2@buffer+1,c
  3054  0077A4  0EB0               	movlw	low STR_36
  3055  0077A6  6E05               	movwf	Lcd_Out2@buffer,c
  3056  0077A8  0E02               	movlw	2
  3057  0077AA  ECA5  F02D         	call	_Lcd_Out2
  3058                           
  3059                           ;main.c: 418: Lcd_Out2(1,5,"*30%");
  3060  0077AE  0E05               	movlw	5
  3061  0077B0  6E04               	movwf	Lcd_Out2@x,c
  3062  0077B2  0E7F               	movlw	high STR_49
  3063  0077B4  6E06               	movwf	Lcd_Out2@buffer+1,c
  3064  0077B6  0EBF               	movlw	low STR_49
  3065  0077B8  6E05               	movwf	Lcd_Out2@buffer,c
  3066  0077BA  0E01               	movlw	1
  3067  0077BC  ECA5  F02D         	call	_Lcd_Out2
  3068                           
  3069                           ;main.c: 419: Lcd_Out2(2,5," 40%");
  3070  0077C0  0E05               	movlw	5
  3071  0077C2  6E04               	movwf	Lcd_Out2@x,c
  3072  0077C4  0E7F               	movlw	high STR_38
  3073  0077C6  6E06               	movwf	Lcd_Out2@buffer+1,c
  3074  0077C8  0EC4               	movlw	low STR_38
  3075  0077CA  6E05               	movwf	Lcd_Out2@buffer,c
  3076  0077CC  0E02               	movlw	2
  3077  0077CE  ECA5  F02D         	call	_Lcd_Out2
  3078                           
  3079                           ;main.c: 420: Lcd_Out2(1,10," 50%");
  3080  0077D2  0E0A               	movlw	10
  3081  0077D4  6E04               	movwf	Lcd_Out2@x,c
  3082  0077D6  0E7F               	movlw	high STR_39
  3083  0077D8  6E06               	movwf	Lcd_Out2@buffer+1,c
  3084  0077DA  0ECE               	movlw	low STR_39
  3085  0077DC  6E05               	movwf	Lcd_Out2@buffer,c
  3086  0077DE  0E01               	movlw	1
  3087  0077E0  ECA5  F02D         	call	_Lcd_Out2
  3088                           
  3089                           ;main.c: 421: Lcd_Out2(2,10," 60%");
  3090  0077E4  0E0A               	movlw	10
  3091  0077E6  6E04               	movwf	Lcd_Out2@x,c
  3092  0077E8  0E7F               	movlw	high STR_40
  3093  0077EA  6E06               	movwf	Lcd_Out2@buffer+1,c
  3094  0077EC  0ED8               	movlw	low STR_40
  3095  0077EE  6E05               	movwf	Lcd_Out2@buffer,c
  3096  0077F0  0E02               	movlw	2
  3097  0077F2  ECA5  F02D         	call	_Lcd_Out2
  3098                           
  3099                           ;main.c: 422: tm_1s();
  3100  0077F6  EC1A  F02E         	call	_tm_1s	;wreg free
  3101                           
  3102                           ;main.c: 423: Z=30;
  3103  0077FA  0E00               	movlw	0
  3104  0077FC  0100               	movlb	0	; () banked
  3105  0077FE  6FD2               	movwf	(main@Z+1)& (0+255),b
  3106  007800  0E1E               	movlw	30
  3107  007802  0100               	movlb	0	; () banked
  3108  007804  6FD1               	movwf	main@Z& (0+255),b
  3109  007806                     l3516:
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;main.c: 426: }
  3113                           ;main.c: 427: if(B==4){
  3114  007806  0100               	movlb	0	; () banked
  3115  007808  51D4               	movf	_B& (0+255),w,b
  3116  00780A  0A04               	xorlw	4
  3117  00780C  11D5               	iorwf	(_B+1)& (0+255),w,b
  3118  00780E  A4D8               	btfss	status,2,c
  3119  007810  D046               	goto	l3536
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;main.c: 428: Lcd_Init();
  3123  007812  EC76  F032         	call	_Lcd_Init	;wreg free
  3124                           
  3125                           ;main.c: 429: Lcd_Cmd(1);
  3126  007816  0E01               	movlw	1
  3127  007818  ECE3  F031         	call	_Lcd_Cmd
  3128                           
  3129                           ;main.c: 430: Lcd_Cmd(12);
  3130  00781C  0E0C               	movlw	12
  3131  00781E  ECE3  F031         	call	_Lcd_Cmd
  3132                           
  3133                           ;main.c: 431: Lcd_Out2(1,0," 10%");
  3134  007822  0E00               	movlw	0
  3135  007824  6E04               	movwf	Lcd_Out2@x,c
  3136  007826  0E7F               	movlw	high STR_41
  3137  007828  6E06               	movwf	Lcd_Out2@buffer+1,c
  3138  00782A  0EA6               	movlw	low STR_41
  3139  00782C  6E05               	movwf	Lcd_Out2@buffer,c
  3140  00782E  0E01               	movlw	1
  3141  007830  ECA5  F02D         	call	_Lcd_Out2
  3142                           
  3143                           ;main.c: 432: Lcd_Out2(2,0," 20%");
  3144  007834  0E00               	movlw	0
  3145  007836  6E04               	movwf	Lcd_Out2@x,c
  3146  007838  0E7F               	movlw	high STR_36
  3147  00783A  6E06               	movwf	Lcd_Out2@buffer+1,c
  3148  00783C  0EB0               	movlw	low STR_36
  3149  00783E  6E05               	movwf	Lcd_Out2@buffer,c
  3150  007840  0E02               	movlw	2
  3151  007842  ECA5  F02D         	call	_Lcd_Out2
  3152                           
  3153                           ;main.c: 433: Lcd_Out2(1,5," 30%");
  3154  007846  0E05               	movlw	5
  3155  007848  6E04               	movwf	Lcd_Out2@x,c
  3156  00784A  0E7F               	movlw	high STR_37
  3157  00784C  6E06               	movwf	Lcd_Out2@buffer+1,c
  3158  00784E  0EBA               	movlw	low STR_37
  3159  007850  6E05               	movwf	Lcd_Out2@buffer,c
  3160  007852  0E01               	movlw	1
  3161  007854  ECA5  F02D         	call	_Lcd_Out2
  3162                           
  3163                           ;main.c: 434: Lcd_Out2(2,5,"*40%");
  3164  007858  0E05               	movlw	5
  3165  00785A  6E04               	movwf	Lcd_Out2@x,c
  3166  00785C  0E7F               	movlw	high STR_56
  3167  00785E  6E06               	movwf	Lcd_Out2@buffer+1,c
  3168  007860  0EC9               	movlw	low STR_56
  3169  007862  6E05               	movwf	Lcd_Out2@buffer,c
  3170  007864  0E02               	movlw	2
  3171  007866  ECA5  F02D         	call	_Lcd_Out2
  3172                           
  3173                           ;main.c: 435: Lcd_Out2(1,10," 50%");
  3174  00786A  0E0A               	movlw	10
  3175  00786C  6E04               	movwf	Lcd_Out2@x,c
  3176  00786E  0E7F               	movlw	high STR_39
  3177  007870  6E06               	movwf	Lcd_Out2@buffer+1,c
  3178  007872  0ECE               	movlw	low STR_39
  3179  007874  6E05               	movwf	Lcd_Out2@buffer,c
  3180  007876  0E01               	movlw	1
  3181  007878  ECA5  F02D         	call	_Lcd_Out2
  3182                           
  3183                           ;main.c: 436: Lcd_Out2(2,10," 60%");
  3184  00787C  0E0A               	movlw	10
  3185  00787E  6E04               	movwf	Lcd_Out2@x,c
  3186  007880  0E7F               	movlw	high STR_40
  3187  007882  6E06               	movwf	Lcd_Out2@buffer+1,c
  3188  007884  0ED8               	movlw	low STR_40
  3189  007886  6E05               	movwf	Lcd_Out2@buffer,c
  3190  007888  0E02               	movlw	2
  3191  00788A  ECA5  F02D         	call	_Lcd_Out2
  3192                           
  3193                           ;main.c: 437: tm_1s();
  3194  00788E  EC1A  F02E         	call	_tm_1s	;wreg free
  3195                           
  3196                           ;main.c: 438: Z=40;
  3197  007892  0E00               	movlw	0
  3198  007894  0100               	movlb	0	; () banked
  3199  007896  6FD2               	movwf	(main@Z+1)& (0+255),b
  3200  007898  0E28               	movlw	40
  3201  00789A  0100               	movlb	0	; () banked
  3202  00789C  6FD1               	movwf	main@Z& (0+255),b
  3203  00789E                     l3536:
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;main.c: 441: }
  3207                           ;main.c: 442: if(B==5){
  3208  00789E  0100               	movlb	0	; () banked
  3209  0078A0  51D4               	movf	_B& (0+255),w,b
  3210  0078A2  0A05               	xorlw	5
  3211  0078A4  11D5               	iorwf	(_B+1)& (0+255),w,b
  3212  0078A6  A4D8               	btfss	status,2,c
  3213  0078A8  D046               	goto	l3556
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;main.c: 443: Lcd_Init();
  3217  0078AA  EC76  F032         	call	_Lcd_Init	;wreg free
  3218                           
  3219                           ;main.c: 444: Lcd_Cmd(1);
  3220  0078AE  0E01               	movlw	1
  3221  0078B0  ECE3  F031         	call	_Lcd_Cmd
  3222                           
  3223                           ;main.c: 445: Lcd_Cmd(12);
  3224  0078B4  0E0C               	movlw	12
  3225  0078B6  ECE3  F031         	call	_Lcd_Cmd
  3226                           
  3227                           ;main.c: 446: Lcd_Out2(1,0," 10%");
  3228  0078BA  0E00               	movlw	0
  3229  0078BC  6E04               	movwf	Lcd_Out2@x,c
  3230  0078BE  0E7F               	movlw	high STR_41
  3231  0078C0  6E06               	movwf	Lcd_Out2@buffer+1,c
  3232  0078C2  0EA6               	movlw	low STR_41
  3233  0078C4  6E05               	movwf	Lcd_Out2@buffer,c
  3234  0078C6  0E01               	movlw	1
  3235  0078C8  ECA5  F02D         	call	_Lcd_Out2
  3236                           
  3237                           ;main.c: 447: Lcd_Out2(2,0," 20%");
  3238  0078CC  0E00               	movlw	0
  3239  0078CE  6E04               	movwf	Lcd_Out2@x,c
  3240  0078D0  0E7F               	movlw	high STR_36
  3241  0078D2  6E06               	movwf	Lcd_Out2@buffer+1,c
  3242  0078D4  0EB0               	movlw	low STR_36
  3243  0078D6  6E05               	movwf	Lcd_Out2@buffer,c
  3244  0078D8  0E02               	movlw	2
  3245  0078DA  ECA5  F02D         	call	_Lcd_Out2
  3246                           
  3247                           ;main.c: 448: Lcd_Out2(1,5," 30%");
  3248  0078DE  0E05               	movlw	5
  3249  0078E0  6E04               	movwf	Lcd_Out2@x,c
  3250  0078E2  0E7F               	movlw	high STR_37
  3251  0078E4  6E06               	movwf	Lcd_Out2@buffer+1,c
  3252  0078E6  0EBA               	movlw	low STR_37
  3253  0078E8  6E05               	movwf	Lcd_Out2@buffer,c
  3254  0078EA  0E01               	movlw	1
  3255  0078EC  ECA5  F02D         	call	_Lcd_Out2
  3256                           
  3257                           ;main.c: 449: Lcd_Out2(2,5," 40%");
  3258  0078F0  0E05               	movlw	5
  3259  0078F2  6E04               	movwf	Lcd_Out2@x,c
  3260  0078F4  0E7F               	movlw	high STR_38
  3261  0078F6  6E06               	movwf	Lcd_Out2@buffer+1,c
  3262  0078F8  0EC4               	movlw	low STR_38
  3263  0078FA  6E05               	movwf	Lcd_Out2@buffer,c
  3264  0078FC  0E02               	movlw	2
  3265  0078FE  ECA5  F02D         	call	_Lcd_Out2
  3266                           
  3267                           ;main.c: 450: Lcd_Out2(1,10,"*50%");
  3268  007902  0E0A               	movlw	10
  3269  007904  6E04               	movwf	Lcd_Out2@x,c
  3270  007906  0E7F               	movlw	high STR_63
  3271  007908  6E06               	movwf	Lcd_Out2@buffer+1,c
  3272  00790A  0ED3               	movlw	low STR_63
  3273  00790C  6E05               	movwf	Lcd_Out2@buffer,c
  3274  00790E  0E01               	movlw	1
  3275  007910  ECA5  F02D         	call	_Lcd_Out2
  3276                           
  3277                           ;main.c: 451: Lcd_Out2(2,10," 60%");
  3278  007914  0E0A               	movlw	10
  3279  007916  6E04               	movwf	Lcd_Out2@x,c
  3280  007918  0E7F               	movlw	high STR_40
  3281  00791A  6E06               	movwf	Lcd_Out2@buffer+1,c
  3282  00791C  0ED8               	movlw	low STR_40
  3283  00791E  6E05               	movwf	Lcd_Out2@buffer,c
  3284  007920  0E02               	movlw	2
  3285  007922  ECA5  F02D         	call	_Lcd_Out2
  3286                           
  3287                           ;main.c: 452: tm_1s();
  3288  007926  EC1A  F02E         	call	_tm_1s	;wreg free
  3289                           
  3290                           ;main.c: 453: Z=50;
  3291  00792A  0E00               	movlw	0
  3292  00792C  0100               	movlb	0	; () banked
  3293  00792E  6FD2               	movwf	(main@Z+1)& (0+255),b
  3294  007930  0E32               	movlw	50
  3295  007932  0100               	movlb	0	; () banked
  3296  007934  6FD1               	movwf	main@Z& (0+255),b
  3297  007936                     l3556:
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;main.c: 456: }
  3301                           ;main.c: 457: if(B==6){
  3302  007936  0100               	movlb	0	; () banked
  3303  007938  51D4               	movf	_B& (0+255),w,b
  3304  00793A  0A06               	xorlw	6
  3305  00793C  11D5               	iorwf	(_B+1)& (0+255),w,b
  3306  00793E  A4D8               	btfss	status,2,c
  3307  007940  D046               	goto	l3576
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;main.c: 458: Lcd_Init();
  3311  007942  EC76  F032         	call	_Lcd_Init	;wreg free
  3312                           
  3313                           ;main.c: 459: Lcd_Cmd(1);
  3314  007946  0E01               	movlw	1
  3315  007948  ECE3  F031         	call	_Lcd_Cmd
  3316                           
  3317                           ;main.c: 460: Lcd_Cmd(12);
  3318  00794C  0E0C               	movlw	12
  3319  00794E  ECE3  F031         	call	_Lcd_Cmd
  3320                           
  3321                           ;main.c: 461: Lcd_Out2(1,0," 10%");
  3322  007952  0E00               	movlw	0
  3323  007954  6E04               	movwf	Lcd_Out2@x,c
  3324  007956  0E7F               	movlw	high STR_41
  3325  007958  6E06               	movwf	Lcd_Out2@buffer+1,c
  3326  00795A  0EA6               	movlw	low STR_41
  3327  00795C  6E05               	movwf	Lcd_Out2@buffer,c
  3328  00795E  0E01               	movlw	1
  3329  007960  ECA5  F02D         	call	_Lcd_Out2
  3330                           
  3331                           ;main.c: 462: Lcd_Out2(2,0," 20%");
  3332  007964  0E00               	movlw	0
  3333  007966  6E04               	movwf	Lcd_Out2@x,c
  3334  007968  0E7F               	movlw	high STR_36
  3335  00796A  6E06               	movwf	Lcd_Out2@buffer+1,c
  3336  00796C  0EB0               	movlw	low STR_36
  3337  00796E  6E05               	movwf	Lcd_Out2@buffer,c
  3338  007970  0E02               	movlw	2
  3339  007972  ECA5  F02D         	call	_Lcd_Out2
  3340                           
  3341                           ;main.c: 463: Lcd_Out2(1,5," 30%");
  3342  007976  0E05               	movlw	5
  3343  007978  6E04               	movwf	Lcd_Out2@x,c
  3344  00797A  0E7F               	movlw	high STR_37
  3345  00797C  6E06               	movwf	Lcd_Out2@buffer+1,c
  3346  00797E  0EBA               	movlw	low STR_37
  3347  007980  6E05               	movwf	Lcd_Out2@buffer,c
  3348  007982  0E01               	movlw	1
  3349  007984  ECA5  F02D         	call	_Lcd_Out2
  3350                           
  3351                           ;main.c: 464: Lcd_Out2(2,5," 40%");
  3352  007988  0E05               	movlw	5
  3353  00798A  6E04               	movwf	Lcd_Out2@x,c
  3354  00798C  0E7F               	movlw	high STR_38
  3355  00798E  6E06               	movwf	Lcd_Out2@buffer+1,c
  3356  007990  0EC4               	movlw	low STR_38
  3357  007992  6E05               	movwf	Lcd_Out2@buffer,c
  3358  007994  0E02               	movlw	2
  3359  007996  ECA5  F02D         	call	_Lcd_Out2
  3360                           
  3361                           ;main.c: 465: Lcd_Out2(1,10," 50%");
  3362  00799A  0E0A               	movlw	10
  3363  00799C  6E04               	movwf	Lcd_Out2@x,c
  3364  00799E  0E7F               	movlw	high STR_39
  3365  0079A0  6E06               	movwf	Lcd_Out2@buffer+1,c
  3366  0079A2  0ECE               	movlw	low STR_39
  3367  0079A4  6E05               	movwf	Lcd_Out2@buffer,c
  3368  0079A6  0E01               	movlw	1
  3369  0079A8  ECA5  F02D         	call	_Lcd_Out2
  3370                           
  3371                           ;main.c: 466: Lcd_Out2(2,10,"*60%");
  3372  0079AC  0E0A               	movlw	10
  3373  0079AE  6E04               	movwf	Lcd_Out2@x,c
  3374  0079B0  0E7F               	movlw	high STR_70
  3375  0079B2  6E06               	movwf	Lcd_Out2@buffer+1,c
  3376  0079B4  0EDD               	movlw	low STR_70
  3377  0079B6  6E05               	movwf	Lcd_Out2@buffer,c
  3378  0079B8  0E02               	movlw	2
  3379  0079BA  ECA5  F02D         	call	_Lcd_Out2
  3380                           
  3381                           ;main.c: 467: tm_1s();
  3382  0079BE  EC1A  F02E         	call	_tm_1s	;wreg free
  3383                           
  3384                           ;main.c: 468: Z=60;
  3385  0079C2  0E00               	movlw	0
  3386  0079C4  0100               	movlb	0	; () banked
  3387  0079C6  6FD2               	movwf	(main@Z+1)& (0+255),b
  3388  0079C8  0E3C               	movlw	60
  3389  0079CA  0100               	movlb	0	; () banked
  3390  0079CC  6FD1               	movwf	main@Z& (0+255),b
  3391  0079CE                     l3576:
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;main.c: 471: }
  3395                           ;main.c: 472: if(B==7){
  3396  0079CE  0100               	movlb	0	; () banked
  3397  0079D0  51D4               	movf	_B& (0+255),w,b
  3398  0079D2  0A07               	xorlw	7
  3399  0079D4  11D5               	iorwf	(_B+1)& (0+255),w,b
  3400  0079D6  A4D8               	btfss	status,2,c
  3401  0079D8  D034               	goto	l3592
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;main.c: 475: Lcd_Init();
  3405  0079DA  EC76  F032         	call	_Lcd_Init	;wreg free
  3406                           
  3407                           ;main.c: 476: Lcd_Cmd(1);
  3408  0079DE  0E01               	movlw	1
  3409  0079E0  ECE3  F031         	call	_Lcd_Cmd
  3410                           
  3411                           ;main.c: 477: Lcd_Cmd(12);
  3412  0079E4  0E0C               	movlw	12
  3413  0079E6  ECE3  F031         	call	_Lcd_Cmd
  3414                           
  3415                           ;main.c: 478: Lcd_Out2(1,1," *70%");
  3416  0079EA  0E01               	movlw	1
  3417  0079EC  6E04               	movwf	Lcd_Out2@x,c
  3418  0079EE  0E7F               	movlw	high STR_71
  3419  0079F0  6E06               	movwf	Lcd_Out2@buffer+1,c
  3420  0079F2  0EA0               	movlw	low STR_71
  3421  0079F4  6E05               	movwf	Lcd_Out2@buffer,c
  3422  0079F6  0E01               	movlw	1
  3423  0079F8  ECA5  F02D         	call	_Lcd_Out2
  3424                           
  3425                           ;main.c: 479: Lcd_Out2(2,1," 80%");
  3426  0079FC  0E01               	movlw	1
  3427  0079FE  6E04               	movwf	Lcd_Out2@x,c
  3428  007A00  0E7F               	movlw	high STR_72
  3429  007A02  6E06               	movwf	Lcd_Out2@buffer+1,c
  3430  007A04  0EE7               	movlw	low STR_72
  3431  007A06  6E05               	movwf	Lcd_Out2@buffer,c
  3432  007A08  0E02               	movlw	2
  3433  007A0A  ECA5  F02D         	call	_Lcd_Out2
  3434                           
  3435                           ;main.c: 480: Lcd_Out2(1,6," 90%");
  3436  007A0E  0E06               	movlw	6
  3437  007A10  6E04               	movwf	Lcd_Out2@x,c
  3438  007A12  0E7F               	movlw	high STR_73
  3439  007A14  6E06               	movwf	Lcd_Out2@buffer+1,c
  3440  007A16  0EF1               	movlw	low STR_73
  3441  007A18  6E05               	movwf	Lcd_Out2@buffer,c
  3442  007A1A  0E01               	movlw	1
  3443  007A1C  ECA5  F02D         	call	_Lcd_Out2
  3444                           
  3445                           ;main.c: 481: Lcd_Out2(2,6," 100%");
  3446  007A20  0E06               	movlw	6
  3447  007A22  6E04               	movwf	Lcd_Out2@x,c
  3448  007A24  0E7F               	movlw	high STR_74
  3449  007A26  6E06               	movwf	Lcd_Out2@buffer+1,c
  3450  007A28  0E94               	movlw	low STR_74
  3451  007A2A  6E05               	movwf	Lcd_Out2@buffer,c
  3452  007A2C  0E02               	movlw	2
  3453  007A2E  ECA5  F02D         	call	_Lcd_Out2
  3454                           
  3455                           ;main.c: 482: tm_1s();
  3456  007A32  EC1A  F02E         	call	_tm_1s	;wreg free
  3457                           
  3458                           ;main.c: 483: Z=70;
  3459  007A36  0E00               	movlw	0
  3460  007A38  0100               	movlb	0	; () banked
  3461  007A3A  6FD2               	movwf	(main@Z+1)& (0+255),b
  3462  007A3C  0E46               	movlw	70
  3463  007A3E  0100               	movlb	0	; () banked
  3464  007A40  6FD1               	movwf	main@Z& (0+255),b
  3465  007A42                     l3592:
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;main.c: 485: }
  3469                           ;main.c: 487: if(B==8){
  3470  007A42  0100               	movlb	0	; () banked
  3471  007A44  51D4               	movf	_B& (0+255),w,b
  3472  007A46  0A08               	xorlw	8
  3473  007A48  11D5               	iorwf	(_B+1)& (0+255),w,b
  3474  007A4A  A4D8               	btfss	status,2,c
  3475  007A4C  D034               	goto	l3608
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;main.c: 491: Lcd_Init();
  3479  007A4E  EC76  F032         	call	_Lcd_Init	;wreg free
  3480                           
  3481                           ;main.c: 492: Lcd_Cmd(1);
  3482  007A52  0E01               	movlw	1
  3483  007A54  ECE3  F031         	call	_Lcd_Cmd
  3484                           
  3485                           ;main.c: 493: Lcd_Cmd(12);
  3486  007A58  0E0C               	movlw	12
  3487  007A5A  ECE3  F031         	call	_Lcd_Cmd
  3488                           
  3489                           ;main.c: 494: Lcd_Out2(1,1," 70%");
  3490  007A5E  0E01               	movlw	1
  3491  007A60  6E04               	movwf	Lcd_Out2@x,c
  3492  007A62  0E7F               	movlw	high STR_75
  3493  007A64  6E06               	movwf	Lcd_Out2@buffer+1,c
  3494  007A66  0EE2               	movlw	low STR_75
  3495  007A68  6E05               	movwf	Lcd_Out2@buffer,c
  3496  007A6A  0E01               	movlw	1
  3497  007A6C  ECA5  F02D         	call	_Lcd_Out2
  3498                           
  3499                           ;main.c: 495: Lcd_Out2(2,1,"*80%");
  3500  007A70  0E01               	movlw	1
  3501  007A72  6E04               	movwf	Lcd_Out2@x,c
  3502  007A74  0E7F               	movlw	high STR_76
  3503  007A76  6E06               	movwf	Lcd_Out2@buffer+1,c
  3504  007A78  0EEC               	movlw	low STR_76
  3505  007A7A  6E05               	movwf	Lcd_Out2@buffer,c
  3506  007A7C  0E02               	movlw	2
  3507  007A7E  ECA5  F02D         	call	_Lcd_Out2
  3508                           
  3509                           ;main.c: 496: Lcd_Out2(1,6," 90%");
  3510  007A82  0E06               	movlw	6
  3511  007A84  6E04               	movwf	Lcd_Out2@x,c
  3512  007A86  0E7F               	movlw	high STR_73
  3513  007A88  6E06               	movwf	Lcd_Out2@buffer+1,c
  3514  007A8A  0EF1               	movlw	low STR_73
  3515  007A8C  6E05               	movwf	Lcd_Out2@buffer,c
  3516  007A8E  0E01               	movlw	1
  3517  007A90  ECA5  F02D         	call	_Lcd_Out2
  3518                           
  3519                           ;main.c: 497: Lcd_Out2(2,6," 100%");
  3520  007A94  0E06               	movlw	6
  3521  007A96  6E04               	movwf	Lcd_Out2@x,c
  3522  007A98  0E7F               	movlw	high STR_74
  3523  007A9A  6E06               	movwf	Lcd_Out2@buffer+1,c
  3524  007A9C  0E94               	movlw	low STR_74
  3525  007A9E  6E05               	movwf	Lcd_Out2@buffer,c
  3526  007AA0  0E02               	movlw	2
  3527  007AA2  ECA5  F02D         	call	_Lcd_Out2
  3528                           
  3529                           ;main.c: 498: tm_1s();
  3530  007AA6  EC1A  F02E         	call	_tm_1s	;wreg free
  3531                           
  3532                           ;main.c: 499: Z=80;
  3533  007AAA  0E00               	movlw	0
  3534  007AAC  0100               	movlb	0	; () banked
  3535  007AAE  6FD2               	movwf	(main@Z+1)& (0+255),b
  3536  007AB0  0E50               	movlw	80
  3537  007AB2  0100               	movlb	0	; () banked
  3538  007AB4  6FD1               	movwf	main@Z& (0+255),b
  3539  007AB6                     l3608:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;main.c: 501: }
  3543                           ;main.c: 502: if(B==9){
  3544  007AB6  0100               	movlb	0	; () banked
  3545  007AB8  51D4               	movf	_B& (0+255),w,b
  3546  007ABA  0A09               	xorlw	9
  3547  007ABC  11D5               	iorwf	(_B+1)& (0+255),w,b
  3548  007ABE  A4D8               	btfss	status,2,c
  3549  007AC0  D034               	goto	l3624
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;main.c: 505: Lcd_Init();
  3553  007AC2  EC76  F032         	call	_Lcd_Init	;wreg free
  3554                           
  3555                           ;main.c: 506: Lcd_Cmd(1);
  3556  007AC6  0E01               	movlw	1
  3557  007AC8  ECE3  F031         	call	_Lcd_Cmd
  3558                           
  3559                           ;main.c: 507: Lcd_Cmd(12);
  3560  007ACC  0E0C               	movlw	12
  3561  007ACE  ECE3  F031         	call	_Lcd_Cmd
  3562                           
  3563                           ;main.c: 508: Lcd_Out2(1,1," 70%");
  3564  007AD2  0E01               	movlw	1
  3565  007AD4  6E04               	movwf	Lcd_Out2@x,c
  3566  007AD6  0E7F               	movlw	high STR_75
  3567  007AD8  6E06               	movwf	Lcd_Out2@buffer+1,c
  3568  007ADA  0EE2               	movlw	low STR_75
  3569  007ADC  6E05               	movwf	Lcd_Out2@buffer,c
  3570  007ADE  0E01               	movlw	1
  3571  007AE0  ECA5  F02D         	call	_Lcd_Out2
  3572                           
  3573                           ;main.c: 509: Lcd_Out2(2,1," 80%");
  3574  007AE4  0E01               	movlw	1
  3575  007AE6  6E04               	movwf	Lcd_Out2@x,c
  3576  007AE8  0E7F               	movlw	high STR_72
  3577  007AEA  6E06               	movwf	Lcd_Out2@buffer+1,c
  3578  007AEC  0EE7               	movlw	low STR_72
  3579  007AEE  6E05               	movwf	Lcd_Out2@buffer,c
  3580  007AF0  0E02               	movlw	2
  3581  007AF2  ECA5  F02D         	call	_Lcd_Out2
  3582                           
  3583                           ;main.c: 510: Lcd_Out2(1,6,"*90%");
  3584  007AF6  0E06               	movlw	6
  3585  007AF8  6E04               	movwf	Lcd_Out2@x,c
  3586  007AFA  0E7F               	movlw	high STR_81
  3587  007AFC  6E06               	movwf	Lcd_Out2@buffer+1,c
  3588  007AFE  0EF6               	movlw	low STR_81
  3589  007B00  6E05               	movwf	Lcd_Out2@buffer,c
  3590  007B02  0E01               	movlw	1
  3591  007B04  ECA5  F02D         	call	_Lcd_Out2
  3592                           
  3593                           ;main.c: 511: Lcd_Out2(2,6," 100%");
  3594  007B08  0E06               	movlw	6
  3595  007B0A  6E04               	movwf	Lcd_Out2@x,c
  3596  007B0C  0E7F               	movlw	high STR_74
  3597  007B0E  6E06               	movwf	Lcd_Out2@buffer+1,c
  3598  007B10  0E94               	movlw	low STR_74
  3599  007B12  6E05               	movwf	Lcd_Out2@buffer,c
  3600  007B14  0E02               	movlw	2
  3601  007B16  ECA5  F02D         	call	_Lcd_Out2
  3602                           
  3603                           ;main.c: 512: tm_1s();
  3604  007B1A  EC1A  F02E         	call	_tm_1s	;wreg free
  3605                           
  3606                           ;main.c: 513: Z=90;
  3607  007B1E  0E00               	movlw	0
  3608  007B20  0100               	movlb	0	; () banked
  3609  007B22  6FD2               	movwf	(main@Z+1)& (0+255),b
  3610  007B24  0E5A               	movlw	90
  3611  007B26  0100               	movlb	0	; () banked
  3612  007B28  6FD1               	movwf	main@Z& (0+255),b
  3613  007B2A                     l3624:
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;main.c: 515: }
  3617                           ;main.c: 517: if(B==10){
  3618  007B2A  0100               	movlb	0	; () banked
  3619  007B2C  51D4               	movf	_B& (0+255),w,b
  3620  007B2E  0A0A               	xorlw	10
  3621  007B30  11D5               	iorwf	(_B+1)& (0+255),w,b
  3622  007B32  A4D8               	btfss	status,2,c
  3623  007B34  D034               	goto	l3640
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;main.c: 521: Lcd_Init();
  3627  007B36  EC76  F032         	call	_Lcd_Init	;wreg free
  3628                           
  3629                           ;main.c: 522: Lcd_Cmd(1);
  3630  007B3A  0E01               	movlw	1
  3631  007B3C  ECE3  F031         	call	_Lcd_Cmd
  3632                           
  3633                           ;main.c: 523: Lcd_Cmd(12);
  3634  007B40  0E0C               	movlw	12
  3635  007B42  ECE3  F031         	call	_Lcd_Cmd
  3636                           
  3637                           ;main.c: 524: Lcd_Out2(1,1," 70%");
  3638  007B46  0E01               	movlw	1
  3639  007B48  6E04               	movwf	Lcd_Out2@x,c
  3640  007B4A  0E7F               	movlw	high STR_75
  3641  007B4C  6E06               	movwf	Lcd_Out2@buffer+1,c
  3642  007B4E  0EE2               	movlw	low STR_75
  3643  007B50  6E05               	movwf	Lcd_Out2@buffer,c
  3644  007B52  0E01               	movlw	1
  3645  007B54  ECA5  F02D         	call	_Lcd_Out2
  3646                           
  3647                           ;main.c: 525: Lcd_Out2(2,1," 80%");
  3648  007B58  0E01               	movlw	1
  3649  007B5A  6E04               	movwf	Lcd_Out2@x,c
  3650  007B5C  0E7F               	movlw	high STR_72
  3651  007B5E  6E06               	movwf	Lcd_Out2@buffer+1,c
  3652  007B60  0EE7               	movlw	low STR_72
  3653  007B62  6E05               	movwf	Lcd_Out2@buffer,c
  3654  007B64  0E02               	movlw	2
  3655  007B66  ECA5  F02D         	call	_Lcd_Out2
  3656                           
  3657                           ;main.c: 526: Lcd_Out2(1,6," 90%");
  3658  007B6A  0E06               	movlw	6
  3659  007B6C  6E04               	movwf	Lcd_Out2@x,c
  3660  007B6E  0E7F               	movlw	high STR_73
  3661  007B70  6E06               	movwf	Lcd_Out2@buffer+1,c
  3662  007B72  0EF1               	movlw	low STR_73
  3663  007B74  6E05               	movwf	Lcd_Out2@buffer,c
  3664  007B76  0E01               	movlw	1
  3665  007B78  ECA5  F02D         	call	_Lcd_Out2
  3666                           
  3667                           ;main.c: 527: Lcd_Out2(2,6,"*100%");
  3668  007B7C  0E06               	movlw	6
  3669  007B7E  6E04               	movwf	Lcd_Out2@x,c
  3670  007B80  0E7F               	movlw	high STR_86
  3671  007B82  6E06               	movwf	Lcd_Out2@buffer+1,c
  3672  007B84  0E9A               	movlw	low STR_86
  3673  007B86  6E05               	movwf	Lcd_Out2@buffer,c
  3674  007B88  0E02               	movlw	2
  3675  007B8A  ECA5  F02D         	call	_Lcd_Out2
  3676                           
  3677                           ;main.c: 528: tm_1s();
  3678  007B8E  EC1A  F02E         	call	_tm_1s	;wreg free
  3679                           
  3680                           ;main.c: 529: Z=100;
  3681  007B92  0E00               	movlw	0
  3682  007B94  0100               	movlb	0	; () banked
  3683  007B96  6FD2               	movwf	(main@Z+1)& (0+255),b
  3684  007B98  0E64               	movlw	100
  3685  007B9A  0100               	movlb	0	; () banked
  3686  007B9C  6FD1               	movwf	main@Z& (0+255),b
  3687  007B9E                     l3640:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;main.c: 531: }
  3691                           ;main.c: 532: if(PORTBbits.RB0==1)
  3692  007B9E  A081               	btfss	3969,0,c	;volatile
  3693  007BA0  D00A               	goto	l3646
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;main.c: 533: {
  3697                           ;main.c: 534: B++;
  3698  007BA2  0100               	movlb	0	; () banked
  3699  007BA4  4BD4               	infsnz	_B& (0+255),f,b
  3700  007BA6  2BD5               	incf	(_B+1)& (0+255),f,b
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;main.c: 535: _delay((unsigned long)((10)*(4000000/4000.0)));
  3704  007BA8  0E0D               	movlw	13
  3705  007BAA  6E3C               	movwf	??_main& (0+255),c
  3706  007BAC  0EFC               	movlw	252
  3707  007BAE                     u3597:
  3708  007BAE  2EE8               	decfsz	wreg,f,c
  3709  007BB0  D7FE               	goto	u3597
  3710  007BB2  2E3C               	decfsz	??_main& (0+255),f,c
  3711  007BB4  D7FC               	goto	u3597
  3712  007BB6                     l3646:
  3713                           
  3714                           ;main.c: 536: }
  3715                           ;main.c: 538: if(PORTBbits.RB1==1)
  3716  007BB6  A281               	btfss	3969,1,c	;volatile
  3717  007BB8  D00B               	goto	l211
  3718                           
  3719                           ;main.c: 539: {
  3720                           ;main.c: 540: B--;
  3721  007BBA  0100               	movlb	0	; () banked
  3722  007BBC  07D4               	decf	_B& (0+255),f,b
  3723  007BBE  A0D8               	btfss	status,0,c
  3724  007BC0  07D5               	decf	(_B+1)& (0+255),f,b
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;main.c: 541: _delay((unsigned long)((10)*(4000000/4000.0)));
  3728  007BC2  0E0D               	movlw	13
  3729  007BC4  6E3C               	movwf	??_main& (0+255),c
  3730  007BC6  0EFC               	movlw	252
  3731  007BC8                     u3607:
  3732  007BC8  2EE8               	decfsz	wreg,f,c
  3733  007BCA  D7FE               	goto	u3607
  3734  007BCC  2E3C               	decfsz	??_main& (0+255),f,c
  3735  007BCE  D7FC               	goto	u3607
  3736  007BD0                     l211:
  3737                           
  3738                           ;main.c: 542: }
  3739                           ;main.c: 544: if(B>10){
  3740  007BD0  0E0B               	movlw	11
  3741  007BD2  0100               	movlb	0	; () banked
  3742  007BD4  5DD4               	subwf	_B& (0+255),w,b
  3743  007BD6  0E00               	movlw	0
  3744  007BD8  0100               	movlb	0	; () banked
  3745  007BDA  59D5               	subwfb	(_B+1)& (0+255),w,b
  3746  007BDC  A0D8               	btfss	status,0,c
  3747  007BDE  D006               	goto	l3656
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;main.c: 545: B=1;
  3751  007BE0  0E00               	movlw	0
  3752  007BE2  0100               	movlb	0	; () banked
  3753  007BE4  6FD5               	movwf	(_B+1)& (0+255),b
  3754  007BE6  0E01               	movlw	1
  3755  007BE8  0100               	movlb	0	; () banked
  3756  007BEA  6FD4               	movwf	_B& (0+255),b
  3757  007BEC                     l3656:
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;main.c: 550: }
  3761                           ;main.c: 552: if(PORTBbits.RB1==1 && PORTBbits.RB2==1){
  3762  007BEC  B281               	btfsc	3969,1,c	;volatile
  3763                           
  3764                           ; BSR set to: 0
  3765  007BEE  A481               	btfss	3969,2,c	;volatile
  3766  007BF0  D006               	goto	l3662
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;main.c: 553: t=1;
  3770  007BF2  0E00               	movlw	0
  3771  007BF4  0100               	movlb	0	; () banked
  3772  007BF6  6FE1               	movwf	(_t+1)& (0+255),b
  3773  007BF8  0E01               	movlw	1
  3774  007BFA  0100               	movlb	0	; () banked
  3775  007BFC  6FE0               	movwf	_t& (0+255),b
  3776  007BFE                     l3662:
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;main.c: 554: }
  3780                           ;main.c: 556: }while(t==0);
  3781  007BFE  0100               	movlb	0	; () banked
  3782  007C00  51E1               	movf	(_t+1)& (0+255),w,b
  3783  007C02  11E0               	iorwf	_t& (0+255),w,b
  3784  007C04  B4D8               	btfsc	status,2,c
  3785  007C06  D516               	goto	l3454
  3786  007C08                     l197:
  3787                           
  3788                           ;main.c: 558: }
  3789                           ;main.c: 560: }
  3790                           ;main.c: 561: if(PORTBbits.RB0==1)
  3791  007C08  A081               	btfss	3969,0,c	;volatile
  3792  007C0A  D00A               	goto	l3668
  3793                           
  3794                           ;main.c: 562: {
  3795                           ;main.c: 563: B++;
  3796  007C0C  0100               	movlb	0	; () banked
  3797  007C0E  4BD4               	infsnz	_B& (0+255),f,b
  3798  007C10  2BD5               	incf	(_B+1)& (0+255),f,b
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;main.c: 564: _delay((unsigned long)((10)*(4000000/4000.0)));
  3802  007C12  0E0D               	movlw	13
  3803  007C14  6E3C               	movwf	??_main& (0+255),c
  3804  007C16  0EFC               	movlw	252
  3805  007C18                     u3617:
  3806  007C18  2EE8               	decfsz	wreg,f,c
  3807  007C1A  D7FE               	goto	u3617
  3808  007C1C  2E3C               	decfsz	??_main& (0+255),f,c
  3809  007C1E  D7FC               	goto	u3617
  3810  007C20                     l3668:
  3811                           
  3812                           ;main.c: 565: }
  3813                           ;main.c: 567: if(PORTBbits.RB1==1)
  3814  007C20  A281               	btfss	3969,1,c	;volatile
  3815  007C22  D00B               	goto	l217
  3816                           
  3817                           ;main.c: 568: {
  3818                           ;main.c: 569: B--;
  3819  007C24  0100               	movlb	0	; () banked
  3820  007C26  07D4               	decf	_B& (0+255),f,b
  3821  007C28  A0D8               	btfss	status,0,c
  3822  007C2A  07D5               	decf	(_B+1)& (0+255),f,b
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;main.c: 570: _delay((unsigned long)((10)*(4000000/4000.0)));
  3826  007C2C  0E0D               	movlw	13
  3827  007C2E  6E3C               	movwf	??_main& (0+255),c
  3828  007C30  0EFC               	movlw	252
  3829  007C32                     u3627:
  3830  007C32  2EE8               	decfsz	wreg,f,c
  3831  007C34  D7FE               	goto	u3627
  3832  007C36  2E3C               	decfsz	??_main& (0+255),f,c
  3833  007C38  D7FC               	goto	u3627
  3834  007C3A                     l217:
  3835                           
  3836                           ;main.c: 571: }
  3837                           ;main.c: 573: if(B>2){
  3838  007C3A  0E03               	movlw	3
  3839  007C3C  0100               	movlb	0	; () banked
  3840  007C3E  5DD4               	subwf	_B& (0+255),w,b
  3841  007C40  0E00               	movlw	0
  3842  007C42  0100               	movlb	0	; () banked
  3843  007C44  59D5               	subwfb	(_B+1)& (0+255),w,b
  3844  007C46  A0D8               	btfss	status,0,c
  3845  007C48  D006               	goto	l3678
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;main.c: 574: B=1;
  3849  007C4A  0E00               	movlw	0
  3850  007C4C  0100               	movlb	0	; () banked
  3851  007C4E  6FD5               	movwf	(_B+1)& (0+255),b
  3852  007C50  0E01               	movlw	1
  3853  007C52  0100               	movlb	0	; () banked
  3854  007C54  6FD4               	movwf	_B& (0+255),b
  3855  007C56                     l3678:
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;main.c: 579: }
  3859                           ;main.c: 581: if(PORTBbits.RB0==1 && PORTBbits.RB3==1){
  3860  007C56  B081               	btfsc	3969,0,c	;volatile
  3861                           
  3862                           ; BSR set to: 0
  3863  007C58  A681               	btfss	3969,3,c	;volatile
  3864  007C5A  D006               	goto	l3684
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;main.c: 582: e=1;
  3868  007C5C  0E00               	movlw	0
  3869  007C5E  0100               	movlb	0	; () banked
  3870  007C60  6FD9               	movwf	(_e+1)& (0+255),b
  3871  007C62  0E01               	movlw	1
  3872  007C64  0100               	movlb	0	; () banked
  3873  007C66  6FD8               	movwf	_e& (0+255),b
  3874  007C68                     l3684:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;main.c: 583: }
  3878                           ;main.c: 584: }
  3879                           ;main.c: 585: while(e==0);
  3880  007C68  0100               	movlb	0	; () banked
  3881  007C6A  51D9               	movf	(_e+1)& (0+255),w,b
  3882  007C6C  11D8               	iorwf	_e& (0+255),w,b
  3883  007C6E  B4D8               	btfsc	status,2,c
  3884  007C70  EF1D  F03A         	goto	l3362
  3885  007C74                     l3686:
  3886                           
  3887                           ;main.c: 586: }
  3888                           ;main.c: 587: }
  3889                           ;main.c: 588: if(B==2){
  3890  007C74  0100               	movlb	0	; () banked
  3891  007C76  51D4               	movf	_B& (0+255),w,b
  3892  007C78  0A02               	xorlw	2
  3893  007C7A  11D5               	iorwf	(_B+1)& (0+255),w,b
  3894  007C7C  A4D8               	btfss	status,2,c
  3895  007C7E  D01C               	goto	l3696
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;main.c: 589: Lcd_Init();
  3899  007C80  EC76  F032         	call	_Lcd_Init	;wreg free
  3900                           
  3901                           ;main.c: 590: Lcd_Cmd(1);
  3902  007C84  0E01               	movlw	1
  3903  007C86  ECE3  F031         	call	_Lcd_Cmd
  3904                           
  3905                           ;main.c: 591: Lcd_Cmd(12);
  3906  007C8A  0E0C               	movlw	12
  3907  007C8C  ECE3  F031         	call	_Lcd_Cmd
  3908                           
  3909                           ;main.c: 592: Lcd_Out2(1,1,"   Ingresar");
  3910  007C90  0E01               	movlw	1
  3911  007C92  6E04               	movwf	Lcd_Out2@x,c
  3912  007C94  0E7E               	movlw	high STR_24
  3913  007C96  6E06               	movwf	Lcd_Out2@buffer+1,c
  3914  007C98  0ECD               	movlw	low STR_24
  3915  007C9A  6E05               	movwf	Lcd_Out2@buffer,c
  3916  007C9C  0E01               	movlw	1
  3917  007C9E  ECA5  F02D         	call	_Lcd_Out2
  3918                           
  3919                           ;main.c: 593: Lcd_Out2(2,1,"=> Comenzar");
  3920  007CA2  0E01               	movlw	1
  3921  007CA4  6E04               	movwf	Lcd_Out2@x,c
  3922  007CA6  0E7E               	movlw	high STR_88
  3923  007CA8  6E06               	movwf	Lcd_Out2@buffer+1,c
  3924  007CAA  0EF1               	movlw	low STR_88
  3925  007CAC  6E05               	movwf	Lcd_Out2@buffer,c
  3926  007CAE  0E02               	movlw	2
  3927  007CB0  ECA5  F02D         	call	_Lcd_Out2
  3928                           
  3929                           ;main.c: 594: tm_1s();
  3930  007CB4  EC1A  F02E         	call	_tm_1s	;wreg free
  3931  007CB8                     l3696:
  3932                           
  3933                           ;main.c: 596: }
  3934                           ;main.c: 597: if(PORTBbits.RB2==1){
  3935  007CB8  A481               	btfss	3969,2,c	;volatile
  3936  007CBA  D091               	goto	l223
  3937                           
  3938                           ;main.c: 598: p=0;
  3939  007CBC  0E00               	movlw	0
  3940  007CBE  0100               	movlb	0	; () banked
  3941  007CC0  6FDB               	movwf	(_p+1)& (0+255),b
  3942  007CC2  0E00               	movlw	0
  3943  007CC4  0100               	movlb	0	; () banked
  3944  007CC6  6FDA               	movwf	_p& (0+255),b
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;main.c: 599: Lcd_Init();
  3948  007CC8  EC76  F032         	call	_Lcd_Init	;wreg free
  3949                           
  3950                           ;main.c: 600: Lcd_Cmd(1);
  3951  007CCC  0E01               	movlw	1
  3952  007CCE  ECE3  F031         	call	_Lcd_Cmd
  3953                           
  3954                           ;main.c: 601: Lcd_Cmd(12);
  3955  007CD2  0E0C               	movlw	12
  3956  007CD4  ECE3  F031         	call	_Lcd_Cmd
  3957                           
  3958                           ;main.c: 605: X=A*1000;
  3959  007CD8  0100               	movlb	0	; () banked
  3960  007CDA  C0D3  F001         	movff	main@A,___wmul@multiplier
  3961  007CDE  6A02               	clrf	___wmul@multiplier+1,c
  3962  007CE0  0E03               	movlw	3
  3963  007CE2  6E04               	movwf	___wmul@multiplicand+1,c
  3964  007CE4  0EE8               	movlw	232
  3965  007CE6  6E03               	movwf	___wmul@multiplicand,c
  3966  007CE8  ECBD  F02C         	call	___wmul	;wreg free
  3967  007CEC  C001  F0CF         	movff	?___wmul,main@X
  3968  007CF0  C002  F0D0         	movff	?___wmul+1,main@X+1
  3969                           
  3970                           ;main.c: 607: cant = Conv_Entero(X,cad);
  3971  007CF4  0100               	movlb	0	; () banked
  3972  007CF6  C0CF  F00F         	movff	main@X,Conv_Entero@numero
  3973  007CFA  0100               	movlb	0	; () banked
  3974  007CFC  C0D0  F010         	movff	main@X+1,Conv_Entero@numero+1
  3975  007D00  6A11               	clrf	Conv_Entero@numero+2,c
  3976  007D02  6A12               	clrf	Conv_Entero@numero+3,c
  3977  007D04  0100               	movlb	0	; () banked
  3978  007D06  0E00               	movlw	high main@cad
  3979  007D08  6E14               	movwf	Conv_Entero@conv+1,c
  3980  007D0A  0100               	movlb	0	; () banked
  3981  007D0C  0EA2               	movlw	low main@cad
  3982  007D0E  6E13               	movwf	Conv_Entero@conv,c
  3983  007D10  ECEA  F034         	call	_Conv_Entero	;wreg free
  3984  007D14  500F               	movf	?_Conv_Entero,w,c
  3985  007D16  0100               	movlb	0	; () banked
  3986  007D18  6FCE               	movwf	main@cant& (0+255),b
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;main.c: 608: unsigned char fre=0;
  3990  007D1A  0E00               	movlw	0
  3991  007D1C  0100               	movlb	0	; () banked
  3992  007D1E  6FCC               	movwf	main@fre& (0+255),b
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;main.c: 610: PWM_generar(Z,M);
  3996  007D20  C0D1  F00E         	movff	main@Z,PWM_generar@ciclo
  3997  007D24  C0D2  F00F         	movff	main@Z+1,PWM_generar@ciclo+1
  3998  007D28  C0D6  F010         	movff	_M,PWM_generar@frecuencia
  3999  007D2C  C0D7  F011         	movff	_M+1,PWM_generar@frecuencia+1
  4000  007D30  ECD6  F035         	call	_PWM_generar	;wreg free
  4001                           
  4002                           ;main.c: 612: Lcd_Out2(1,1,"F:  000 hz");
  4003  007D34  0E01               	movlw	1
  4004  007D36  6E04               	movwf	Lcd_Out2@x,c
  4005  007D38  0E7F               	movlw	high STR_89
  4006  007D3A  6E06               	movwf	Lcd_Out2@buffer+1,c
  4007  007D3C  0E08               	movlw	low STR_89
  4008  007D3E  6E05               	movwf	Lcd_Out2@buffer,c
  4009  007D40  0E01               	movlw	1
  4010  007D42  ECA5  F02D         	call	_Lcd_Out2
  4011                           
  4012                           ;main.c: 613: lcd_goto(4,1);
  4013  007D46  0E00               	movlw	0
  4014  007D48  6E05               	movwf	lcd_goto@x+1,c
  4015  007D4A  0E04               	movlw	4
  4016  007D4C  6E04               	movwf	lcd_goto@x,c
  4017  007D4E  0E00               	movlw	0
  4018  007D50  6E07               	movwf	lcd_goto@y+1,c
  4019  007D52  0E01               	movlw	1
  4020  007D54  6E06               	movwf	lcd_goto@y,c
  4021  007D56  ECF1  F02C         	call	_lcd_goto	;wreg free
  4022                           
  4023                           ;main.c: 614: Lcd_Chr_CP(A);
  4024  007D5A  0100               	movlb	0	; () banked
  4025  007D5C  51D3               	movf	main@A& (0+255),w,b
  4026  007D5E  EC0A  F033         	call	_Lcd_Chr_CP
  4027                           
  4028                           ;main.c: 615: Lcd_Out2(2,1,"C: ");
  4029  007D62  0E01               	movlw	1
  4030  007D64  6E04               	movwf	Lcd_Out2@x,c
  4031  007D66  0E7F               	movlw	high STR_90
  4032  007D68  6E06               	movwf	Lcd_Out2@buffer+1,c
  4033  007D6A  0EFB               	movlw	low STR_90
  4034  007D6C  6E05               	movwf	Lcd_Out2@buffer,c
  4035  007D6E  0E02               	movlw	2
  4036  007D70  ECA5  F02D         	call	_Lcd_Out2
  4037                           
  4038                           ;main.c: 616: Lcd_Out2(2,7,"%");
  4039  007D74  0E07               	movlw	7
  4040  007D76  6E04               	movwf	Lcd_Out2@x,c
  4041  007D78  0E7F               	movlw	high (STR_74+4)
  4042  007D7A  6E06               	movwf	Lcd_Out2@buffer+1,c
  4043  007D7C  0E98               	movlw	low (STR_74+4)
  4044  007D7E  6E05               	movwf	Lcd_Out2@buffer,c
  4045  007D80  0E02               	movlw	2
  4046  007D82  ECA5  F02D         	call	_Lcd_Out2
  4047                           
  4048                           ;main.c: 617: cantidad = Conv_Entero(Z,cadena);
  4049  007D86  0100               	movlb	0	; () banked
  4050  007D88  C0D1  F00F         	movff	main@Z,Conv_Entero@numero
  4051  007D8C  0100               	movlb	0	; () banked
  4052  007D8E  C0D2  F010         	movff	main@Z+1,Conv_Entero@numero+1
  4053  007D92  6A11               	clrf	Conv_Entero@numero+2,c
  4054  007D94  6A12               	clrf	Conv_Entero@numero+3,c
  4055  007D96  0100               	movlb	0	; () banked
  4056  007D98  0E00               	movlw	high main@cadena
  4057  007D9A  6E14               	movwf	Conv_Entero@conv+1,c
  4058  007D9C  0100               	movlb	0	; () banked
  4059  007D9E  0EB6               	movlw	low main@cadena
  4060  007DA0  6E13               	movwf	Conv_Entero@conv,c
  4061  007DA2  ECEA  F034         	call	_Conv_Entero	;wreg free
  4062  007DA6  500F               	movf	?_Conv_Entero,w,c
  4063  007DA8  0100               	movlb	0	; () banked
  4064  007DAA  6FCD               	movwf	main@cantidad& (0+255),b
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;main.c: 618: Lcd_Out(2,4,cadena);
  4068  007DAC  0E04               	movlw	4
  4069  007DAE  6E04               	movwf	Lcd_Out@x,c
  4070  007DB0  0100               	movlb	0	; () banked
  4071  007DB2  0E00               	movlw	high main@cadena
  4072  007DB4  6E06               	movwf	Lcd_Out@buffer+1,c
  4073  007DB6  0100               	movlb	0	; () banked
  4074  007DB8  0EB6               	movlw	low main@cadena
  4075  007DBA  6E05               	movwf	Lcd_Out@buffer,c
  4076  007DBC  0E02               	movlw	2
  4077  007DBE  EC43  F02D         	call	_Lcd_Out
  4078  007DC2                     l3728:
  4079                           
  4080                           ;main.c: 622: if(PORTBbits.RB0==1 && PORTBbits.RB2==1){
  4081  007DC2  B081               	btfsc	3969,0,c	;volatile
  4082  007DC4  A481               	btfss	3969,2,c	;volatile
  4083  007DC6  D006               	goto	l3734
  4084                           
  4085                           ;main.c: 623: p=1;
  4086  007DC8  0E00               	movlw	0
  4087  007DCA  0100               	movlb	0	; () banked
  4088  007DCC  6FDB               	movwf	(_p+1)& (0+255),b
  4089  007DCE  0E01               	movlw	1
  4090  007DD0  0100               	movlb	0	; () banked
  4091  007DD2  6FDA               	movwf	_p& (0+255),b
  4092  007DD4                     l3734:
  4093                           
  4094                           ;main.c: 624: }
  4095                           ;main.c: 625: }while(p==0);
  4096  007DD4  0100               	movlb	0	; () banked
  4097  007DD6  51DB               	movf	(_p+1)& (0+255),w,b
  4098  007DD8  11DA               	iorwf	_p& (0+255),w,b
  4099  007DDA  B4D8               	btfsc	status,2,c
  4100  007DDC  D7F2               	goto	l3728
  4101  007DDE                     l223:
  4102                           
  4103                           ;main.c: 626: }
  4104                           ;main.c: 627: if(PORTBbits.RB0==1 && PORTBbits.RB2==1){
  4105  007DDE  B081               	btfsc	3969,0,c	;volatile
  4106  007DE0  A481               	btfss	3969,2,c	;volatile
  4107  007DE2  D006               	goto	l3740
  4108                           
  4109                           ;main.c: 628: w=1;
  4110  007DE4  0E00               	movlw	0
  4111  007DE6  0100               	movlb	0	; () banked
  4112  007DE8  6FE3               	movwf	(_w+1)& (0+255),b
  4113  007DEA  0E01               	movlw	1
  4114  007DEC  0100               	movlb	0	; () banked
  4115  007DEE  6FE2               	movwf	_w& (0+255),b
  4116  007DF0                     l3740:
  4117                           
  4118                           ;main.c: 629: }
  4119                           ;main.c: 631: if(PORTBbits.RB0==1)
  4120  007DF0  A081               	btfss	3969,0,c	;volatile
  4121  007DF2  D00A               	goto	l3746
  4122                           
  4123                           ;main.c: 632: {
  4124                           ;main.c: 633: B++;
  4125  007DF4  0100               	movlb	0	; () banked
  4126  007DF6  4BD4               	infsnz	_B& (0+255),f,b
  4127  007DF8  2BD5               	incf	(_B+1)& (0+255),f,b
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;main.c: 634: _delay((unsigned long)((10)*(4000000/4000.0)));
  4131  007DFA  0E0D               	movlw	13
  4132  007DFC  6E3C               	movwf	??_main& (0+255),c
  4133  007DFE  0EFC               	movlw	252
  4134  007E00                     u3637:
  4135  007E00  2EE8               	decfsz	wreg,f,c
  4136  007E02  D7FE               	goto	u3637
  4137  007E04  2E3C               	decfsz	??_main& (0+255),f,c
  4138  007E06  D7FC               	goto	u3637
  4139  007E08                     l3746:
  4140                           
  4141                           ;main.c: 635: }
  4142                           ;main.c: 637: if(PORTBbits.RB1==1)
  4143  007E08  A281               	btfss	3969,1,c	;volatile
  4144  007E0A  D00B               	goto	l229
  4145                           
  4146                           ;main.c: 638: {
  4147                           ;main.c: 639: B--;
  4148  007E0C  0100               	movlb	0	; () banked
  4149  007E0E  07D4               	decf	_B& (0+255),f,b
  4150  007E10  A0D8               	btfss	status,0,c
  4151  007E12  07D5               	decf	(_B+1)& (0+255),f,b
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;main.c: 640: _delay((unsigned long)((10)*(4000000/4000.0)));
  4155  007E14  0E0D               	movlw	13
  4156  007E16  6E3C               	movwf	??_main& (0+255),c
  4157  007E18  0EFC               	movlw	252
  4158  007E1A                     u3647:
  4159  007E1A  2EE8               	decfsz	wreg,f,c
  4160  007E1C  D7FE               	goto	u3647
  4161  007E1E  2E3C               	decfsz	??_main& (0+255),f,c
  4162  007E20  D7FC               	goto	u3647
  4163  007E22                     l229:
  4164                           
  4165                           ;main.c: 641: }
  4166                           ;main.c: 642: if(B>3){
  4167  007E22  0E04               	movlw	4
  4168  007E24  0100               	movlb	0	; () banked
  4169  007E26  5DD4               	subwf	_B& (0+255),w,b
  4170  007E28  0E00               	movlw	0
  4171  007E2A  0100               	movlb	0	; () banked
  4172  007E2C  59D5               	subwfb	(_B+1)& (0+255),w,b
  4173  007E2E  A0D8               	btfss	status,0,c
  4174  007E30  D006               	goto	l3756
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;main.c: 643: B=1;
  4178  007E32  0E00               	movlw	0
  4179  007E34  0100               	movlb	0	; () banked
  4180  007E36  6FD5               	movwf	(_B+1)& (0+255),b
  4181  007E38  0E01               	movlw	1
  4182  007E3A  0100               	movlb	0	; () banked
  4183  007E3C  6FD4               	movwf	_B& (0+255),b
  4184  007E3E                     l3756:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;main.c: 648: }
  4188                           ;main.c: 649: } while(w==0);
  4189  007E3E  0100               	movlb	0	; () banked
  4190  007E40  51E3               	movf	(_w+1)& (0+255),w,b
  4191  007E42  11E2               	iorwf	_w& (0+255),w,b
  4192  007E44  B4D8               	btfsc	status,2,c
  4193  007E46  EFD1  F039         	goto	l3338
  4194  007E4A                     l3758:
  4195                           
  4196                           ;main.c: 650: }
  4197                           ;main.c: 656: }
  4198                           ;main.c: 659: if(B>3){
  4199  007E4A  0E04               	movlw	4
  4200  007E4C  0100               	movlb	0	; () banked
  4201  007E4E  5DD4               	subwf	_B& (0+255),w,b
  4202  007E50  0E00               	movlw	0
  4203  007E52  0100               	movlb	0	; () banked
  4204  007E54  59D5               	subwfb	(_B+1)& (0+255),w,b
  4205  007E56  A0D8               	btfss	status,0,c
  4206  007E58  EF17  F037         	goto	l3060
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;main.c: 660: B=1;
  4210  007E5C  0E00               	movlw	0
  4211  007E5E  0100               	movlb	0	; () banked
  4212  007E60  6FD5               	movwf	(_B+1)& (0+255),b
  4213  007E62  0E01               	movlw	1
  4214  007E64  0100               	movlb	0	; () banked
  4215  007E66  6FD4               	movwf	_B& (0+255),b
  4216  007E68  EF17  F037         	goto	l3060
  4217  007E6C                     __end_of_main:
  4218                           	opt stack 0
  4219                           tblptru	equ	0xFF8
  4220                           tblptrh	equ	0xFF7
  4221                           tblptrl	equ	0xFF6
  4222                           tablat	equ	0xFF5
  4223                           postinc0	equ	0xFEE
  4224                           wreg	equ	0xFE8
  4225                           postdec1	equ	0xFE5
  4226                           fsr1l	equ	0xFE1
  4227                           status	equ	0xFD8
  4228                           
  4229 ;; *************** function _tm_1s *****************
  4230 ;; Defined at:
  4231 ;;		line 4 in file "delays.h"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;		None               void
  4238 ;; Registers used:
  4239 ;;		wreg
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4247 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4248 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4249 ;;Total ram usage:        1 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_main
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text1
  4259  005C34                     __ptext1:
  4260                           	opt stack 0
  4261  005C34                     _tm_1s:
  4262                           	opt stack 30
  4263                           
  4264                           ;delays.h: 5: _delay((unsigned long)((100)*(4000000/4000.0)));
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;incstack = 0
  4268  005C34  0E82               	movlw	130
  4269  005C36  6E01               	movwf	??_tm_1s& (0+255),c
  4270  005C38  0EDE               	movlw	222
  4271  005C3A                     u3657:
  4272  005C3A  2EE8               	decfsz	wreg,f,c
  4273  005C3C  D7FE               	goto	u3657
  4274  005C3E  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4275  005C40  D7FC               	goto	u3657
  4276                           
  4277                           ;delays.h: 6: _delay((unsigned long)((100)*(4000000/4000.0)));
  4278  005C42  0E82               	movlw	130
  4279  005C44  6E01               	movwf	??_tm_1s& (0+255),c
  4280  005C46  0EDE               	movlw	222
  4281  005C48                     u3667:
  4282  005C48  2EE8               	decfsz	wreg,f,c
  4283  005C4A  D7FE               	goto	u3667
  4284  005C4C  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4285  005C4E  D7FC               	goto	u3667
  4286                           
  4287                           ;delays.h: 7: _delay((unsigned long)((100)*(4000000/4000.0)));
  4288  005C50  0E82               	movlw	130
  4289  005C52  6E01               	movwf	??_tm_1s& (0+255),c
  4290  005C54  0EDE               	movlw	222
  4291  005C56                     u3677:
  4292  005C56  2EE8               	decfsz	wreg,f,c
  4293  005C58  D7FE               	goto	u3677
  4294  005C5A  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4295  005C5C  D7FC               	goto	u3677
  4296                           
  4297                           ;delays.h: 8: _delay((unsigned long)((100)*(4000000/4000.0)));
  4298  005C5E  0E82               	movlw	130
  4299  005C60  6E01               	movwf	??_tm_1s& (0+255),c
  4300  005C62  0EDE               	movlw	222
  4301  005C64                     u3687:
  4302  005C64  2EE8               	decfsz	wreg,f,c
  4303  005C66  D7FE               	goto	u3687
  4304  005C68  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4305  005C6A  D7FC               	goto	u3687
  4306                           
  4307                           ;delays.h: 9: _delay((unsigned long)((100)*(4000000/4000.0)));
  4308  005C6C  0E82               	movlw	130
  4309  005C6E  6E01               	movwf	??_tm_1s& (0+255),c
  4310  005C70  0EDE               	movlw	222
  4311  005C72                     u3697:
  4312  005C72  2EE8               	decfsz	wreg,f,c
  4313  005C74  D7FE               	goto	u3697
  4314  005C76  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4315  005C78  D7FC               	goto	u3697
  4316                           
  4317                           ;delays.h: 10: _delay((unsigned long)((100)*(4000000/4000.0)));
  4318  005C7A  0E82               	movlw	130
  4319  005C7C  6E01               	movwf	??_tm_1s& (0+255),c
  4320  005C7E  0EDE               	movlw	222
  4321  005C80                     u3707:
  4322  005C80  2EE8               	decfsz	wreg,f,c
  4323  005C82  D7FE               	goto	u3707
  4324  005C84  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4325  005C86  D7FC               	goto	u3707
  4326                           
  4327                           ;delays.h: 11: _delay((unsigned long)((100)*(4000000/4000.0)));
  4328  005C88  0E82               	movlw	130
  4329  005C8A  6E01               	movwf	??_tm_1s& (0+255),c
  4330  005C8C  0EDE               	movlw	222
  4331  005C8E                     u3717:
  4332  005C8E  2EE8               	decfsz	wreg,f,c
  4333  005C90  D7FE               	goto	u3717
  4334  005C92  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4335  005C94  D7FC               	goto	u3717
  4336                           
  4337                           ;delays.h: 12: _delay((unsigned long)((100)*(4000000/4000.0)));
  4338  005C96  0E82               	movlw	130
  4339  005C98  6E01               	movwf	??_tm_1s& (0+255),c
  4340  005C9A  0EDE               	movlw	222
  4341  005C9C                     u3727:
  4342  005C9C  2EE8               	decfsz	wreg,f,c
  4343  005C9E  D7FE               	goto	u3727
  4344  005CA0  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4345  005CA2  D7FC               	goto	u3727
  4346                           
  4347                           ;delays.h: 13: _delay((unsigned long)((100)*(4000000/4000.0)));
  4348  005CA4  0E82               	movlw	130
  4349  005CA6  6E01               	movwf	??_tm_1s& (0+255),c
  4350  005CA8  0EDE               	movlw	222
  4351  005CAA                     u3737:
  4352  005CAA  2EE8               	decfsz	wreg,f,c
  4353  005CAC  D7FE               	goto	u3737
  4354  005CAE  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4355  005CB0  D7FC               	goto	u3737
  4356                           
  4357                           ;delays.h: 14: _delay((unsigned long)((100)*(4000000/4000.0)));
  4358  005CB2  0E82               	movlw	130
  4359  005CB4  6E01               	movwf	??_tm_1s& (0+255),c
  4360  005CB6  0EDE               	movlw	222
  4361  005CB8                     u3747:
  4362  005CB8  2EE8               	decfsz	wreg,f,c
  4363  005CBA  D7FE               	goto	u3747
  4364  005CBC  2E01               	decfsz	??_tm_1s& (0+255),f,c
  4365  005CBE  D7FC               	goto	u3747
  4366  005CC0  0012               	return	
  4367  005CC2                     __end_of_tm_1s:
  4368                           	opt stack 0
  4369                           tblptru	equ	0xFF8
  4370                           tblptrh	equ	0xFF7
  4371                           tblptrl	equ	0xFF6
  4372                           tablat	equ	0xFF5
  4373                           postinc0	equ	0xFEE
  4374                           wreg	equ	0xFE8
  4375                           postdec1	equ	0xFE5
  4376                           fsr1l	equ	0xFE1
  4377                           status	equ	0xFD8
  4378                           
  4379 ;; *************** function _lcd_goto *****************
  4380 ;; Defined at:
  4381 ;;		line 161 in file "LCD.h"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  x               2    3[COMRAM] int 
  4384 ;;  y               2    5[COMRAM] int 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  data            1    9[COMRAM] unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;		None               void
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4396 ;;      Params:         4       0       0       0       0       0       0       0       0
  4397 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4398 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4399 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4400 ;;Total ram usage:        7 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    1
  4403 ;; This function calls:
  4404 ;;		_Lcd_Cmd
  4405 ;; This function is called by:
  4406 ;;		_main
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text2
  4411  0059E2                     __ptext2:
  4412                           	opt stack 0
  4413  0059E2                     _lcd_goto:
  4414                           	opt stack 29
  4415                           
  4416                           ;LCD.h: 162: unsigned char data;
  4417                           ;LCD.h: 163: switch (y) {
  4418                           
  4419                           ;incstack = 0
  4420  0059E2  D00D               	goto	l2730
  4421  0059E4                     l2720:
  4422  0059E4  5004               	movf	lcd_goto@x,w,c
  4423  0059E6  0F80               	addlw	128
  4424  0059E8  D008               	goto	L11
  4425  0059EA                     l2722:
  4426  0059EA  5004               	movf	lcd_goto@x,w,c
  4427  0059EC  0FC0               	addlw	192
  4428  0059EE  D005               	goto	L11
  4429  0059F0                     l2724:
  4430  0059F0  5004               	movf	lcd_goto@x,w,c
  4431  0059F2  0F94               	addlw	148
  4432  0059F4  D002               	goto	L11
  4433  0059F6                     l2726:
  4434  0059F6  5004               	movf	lcd_goto@x,w,c
  4435  0059F8  0FD4               	addlw	212
  4436  0059FA                     L11:
  4437  0059FA  6E0A               	movwf	lcd_goto@data,c
  4438  0059FC  D015               	goto	l2732
  4439  0059FE                     l2730:
  4440  0059FE  C006  F008         	movff	lcd_goto@y,??_lcd_goto
  4441  005A02  C007  F009         	movff	lcd_goto@y+1,??_lcd_goto+1
  4442                           
  4443                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4444                           ; Switch size 1, requested type "space"
  4445                           ; Number of cases is 1, Range of values is 0 to 0
  4446                           ; switch strategies available:
  4447                           ; Name         Instructions Cycles
  4448                           ; simple_byte            4     3 (average)
  4449                           ;	Chosen strategy is simple_byte
  4450  005A06  5009               	movf	??_lcd_goto+1,w,c
  4451  005A08  0A00               	xorlw	0	; case 0
  4452  005A0A  A4D8               	btfss	status,2,c
  4453  005A0C  D00D               	goto	l2732
  4454                           
  4455                           ; Switch size 1, requested type "space"
  4456                           ; Number of cases is 4, Range of values is 1 to 4
  4457                           ; switch strategies available:
  4458                           ; Name         Instructions Cycles
  4459                           ; simple_byte           13     7 (average)
  4460                           ;	Chosen strategy is simple_byte
  4461  005A0E  5008               	movf	??_lcd_goto,w,c
  4462  005A10  0A01               	xorlw	1	; case 1
  4463  005A12  B4D8               	btfsc	status,2,c
  4464  005A14  D7E7               	goto	l2720
  4465  005A16  0A03               	xorlw	3	; case 2
  4466  005A18  B4D8               	btfsc	status,2,c
  4467  005A1A  D7E7               	goto	l2722
  4468  005A1C  0A01               	xorlw	1	; case 3
  4469  005A1E  B4D8               	btfsc	status,2,c
  4470  005A20  D7E7               	goto	l2724
  4471  005A22  0A07               	xorlw	7	; case 4
  4472  005A24  B4D8               	btfsc	status,2,c
  4473  005A26  D7E7               	goto	l2726
  4474  005A28                     l2732:
  4475                           
  4476                           ;LCD.h: 170: Lcd_Cmd(data);
  4477  005A28  500A               	movf	lcd_goto@data,w,c
  4478  005A2A  ECE3  F031         	call	_Lcd_Cmd
  4479  005A2E  0012               	return	
  4480  005A30                     __end_of_lcd_goto:
  4481                           	opt stack 0
  4482                           tblptru	equ	0xFF8
  4483                           tblptrh	equ	0xFF7
  4484                           tblptrl	equ	0xFF6
  4485                           tablat	equ	0xFF5
  4486                           postinc0	equ	0xFEE
  4487                           wreg	equ	0xFE8
  4488                           postdec1	equ	0xFE5
  4489                           fsr1l	equ	0xFE1
  4490                           status	equ	0xFD8
  4491                           
  4492 ;; *************** function ___wmul *****************
  4493 ;; Defined at:
  4494 ;;		line 15 in file "/opt/microchip/xc8/v1.32/sources/common/Umul16.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  multiplier      2    0[COMRAM] unsigned int 
  4497 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  product         2    4[COMRAM] unsigned int 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  2    0[COMRAM] unsigned int 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0, prodl, prodh
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4509 ;;      Params:         4       0       0       0       0       0       0       0       0
  4510 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4512 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4513 ;;Total ram usage:        6 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_main
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text3
  4523  00597A                     __ptext3:
  4524                           	opt stack 0
  4525  00597A                     ___wmul:
  4526                           	opt stack 30
  4527                           
  4528                           ;incstack = 0
  4529  00597A  5001               	movf	___wmul@multiplier,w,c
  4530  00597C  0203               	mulwf	___wmul@multiplicand,c
  4531  00597E  CFF3 F005          	movff	prodl,___wmul@product
  4532  005982  CFF4 F006          	movff	prodh,___wmul@product+1
  4533  005986  5001               	movf	___wmul@multiplier,w,c
  4534  005988  0204               	mulwf	___wmul@multiplicand+1,c
  4535  00598A  50F3               	movf	prodl,w,c
  4536  00598C  2606               	addwf	___wmul@product+1,f,c
  4537  00598E  5002               	movf	___wmul@multiplier+1,w,c
  4538  005990  0203               	mulwf	___wmul@multiplicand,c
  4539  005992  50F3               	movf	prodl,w,c
  4540  005994  2606               	addwf	___wmul@product+1,f,c
  4541  005996  C005  F001         	movff	___wmul@product,?___wmul
  4542  00599A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4543  00599E  0012               	return	
  4544  0059A0                     __end_of___wmul:
  4545                           	opt stack 0
  4546                           tblptru	equ	0xFF8
  4547                           tblptrh	equ	0xFF7
  4548                           tblptrl	equ	0xFF6
  4549                           tablat	equ	0xFF5
  4550                           prodh	equ	0xFF4
  4551                           prodl	equ	0xFF3
  4552                           postinc0	equ	0xFEE
  4553                           wreg	equ	0xFE8
  4554                           postdec1	equ	0xFE5
  4555                           fsr1l	equ	0xFE1
  4556                           status	equ	0xFD8
  4557                           
  4558 ;; *************** function _TRI_3 *****************
  4559 ;; Defined at:
  4560 ;;		line 65 in file "TRIANGULAR.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  valoresSeno    40   13[COMRAM] int [20]
  4565 ;;  i               2   57[COMRAM] int 
  4566 ;;  j               2   55[COMRAM] int 
  4567 ;;  k               2   53[COMRAM] int 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;		None               void
  4570 ;; Registers used:
  4571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4577 ;;      Params:         0       0       0       0       0       0       0       0       0
  4578 ;;      Locals:        46       0       0       0       0       0       0       0       0
  4579 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4580 ;;      Totals:        51       0       0       0       0       0       0       0       0
  4581 ;;Total ram usage:       51 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:    1
  4584 ;; This function calls:
  4585 ;;		___awdiv
  4586 ;; This function is called by:
  4587 ;;		_main
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text4
  4592  00688A                     __ptext4:
  4593                           	opt stack 0
  4594  00688A                     _TRI_3:
  4595                           	opt stack 29
  4596                           
  4597                           ;TRIANGULAR.c: 66: OSCCON=0b01010111;
  4598                           
  4599                           ;incstack = 0
  4600  00688A  0E57               	movlw	87
  4601  00688C  6ED3               	movwf	4051,c	;volatile
  4602                           
  4603                           ;TRIANGULAR.c: 67: TRISAbits.RA6=0;
  4604  00688E  9C92               	bcf	3986,6,c	;volatile
  4605                           
  4606                           ;TRIANGULAR.c: 68: TRISCbits.RC2=0;
  4607  006890  9494               	bcf	3988,2,c	;volatile
  4608                           
  4609                           ;TRIANGULAR.c: 69: int valoresSeno [20]= {10,20,30,40,50,60,70,80,90,100,90,80,70,60,50,
      +                          40,30,20,10,0};
  4610  006892  EE21  F078         	lfsr	2,TRI_3@F7364
  4611  006896  EE10  F00E         	lfsr	1,TRI_3@valoresSeno
  4612  00689A  0E28               	movlw	40
  4613  00689C                     u2491:
  4614  00689C  CFDE FFE6          	movff	postinc2,postinc1
  4615  0068A0  2EE8               	decfsz	wreg,f,c
  4616  0068A2  D7FC               	goto	u2491
  4617                           
  4618                           ;TRIANGULAR.c: 70: int i, j,k;
  4619                           ;TRIANGULAR.c: 71: for (i=0;i<20;i++){
  4620  0068A4  0E00               	movlw	0
  4621  0068A6  6E3B               	movwf	TRI_3@i+1,c
  4622  0068A8  0E00               	movlw	0
  4623  0068AA  6E3A               	movwf	TRI_3@i,c
  4624  0068AC  503B               	movf	TRI_3@i+1,w,c
  4625  0068AE  0A80               	xorlw	128
  4626  0068B0  0F80               	addlw	-128
  4627  0068B2  0E14               	movlw	20
  4628  0068B4  B4D8               	btfsc	status,2,c
  4629  0068B6  5C3A               	subwf	TRI_3@i,w,c
  4630  0068B8  B0D8               	btfsc	status,0,c
  4631  0068BA  D02B               	goto	l2970
  4632                           
  4633                           ;TRIANGULAR.c: 72: valoresSeno [i]=valoresSeno [i]/4;
  4634  0068BC  0E0E               	movlw	low TRI_3@valoresSeno
  4635  0068BE  6E09               	movwf	??_TRI_3& (0+255),c
  4636  0068C0  0E00               	movlw	high TRI_3@valoresSeno
  4637  0068C2  6E0A               	movwf	(??_TRI_3+1)& (0+255),c
  4638  0068C4  90D8               	bcf	status,0,c
  4639  0068C6  343A               	rlcf	TRI_3@i,w,c
  4640  0068C8  6ED9               	movwf	fsr2l,c
  4641  0068CA  343B               	rlcf	TRI_3@i+1,w,c
  4642  0068CC  6EDA               	movwf	fsr2h,c
  4643  0068CE  5009               	movf	??_TRI_3,w,c
  4644  0068D0  26D9               	addwf	fsr2l,f,c
  4645  0068D2  500A               	movf	??_TRI_3+1,w,c
  4646  0068D4  22DA               	addwfc	fsr2h,f,c
  4647  0068D6  CFDE F001          	movff	postinc2,___awdiv@dividend
  4648  0068DA  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  4649  0068DE  0E00               	movlw	0
  4650  0068E0  6E04               	movwf	___awdiv@divisor+1,c
  4651  0068E2  0E04               	movlw	4
  4652  0068E4  6E03               	movwf	___awdiv@divisor,c
  4653  0068E6  ECB1  F02E         	call	___awdiv	;wreg free
  4654  0068EA  0E0E               	movlw	low TRI_3@valoresSeno
  4655  0068EC  6E0B               	movwf	(??_TRI_3+2)& (0+255),c
  4656  0068EE  0E00               	movlw	high TRI_3@valoresSeno
  4657  0068F0  6E0C               	movwf	(??_TRI_3+3)& (0+255),c
  4658  0068F2  90D8               	bcf	status,0,c
  4659  0068F4  343A               	rlcf	TRI_3@i,w,c
  4660  0068F6  6ED9               	movwf	fsr2l,c
  4661  0068F8  343B               	rlcf	TRI_3@i+1,w,c
  4662  0068FA  6EDA               	movwf	fsr2h,c
  4663  0068FC  500B               	movf	??_TRI_3+2,w,c
  4664  0068FE  26D9               	addwf	fsr2l,f,c
  4665  006900  500C               	movf	??_TRI_3+3,w,c
  4666  006902  22DA               	addwfc	fsr2h,f,c
  4667  006904  C001  FFDE         	movff	?___awdiv,postinc2
  4668  006908  C002  FFDD         	movff	?___awdiv+1,postdec2
  4669  00690C  4A3A               	infsnz	TRI_3@i,f,c
  4670  00690E  2A3B               	incf	TRI_3@i+1,f,c
  4671  006910  D7CD               	goto	L12
  4672  006912                     l2970:
  4673                           
  4674                           ;TRIANGULAR.c: 77: for (i=0;i<20;i++){
  4675  006912  0E00               	movlw	0
  4676  006914  6E3B               	movwf	TRI_3@i+1,c
  4677  006916  0E00               	movlw	0
  4678  006918  6E3A               	movwf	TRI_3@i,c
  4679  00691A  503B               	movf	TRI_3@i+1,w,c
  4680  00691C  0A80               	xorlw	128
  4681  00691E  0F80               	addlw	-128
  4682  006920  0E14               	movlw	20
  4683  006922  B4D8               	btfsc	status,2,c
  4684  006924  5C3A               	subwf	TRI_3@i,w,c
  4685  006926  B0D8               	btfsc	status,0,c
  4686  006928  0012               	return	
  4687                           
  4688                           ;TRIANGULAR.c: 78: for (j=0;j<valoresSeno[i];j++){
  4689  00692A  0E00               	movlw	0
  4690  00692C  6E39               	movwf	TRI_3@j+1,c
  4691  00692E  0E00               	movlw	0
  4692  006930  6E38               	movwf	TRI_3@j,c
  4693  006932  D004               	goto	l2980
  4694  006934                     l377:
  4695                           
  4696                           ;TRIANGULAR.c: 79: PORTCbits.RC2=1;
  4697  006934  8482               	bsf	3970,2,c	;volatile
  4698                           
  4699                           ;TRIANGULAR.c: 80: PORTAbits.RA6=1;
  4700  006936  8C80               	bsf	3968,6,c	;volatile
  4701  006938  4A38               	infsnz	TRI_3@j,f,c
  4702  00693A  2A39               	incf	TRI_3@j+1,f,c
  4703  00693C                     l2980:
  4704  00693C  0E0E               	movlw	low TRI_3@valoresSeno
  4705  00693E  6E09               	movwf	??_TRI_3& (0+255),c
  4706  006940  0E00               	movlw	high TRI_3@valoresSeno
  4707  006942  6E0A               	movwf	(??_TRI_3+1)& (0+255),c
  4708  006944  90D8               	bcf	status,0,c
  4709  006946  343A               	rlcf	TRI_3@i,w,c
  4710  006948  6ED9               	movwf	fsr2l,c
  4711  00694A  343B               	rlcf	TRI_3@i+1,w,c
  4712  00694C  6EDA               	movwf	fsr2h,c
  4713  00694E  5009               	movf	??_TRI_3,w,c
  4714  006950  26D9               	addwf	fsr2l,f,c
  4715  006952  500A               	movf	??_TRI_3+1,w,c
  4716  006954  22DA               	addwfc	fsr2h,f,c
  4717  006956  CFDE F00B          	movff	postinc2,??_TRI_3+2
  4718  00695A  CFDD F00C          	movff	postdec2,??_TRI_3+3
  4719  00695E  5039               	movf	TRI_3@j+1,w,c
  4720  006960  0A80               	xorlw	128
  4721  006962  6E0D               	movwf	(??_TRI_3+4)& (0+255),c
  4722  006964  500B               	movf	??_TRI_3+2,w,c
  4723  006966  5C38               	subwf	TRI_3@j,w,c
  4724  006968  500C               	movf	??_TRI_3+3,w,c
  4725  00696A  0A80               	xorlw	128
  4726  00696C  580D               	subwfb	(??_TRI_3+4)& (0+255),w,c
  4727  00696E  A0D8               	btfss	status,0,c
  4728  006970  D7E1               	goto	l377
  4729                           
  4730                           ;TRIANGULAR.c: 81: }
  4731                           ;TRIANGULAR.c: 82: k=100/4-valoresSeno[i];
  4732  006972  0E0E               	movlw	low TRI_3@valoresSeno
  4733  006974  6E09               	movwf	??_TRI_3& (0+255),c
  4734  006976  0E00               	movlw	high TRI_3@valoresSeno
  4735  006978  6E0A               	movwf	(??_TRI_3+1)& (0+255),c
  4736  00697A  90D8               	bcf	status,0,c
  4737  00697C  343A               	rlcf	TRI_3@i,w,c
  4738  00697E  6ED9               	movwf	fsr2l,c
  4739  006980  343B               	rlcf	TRI_3@i+1,w,c
  4740  006982  6EDA               	movwf	fsr2h,c
  4741  006984  5009               	movf	??_TRI_3,w,c
  4742  006986  26D9               	addwf	fsr2l,f,c
  4743  006988  500A               	movf	??_TRI_3+1,w,c
  4744  00698A  22DA               	addwfc	fsr2h,f,c
  4745  00698C  CFDE F00B          	movff	postinc2,??_TRI_3+2
  4746  006990  CFDD F00C          	movff	postdec2,??_TRI_3+3
  4747  006994  1E0B               	comf	??_TRI_3+2,f,c
  4748  006996  1E0C               	comf	??_TRI_3+3,f,c
  4749  006998  4A0B               	infsnz	??_TRI_3+2,f,c
  4750  00699A  2A0C               	incf	??_TRI_3+3,f,c
  4751  00699C  0E19               	movlw	25
  4752  00699E  240B               	addwf	??_TRI_3+2,w,c
  4753  0069A0  6E36               	movwf	TRI_3@k,c
  4754  0069A2  0E00               	movlw	0
  4755  0069A4  200C               	addwfc	??_TRI_3+3,w,c
  4756  0069A6  6E37               	movwf	TRI_3@k+1,c
  4757                           
  4758                           ;TRIANGULAR.c: 83: for (j=0;j<k;j++){
  4759  0069A8  0E00               	movlw	0
  4760  0069AA  6E39               	movwf	TRI_3@j+1,c
  4761  0069AC  0E00               	movlw	0
  4762  0069AE  6E38               	movwf	TRI_3@j,c
  4763  0069B0  D004               	goto	l2988
  4764  0069B2                     l380:
  4765                           
  4766                           ;TRIANGULAR.c: 84: PORTCbits.RC2=0;
  4767  0069B2  9482               	bcf	3970,2,c	;volatile
  4768                           
  4769                           ;TRIANGULAR.c: 85: PORTAbits.RA6=0;
  4770  0069B4  9C80               	bcf	3968,6,c	;volatile
  4771  0069B6  4A38               	infsnz	TRI_3@j,f,c
  4772  0069B8  2A39               	incf	TRI_3@j+1,f,c
  4773  0069BA                     l2988:
  4774  0069BA  5039               	movf	TRI_3@j+1,w,c
  4775  0069BC  0A80               	xorlw	128
  4776  0069BE  6E09               	movwf	??_TRI_3& (0+255),c
  4777  0069C0  5036               	movf	TRI_3@k,w,c
  4778  0069C2  5C38               	subwf	TRI_3@j,w,c
  4779  0069C4  5037               	movf	TRI_3@k+1,w,c
  4780  0069C6  0A80               	xorlw	128
  4781  0069C8  5809               	subwfb	??_TRI_3& (0+255),w,c
  4782  0069CA  A0D8               	btfss	status,0,c
  4783  0069CC  D7F2               	goto	l380
  4784  0069CE  4A3A               	infsnz	TRI_3@i,f,c
  4785  0069D0  2A3B               	incf	TRI_3@i+1,f,c
  4786  0069D2  D7A3               	goto	L13
  4787  0069D4                     __end_of_TRI_3:
  4788                           	opt stack 0
  4789                           tblptru	equ	0xFF8
  4790                           tblptrh	equ	0xFF7
  4791                           tblptrl	equ	0xFF6
  4792                           tablat	equ	0xFF5
  4793                           prodh	equ	0xFF4
  4794                           prodl	equ	0xFF3
  4795                           postinc0	equ	0xFEE
  4796                           wreg	equ	0xFE8
  4797                           postinc1	equ	0xFE6
  4798                           postdec1	equ	0xFE5
  4799                           fsr1l	equ	0xFE1
  4800                           postinc2	equ	0xFDE
  4801                           postdec2	equ	0xFDD
  4802                           fsr2h	equ	0xFDA
  4803                           fsr2l	equ	0xFD9
  4804                           status	equ	0xFD8
  4805                           
  4806 ;; *************** function _TRI_2 *****************
  4807 ;; Defined at:
  4808 ;;		line 38 in file "TRIANGULAR.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  valoresSeno    40   13[COMRAM] int [20]
  4813 ;;  i               2   57[COMRAM] int 
  4814 ;;  j               2   55[COMRAM] int 
  4815 ;;  k               2   53[COMRAM] int 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;		None               void
  4818 ;; Registers used:
  4819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4825 ;;      Params:         0       0       0       0       0       0       0       0       0
  4826 ;;      Locals:        46       0       0       0       0       0       0       0       0
  4827 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4828 ;;      Totals:        51       0       0       0       0       0       0       0       0
  4829 ;;Total ram usage:       51 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    1
  4832 ;; This function calls:
  4833 ;;		___awdiv
  4834 ;; This function is called by:
  4835 ;;		_main
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text5
  4840  006740                     __ptext5:
  4841                           	opt stack 0
  4842  006740                     _TRI_2:
  4843                           	opt stack 29
  4844                           
  4845                           ;TRIANGULAR.c: 39: OSCCON=0b01010111;
  4846                           
  4847                           ;incstack = 0
  4848  006740  0E57               	movlw	87
  4849  006742  6ED3               	movwf	4051,c	;volatile
  4850                           
  4851                           ;TRIANGULAR.c: 40: TRISAbits.RA0=0;
  4852  006744  9092               	bcf	3986,0,c	;volatile
  4853                           
  4854                           ;TRIANGULAR.c: 41: TRISCbits.RC2=0;
  4855  006746  9494               	bcf	3988,2,c	;volatile
  4856                           
  4857                           ;TRIANGULAR.c: 42: int valoresSeno [20]= {10,20,30,40,50,60,70,80,90,100,90,80,70,60,50,
      +                          40,30,20,10,0};
  4858  006748  EE21  F050         	lfsr	2,TRI_2@F7359
  4859  00674C  EE10  F00E         	lfsr	1,TRI_2@valoresSeno
  4860  006750  0E28               	movlw	40
  4861  006752                     u2421:
  4862  006752  CFDE FFE6          	movff	postinc2,postinc1
  4863  006756  2EE8               	decfsz	wreg,f,c
  4864  006758  D7FC               	goto	u2421
  4865                           
  4866                           ;TRIANGULAR.c: 43: int i, j,k;
  4867                           ;TRIANGULAR.c: 44: for (i=0;i<20;i++){
  4868  00675A  0E00               	movlw	0
  4869  00675C  6E3B               	movwf	TRI_2@i+1,c
  4870  00675E  0E00               	movlw	0
  4871  006760  6E3A               	movwf	TRI_2@i,c
  4872  006762  503B               	movf	TRI_2@i+1,w,c
  4873  006764  0A80               	xorlw	128
  4874  006766  0F80               	addlw	-128
  4875  006768  0E14               	movlw	20
  4876  00676A  B4D8               	btfsc	status,2,c
  4877  00676C  5C3A               	subwf	TRI_2@i,w,c
  4878  00676E  B0D8               	btfsc	status,0,c
  4879  006770  D02B               	goto	l2926
  4880                           
  4881                           ;TRIANGULAR.c: 45: valoresSeno [i]=valoresSeno [i]/2;
  4882  006772  0E0E               	movlw	low TRI_2@valoresSeno
  4883  006774  6E09               	movwf	??_TRI_2& (0+255),c
  4884  006776  0E00               	movlw	high TRI_2@valoresSeno
  4885  006778  6E0A               	movwf	(??_TRI_2+1)& (0+255),c
  4886  00677A  90D8               	bcf	status,0,c
  4887  00677C  343A               	rlcf	TRI_2@i,w,c
  4888  00677E  6ED9               	movwf	fsr2l,c
  4889  006780  343B               	rlcf	TRI_2@i+1,w,c
  4890  006782  6EDA               	movwf	fsr2h,c
  4891  006784  5009               	movf	??_TRI_2,w,c
  4892  006786  26D9               	addwf	fsr2l,f,c
  4893  006788  500A               	movf	??_TRI_2+1,w,c
  4894  00678A  22DA               	addwfc	fsr2h,f,c
  4895  00678C  CFDE F001          	movff	postinc2,___awdiv@dividend
  4896  006790  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  4897  006794  0E00               	movlw	0
  4898  006796  6E04               	movwf	___awdiv@divisor+1,c
  4899  006798  0E02               	movlw	2
  4900  00679A  6E03               	movwf	___awdiv@divisor,c
  4901  00679C  ECB1  F02E         	call	___awdiv	;wreg free
  4902  0067A0  0E0E               	movlw	low TRI_2@valoresSeno
  4903  0067A2  6E0B               	movwf	(??_TRI_2+2)& (0+255),c
  4904  0067A4  0E00               	movlw	high TRI_2@valoresSeno
  4905  0067A6  6E0C               	movwf	(??_TRI_2+3)& (0+255),c
  4906  0067A8  90D8               	bcf	status,0,c
  4907  0067AA  343A               	rlcf	TRI_2@i,w,c
  4908  0067AC  6ED9               	movwf	fsr2l,c
  4909  0067AE  343B               	rlcf	TRI_2@i+1,w,c
  4910  0067B0  6EDA               	movwf	fsr2h,c
  4911  0067B2  500B               	movf	??_TRI_2+2,w,c
  4912  0067B4  26D9               	addwf	fsr2l,f,c
  4913  0067B6  500C               	movf	??_TRI_2+3,w,c
  4914  0067B8  22DA               	addwfc	fsr2h,f,c
  4915  0067BA  C001  FFDE         	movff	?___awdiv,postinc2
  4916  0067BE  C002  FFDD         	movff	?___awdiv+1,postdec2
  4917  0067C2  4A3A               	infsnz	TRI_2@i,f,c
  4918  0067C4  2A3B               	incf	TRI_2@i+1,f,c
  4919  0067C6  D7CD               	goto	L14
  4920  0067C8                     l2926:
  4921                           
  4922                           ;TRIANGULAR.c: 50: for (i=0;i<20;i++){
  4923  0067C8  0E00               	movlw	0
  4924  0067CA  6E3B               	movwf	TRI_2@i+1,c
  4925  0067CC  0E00               	movlw	0
  4926  0067CE  6E3A               	movwf	TRI_2@i,c
  4927  0067D0  503B               	movf	TRI_2@i+1,w,c
  4928  0067D2  0A80               	xorlw	128
  4929  0067D4  0F80               	addlw	-128
  4930  0067D6  0E14               	movlw	20
  4931  0067D8  B4D8               	btfsc	status,2,c
  4932  0067DA  5C3A               	subwf	TRI_2@i,w,c
  4933  0067DC  B0D8               	btfsc	status,0,c
  4934  0067DE  0012               	return	
  4935                           
  4936                           ;TRIANGULAR.c: 51: for (j=0;j<valoresSeno[i];j++){
  4937  0067E0  0E00               	movlw	0
  4938  0067E2  6E39               	movwf	TRI_2@j+1,c
  4939  0067E4  0E00               	movlw	0
  4940  0067E6  6E38               	movwf	TRI_2@j,c
  4941  0067E8  D004               	goto	l2936
  4942  0067EA                     l359:
  4943                           
  4944                           ;TRIANGULAR.c: 52: PORTCbits.RC2=1;
  4945  0067EA  8482               	bsf	3970,2,c	;volatile
  4946                           
  4947                           ;TRIANGULAR.c: 53: PORTAbits.RA6=1;
  4948  0067EC  8C80               	bsf	3968,6,c	;volatile
  4949  0067EE  4A38               	infsnz	TRI_2@j,f,c
  4950  0067F0  2A39               	incf	TRI_2@j+1,f,c
  4951  0067F2                     l2936:
  4952  0067F2  0E0E               	movlw	low TRI_2@valoresSeno
  4953  0067F4  6E09               	movwf	??_TRI_2& (0+255),c
  4954  0067F6  0E00               	movlw	high TRI_2@valoresSeno
  4955  0067F8  6E0A               	movwf	(??_TRI_2+1)& (0+255),c
  4956  0067FA  90D8               	bcf	status,0,c
  4957  0067FC  343A               	rlcf	TRI_2@i,w,c
  4958  0067FE  6ED9               	movwf	fsr2l,c
  4959  006800  343B               	rlcf	TRI_2@i+1,w,c
  4960  006802  6EDA               	movwf	fsr2h,c
  4961  006804  5009               	movf	??_TRI_2,w,c
  4962  006806  26D9               	addwf	fsr2l,f,c
  4963  006808  500A               	movf	??_TRI_2+1,w,c
  4964  00680A  22DA               	addwfc	fsr2h,f,c
  4965  00680C  CFDE F00B          	movff	postinc2,??_TRI_2+2
  4966  006810  CFDD F00C          	movff	postdec2,??_TRI_2+3
  4967  006814  5039               	movf	TRI_2@j+1,w,c
  4968  006816  0A80               	xorlw	128
  4969  006818  6E0D               	movwf	(??_TRI_2+4)& (0+255),c
  4970  00681A  500B               	movf	??_TRI_2+2,w,c
  4971  00681C  5C38               	subwf	TRI_2@j,w,c
  4972  00681E  500C               	movf	??_TRI_2+3,w,c
  4973  006820  0A80               	xorlw	128
  4974  006822  580D               	subwfb	(??_TRI_2+4)& (0+255),w,c
  4975  006824  A0D8               	btfss	status,0,c
  4976  006826  D7E1               	goto	l359
  4977                           
  4978                           ;TRIANGULAR.c: 54: }
  4979                           ;TRIANGULAR.c: 55: k=100/2-valoresSeno[i];
  4980  006828  0E0E               	movlw	low TRI_2@valoresSeno
  4981  00682A  6E09               	movwf	??_TRI_2& (0+255),c
  4982  00682C  0E00               	movlw	high TRI_2@valoresSeno
  4983  00682E  6E0A               	movwf	(??_TRI_2+1)& (0+255),c
  4984  006830  90D8               	bcf	status,0,c
  4985  006832  343A               	rlcf	TRI_2@i,w,c
  4986  006834  6ED9               	movwf	fsr2l,c
  4987  006836  343B               	rlcf	TRI_2@i+1,w,c
  4988  006838  6EDA               	movwf	fsr2h,c
  4989  00683A  5009               	movf	??_TRI_2,w,c
  4990  00683C  26D9               	addwf	fsr2l,f,c
  4991  00683E  500A               	movf	??_TRI_2+1,w,c
  4992  006840  22DA               	addwfc	fsr2h,f,c
  4993  006842  CFDE F00B          	movff	postinc2,??_TRI_2+2
  4994  006846  CFDD F00C          	movff	postdec2,??_TRI_2+3
  4995  00684A  1E0B               	comf	??_TRI_2+2,f,c
  4996  00684C  1E0C               	comf	??_TRI_2+3,f,c
  4997  00684E  4A0B               	infsnz	??_TRI_2+2,f,c
  4998  006850  2A0C               	incf	??_TRI_2+3,f,c
  4999  006852  0E32               	movlw	50
  5000  006854  240B               	addwf	??_TRI_2+2,w,c
  5001  006856  6E36               	movwf	TRI_2@k,c
  5002  006858  0E00               	movlw	0
  5003  00685A  200C               	addwfc	??_TRI_2+3,w,c
  5004  00685C  6E37               	movwf	TRI_2@k+1,c
  5005                           
  5006                           ;TRIANGULAR.c: 56: for (j=0;j<k;j++){
  5007  00685E  0E00               	movlw	0
  5008  006860  6E39               	movwf	TRI_2@j+1,c
  5009  006862  0E00               	movlw	0
  5010  006864  6E38               	movwf	TRI_2@j,c
  5011  006866  D004               	goto	l2944
  5012  006868                     l362:
  5013                           
  5014                           ;TRIANGULAR.c: 57: PORTCbits.RC2=0;
  5015  006868  9482               	bcf	3970,2,c	;volatile
  5016                           
  5017                           ;TRIANGULAR.c: 58: PORTAbits.RA6=0;
  5018  00686A  9C80               	bcf	3968,6,c	;volatile
  5019  00686C  4A38               	infsnz	TRI_2@j,f,c
  5020  00686E  2A39               	incf	TRI_2@j+1,f,c
  5021  006870                     l2944:
  5022  006870  5039               	movf	TRI_2@j+1,w,c
  5023  006872  0A80               	xorlw	128
  5024  006874  6E09               	movwf	??_TRI_2& (0+255),c
  5025  006876  5036               	movf	TRI_2@k,w,c
  5026  006878  5C38               	subwf	TRI_2@j,w,c
  5027  00687A  5037               	movf	TRI_2@k+1,w,c
  5028  00687C  0A80               	xorlw	128
  5029  00687E  5809               	subwfb	??_TRI_2& (0+255),w,c
  5030  006880  A0D8               	btfss	status,0,c
  5031  006882  D7F2               	goto	l362
  5032  006884  4A3A               	infsnz	TRI_2@i,f,c
  5033  006886  2A3B               	incf	TRI_2@i+1,f,c
  5034  006888  D7A3               	goto	L15
  5035  00688A                     __end_of_TRI_2:
  5036                           	opt stack 0
  5037                           tblptru	equ	0xFF8
  5038                           tblptrh	equ	0xFF7
  5039                           tblptrl	equ	0xFF6
  5040                           tablat	equ	0xFF5
  5041                           prodh	equ	0xFF4
  5042                           prodl	equ	0xFF3
  5043                           postinc0	equ	0xFEE
  5044                           wreg	equ	0xFE8
  5045                           postinc1	equ	0xFE6
  5046                           postdec1	equ	0xFE5
  5047                           fsr1l	equ	0xFE1
  5048                           postinc2	equ	0xFDE
  5049                           postdec2	equ	0xFDD
  5050                           fsr2h	equ	0xFDA
  5051                           fsr2l	equ	0xFD9
  5052                           status	equ	0xFD8
  5053                           
  5054 ;; *************** function ___awdiv *****************
  5055 ;; Defined at:
  5056 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/awdiv.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  dividend        2    0[COMRAM] int 
  5059 ;;  divisor         2    2[COMRAM] int 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  quotient        2    6[COMRAM] int 
  5062 ;;  sign            1    5[COMRAM] unsigned char 
  5063 ;;  counter         1    4[COMRAM] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  2    0[COMRAM] int 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0, prodl
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5073 ;;      Params:         4       0       0       0       0       0       0       0       0
  5074 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5076 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5077 ;;Total ram usage:        8 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_TRI_2
  5083 ;;		_TRI_3
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text6
  5088  005D62                     __ptext6:
  5089                           	opt stack 0
  5090  005D62                     ___awdiv:
  5091                           	opt stack 29
  5092                           
  5093                           ;incstack = 0
  5094  005D62  0E00               	movlw	0
  5095  005D64  6E06               	movwf	___awdiv@sign,c
  5096  005D66  5004               	movf	___awdiv@divisor+1,w,c
  5097  005D68  0A80               	xorlw	128
  5098  005D6A  6EF3               	movwf	prodl,c
  5099  005D6C  0E80               	movlw	128
  5100  005D6E  5CF3               	subwf	prodl,w,c
  5101  005D70  0E00               	movlw	0
  5102  005D72  B4D8               	btfsc	status,2,c
  5103  005D74  5C03               	subwf	___awdiv@divisor,w,c
  5104  005D76  B0D8               	btfsc	status,0,c
  5105  005D78  D006               	goto	l2540
  5106  005D7A  6C03               	negf	___awdiv@divisor,c
  5107  005D7C  1E04               	comf	___awdiv@divisor+1,f,c
  5108  005D7E  B0D8               	btfsc	status,0,c
  5109  005D80  2A04               	incf	___awdiv@divisor+1,f,c
  5110  005D82  0E01               	movlw	1
  5111  005D84  6E06               	movwf	___awdiv@sign,c
  5112  005D86                     l2540:
  5113  005D86  5002               	movf	___awdiv@dividend+1,w,c
  5114  005D88  0A80               	xorlw	128
  5115  005D8A  6EF3               	movwf	prodl,c
  5116  005D8C  0E80               	movlw	128
  5117  005D8E  5CF3               	subwf	prodl,w,c
  5118  005D90  0E00               	movlw	0
  5119  005D92  B4D8               	btfsc	status,2,c
  5120  005D94  5C01               	subwf	___awdiv@dividend,w,c
  5121  005D96  B0D8               	btfsc	status,0,c
  5122  005D98  D006               	goto	l2546
  5123  005D9A  6C01               	negf	___awdiv@dividend,c
  5124  005D9C  1E02               	comf	___awdiv@dividend+1,f,c
  5125  005D9E  B0D8               	btfsc	status,0,c
  5126  005DA0  2A02               	incf	___awdiv@dividend+1,f,c
  5127  005DA2  0E01               	movlw	1
  5128  005DA4  1A06               	xorwf	___awdiv@sign,f,c
  5129  005DA6                     l2546:
  5130  005DA6  0E00               	movlw	0
  5131  005DA8  6E08               	movwf	___awdiv@quotient+1,c
  5132  005DAA  0E00               	movlw	0
  5133  005DAC  6E07               	movwf	___awdiv@quotient,c
  5134  005DAE  5004               	movf	___awdiv@divisor+1,w,c
  5135  005DB0  1003               	iorwf	___awdiv@divisor,w,c
  5136  005DB2  B4D8               	btfsc	status,2,c
  5137  005DB4  D01C               	goto	l2568
  5138  005DB6  0E01               	movlw	1
  5139  005DB8  6E05               	movwf	___awdiv@counter,c
  5140  005DBA  D004               	goto	l2554
  5141  005DBC                     l2552:
  5142  005DBC  90D8               	bcf	status,0,c
  5143  005DBE  3603               	rlcf	___awdiv@divisor,f,c
  5144  005DC0  3604               	rlcf	___awdiv@divisor+1,f,c
  5145  005DC2  2A05               	incf	___awdiv@counter,f,c
  5146  005DC4                     l2554:
  5147  005DC4  AE04               	btfss	___awdiv@divisor+1,7,c
  5148  005DC6  D7FA               	goto	l2552
  5149  005DC8                     l2556:
  5150  005DC8  90D8               	bcf	status,0,c
  5151  005DCA  3607               	rlcf	___awdiv@quotient,f,c
  5152  005DCC  3608               	rlcf	___awdiv@quotient+1,f,c
  5153  005DCE  5003               	movf	___awdiv@divisor,w,c
  5154  005DD0  5C01               	subwf	___awdiv@dividend,w,c
  5155  005DD2  5004               	movf	___awdiv@divisor+1,w,c
  5156  005DD4  5802               	subwfb	___awdiv@dividend+1,w,c
  5157  005DD6  A0D8               	btfss	status,0,c
  5158  005DD8  D005               	goto	l2564
  5159  005DDA  5003               	movf	___awdiv@divisor,w,c
  5160  005DDC  5E01               	subwf	___awdiv@dividend,f,c
  5161  005DDE  5004               	movf	___awdiv@divisor+1,w,c
  5162  005DE0  5A02               	subwfb	___awdiv@dividend+1,f,c
  5163  005DE2  8007               	bsf	___awdiv@quotient,0,c
  5164  005DE4                     l2564:
  5165  005DE4  90D8               	bcf	status,0,c
  5166  005DE6  3204               	rrcf	___awdiv@divisor+1,f,c
  5167  005DE8  3203               	rrcf	___awdiv@divisor,f,c
  5168  005DEA  2E05               	decfsz	___awdiv@counter,f,c
  5169  005DEC  D7ED               	goto	l2556
  5170  005DEE                     l2568:
  5171  005DEE  5006               	movf	___awdiv@sign,w,c
  5172  005DF0  B4D8               	btfsc	status,2,c
  5173  005DF2  D004               	goto	l2572
  5174  005DF4  6C07               	negf	___awdiv@quotient,c
  5175  005DF6  1E08               	comf	___awdiv@quotient+1,f,c
  5176  005DF8  B0D8               	btfsc	status,0,c
  5177  005DFA  2A08               	incf	___awdiv@quotient+1,f,c
  5178  005DFC                     l2572:
  5179  005DFC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5180  005E00  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5181  005E04  0012               	return	
  5182  005E06                     __end_of___awdiv:
  5183                           	opt stack 0
  5184                           tblptru	equ	0xFF8
  5185                           tblptrh	equ	0xFF7
  5186                           tblptrl	equ	0xFF6
  5187                           tablat	equ	0xFF5
  5188                           prodh	equ	0xFF4
  5189                           prodl	equ	0xFF3
  5190                           postinc0	equ	0xFEE
  5191                           wreg	equ	0xFE8
  5192                           postinc1	equ	0xFE6
  5193                           postdec1	equ	0xFE5
  5194                           fsr1l	equ	0xFE1
  5195                           postinc2	equ	0xFDE
  5196                           postdec2	equ	0xFDD
  5197                           fsr2h	equ	0xFDA
  5198                           fsr2l	equ	0xFD9
  5199                           status	equ	0xFD8
  5200                           
  5201 ;; *************** function _TRI_1 *****************
  5202 ;; Defined at:
  5203 ;;		line 11 in file "TRIANGULAR.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;		None
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  valoresSeno    40    5[COMRAM] int [20]
  5208 ;;  i               2   49[COMRAM] int 
  5209 ;;  j               2   47[COMRAM] int 
  5210 ;;  k               2   45[COMRAM] int 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;		None               void
  5213 ;; Registers used:
  5214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5220 ;;      Params:         0       0       0       0       0       0       0       0       0
  5221 ;;      Locals:        46       0       0       0       0       0       0       0       0
  5222 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5223 ;;      Totals:        51       0       0       0       0       0       0       0       0
  5224 ;;Total ram usage:       51 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_main
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text7
  5234  0061D0                     __ptext7:
  5235                           	opt stack 0
  5236  0061D0                     _TRI_1:
  5237                           	opt stack 30
  5238                           
  5239                           ;TRIANGULAR.c: 12: OSCCON=0b01010111;
  5240                           
  5241                           ;incstack = 0
  5242  0061D0  0E57               	movlw	87
  5243  0061D2  6ED3               	movwf	4051,c	;volatile
  5244                           
  5245                           ;TRIANGULAR.c: 13: TRISAbits.RA6=0;
  5246  0061D4  9C92               	bcf	3986,6,c	;volatile
  5247                           
  5248                           ;TRIANGULAR.c: 14: TRISCbits.RC2=0;
  5249  0061D6  9494               	bcf	3988,2,c	;volatile
  5250                           
  5251                           ;TRIANGULAR.c: 15: int valoresSeno [20]= {10,20,30,40,50,60,70,80,90,100,90,80,70,60,50,
      +                          40,30,20,10,0};
  5252  0061D8  EE21  F028         	lfsr	2,TRI_1@F7354
  5253  0061DC  EE10  F006         	lfsr	1,TRI_1@valoresSeno
  5254  0061E0  0E28               	movlw	40
  5255  0061E2                     u2351:
  5256  0061E2  CFDE FFE6          	movff	postinc2,postinc1
  5257  0061E6  2EE8               	decfsz	wreg,f,c
  5258  0061E8  D7FC               	goto	u2351
  5259                           
  5260                           ;TRIANGULAR.c: 16: int i, j,k;
  5261                           ;TRIANGULAR.c: 17: for (i=0;i<20;i++){
  5262  0061EA  0E00               	movlw	0
  5263  0061EC  6E33               	movwf	TRI_1@i+1,c
  5264  0061EE  0E00               	movlw	0
  5265  0061F0  6E32               	movwf	TRI_1@i,c
  5266  0061F2  5033               	movf	TRI_1@i+1,w,c
  5267  0061F4  0A80               	xorlw	128
  5268  0061F6  0F80               	addlw	-128
  5269  0061F8  0E14               	movlw	20
  5270  0061FA  B4D8               	btfsc	status,2,c
  5271  0061FC  5C32               	subwf	TRI_1@i,w,c
  5272  0061FE  B0D8               	btfsc	status,0,c
  5273  006200  D003               	goto	l2882
  5274  006202  4A32               	infsnz	TRI_1@i,f,c
  5275  006204  2A33               	incf	TRI_1@i+1,f,c
  5276  006206  D7F5               	goto	L16
  5277  006208                     l2882:
  5278                           
  5279                           ;TRIANGULAR.c: 23: for (i=0;i<20;i++){
  5280  006208  0E00               	movlw	0
  5281  00620A  6E33               	movwf	TRI_1@i+1,c
  5282  00620C  0E00               	movlw	0
  5283  00620E  6E32               	movwf	TRI_1@i,c
  5284  006210  5033               	movf	TRI_1@i+1,w,c
  5285  006212  0A80               	xorlw	128
  5286  006214  0F80               	addlw	-128
  5287  006216  0E14               	movlw	20
  5288  006218  B4D8               	btfsc	status,2,c
  5289  00621A  5C32               	subwf	TRI_1@i,w,c
  5290  00621C  B0D8               	btfsc	status,0,c
  5291  00621E  0012               	return	
  5292                           
  5293                           ;TRIANGULAR.c: 24: for (j=0;j<valoresSeno[i];j++){
  5294  006220  0E00               	movlw	0
  5295  006222  6E31               	movwf	TRI_1@j+1,c
  5296  006224  0E00               	movlw	0
  5297  006226  6E30               	movwf	TRI_1@j,c
  5298  006228  D004               	goto	l2892
  5299  00622A                     l341:
  5300                           
  5301                           ;TRIANGULAR.c: 25: PORTCbits.RC2=1;
  5302  00622A  8482               	bsf	3970,2,c	;volatile
  5303                           
  5304                           ;TRIANGULAR.c: 26: PORTAbits.RA6=1;
  5305  00622C  8C80               	bsf	3968,6,c	;volatile
  5306  00622E  4A30               	infsnz	TRI_1@j,f,c
  5307  006230  2A31               	incf	TRI_1@j+1,f,c
  5308  006232                     l2892:
  5309  006232  0E06               	movlw	low TRI_1@valoresSeno
  5310  006234  6E01               	movwf	??_TRI_1& (0+255),c
  5311  006236  0E00               	movlw	high TRI_1@valoresSeno
  5312  006238  6E02               	movwf	(??_TRI_1+1)& (0+255),c
  5313  00623A  90D8               	bcf	status,0,c
  5314  00623C  3432               	rlcf	TRI_1@i,w,c
  5315  00623E  6ED9               	movwf	fsr2l,c
  5316  006240  3433               	rlcf	TRI_1@i+1,w,c
  5317  006242  6EDA               	movwf	fsr2h,c
  5318  006244  5001               	movf	??_TRI_1,w,c
  5319  006246  26D9               	addwf	fsr2l,f,c
  5320  006248  5002               	movf	??_TRI_1+1,w,c
  5321  00624A  22DA               	addwfc	fsr2h,f,c
  5322  00624C  CFDE F003          	movff	postinc2,??_TRI_1+2
  5323  006250  CFDD F004          	movff	postdec2,??_TRI_1+3
  5324  006254  5031               	movf	TRI_1@j+1,w,c
  5325  006256  0A80               	xorlw	128
  5326  006258  6E05               	movwf	(??_TRI_1+4)& (0+255),c
  5327  00625A  5003               	movf	??_TRI_1+2,w,c
  5328  00625C  5C30               	subwf	TRI_1@j,w,c
  5329  00625E  5004               	movf	??_TRI_1+3,w,c
  5330  006260  0A80               	xorlw	128
  5331  006262  5805               	subwfb	(??_TRI_1+4)& (0+255),w,c
  5332  006264  A0D8               	btfss	status,0,c
  5333  006266  D7E1               	goto	l341
  5334                           
  5335                           ;TRIANGULAR.c: 27: }
  5336                           ;TRIANGULAR.c: 28: k=100-valoresSeno[i];
  5337  006268  0E06               	movlw	low TRI_1@valoresSeno
  5338  00626A  6E01               	movwf	??_TRI_1& (0+255),c
  5339  00626C  0E00               	movlw	high TRI_1@valoresSeno
  5340  00626E  6E02               	movwf	(??_TRI_1+1)& (0+255),c
  5341  006270  90D8               	bcf	status,0,c
  5342  006272  3432               	rlcf	TRI_1@i,w,c
  5343  006274  6ED9               	movwf	fsr2l,c
  5344  006276  3433               	rlcf	TRI_1@i+1,w,c
  5345  006278  6EDA               	movwf	fsr2h,c
  5346  00627A  5001               	movf	??_TRI_1,w,c
  5347  00627C  26D9               	addwf	fsr2l,f,c
  5348  00627E  5002               	movf	??_TRI_1+1,w,c
  5349  006280  22DA               	addwfc	fsr2h,f,c
  5350  006282  CFDE F003          	movff	postinc2,??_TRI_1+2
  5351  006286  CFDD F004          	movff	postdec2,??_TRI_1+3
  5352  00628A  1E03               	comf	??_TRI_1+2,f,c
  5353  00628C  1E04               	comf	??_TRI_1+3,f,c
  5354  00628E  4A03               	infsnz	??_TRI_1+2,f,c
  5355  006290  2A04               	incf	??_TRI_1+3,f,c
  5356  006292  0E64               	movlw	100
  5357  006294  2403               	addwf	??_TRI_1+2,w,c
  5358  006296  6E2E               	movwf	TRI_1@k,c
  5359  006298  0E00               	movlw	0
  5360  00629A  2004               	addwfc	??_TRI_1+3,w,c
  5361  00629C  6E2F               	movwf	TRI_1@k+1,c
  5362                           
  5363                           ;TRIANGULAR.c: 29: for (j=0;j<k;j++){
  5364  00629E  0E00               	movlw	0
  5365  0062A0  6E31               	movwf	TRI_1@j+1,c
  5366  0062A2  0E00               	movlw	0
  5367  0062A4  6E30               	movwf	TRI_1@j,c
  5368  0062A6  D004               	goto	l2900
  5369  0062A8                     l344:
  5370                           
  5371                           ;TRIANGULAR.c: 30: PORTCbits.RC2=0;
  5372  0062A8  9482               	bcf	3970,2,c	;volatile
  5373                           
  5374                           ;TRIANGULAR.c: 31: PORTAbits.RA6=0;
  5375  0062AA  9C80               	bcf	3968,6,c	;volatile
  5376  0062AC  4A30               	infsnz	TRI_1@j,f,c
  5377  0062AE  2A31               	incf	TRI_1@j+1,f,c
  5378  0062B0                     l2900:
  5379  0062B0  5031               	movf	TRI_1@j+1,w,c
  5380  0062B2  0A80               	xorlw	128
  5381  0062B4  6E01               	movwf	??_TRI_1& (0+255),c
  5382  0062B6  502E               	movf	TRI_1@k,w,c
  5383  0062B8  5C30               	subwf	TRI_1@j,w,c
  5384  0062BA  502F               	movf	TRI_1@k+1,w,c
  5385  0062BC  0A80               	xorlw	128
  5386  0062BE  5801               	subwfb	??_TRI_1& (0+255),w,c
  5387  0062C0  A0D8               	btfss	status,0,c
  5388  0062C2  D7F2               	goto	l344
  5389  0062C4  4A32               	infsnz	TRI_1@i,f,c
  5390  0062C6  2A33               	incf	TRI_1@i+1,f,c
  5391  0062C8  D7A3               	goto	L17
  5392  0062CA                     __end_of_TRI_1:
  5393                           	opt stack 0
  5394                           tblptru	equ	0xFF8
  5395                           tblptrh	equ	0xFF7
  5396                           tblptrl	equ	0xFF6
  5397                           tablat	equ	0xFF5
  5398                           prodh	equ	0xFF4
  5399                           prodl	equ	0xFF3
  5400                           postinc0	equ	0xFEE
  5401                           wreg	equ	0xFE8
  5402                           postinc1	equ	0xFE6
  5403                           postdec1	equ	0xFE5
  5404                           fsr1l	equ	0xFE1
  5405                           postinc2	equ	0xFDE
  5406                           postdec2	equ	0xFDD
  5407                           fsr2h	equ	0xFDA
  5408                           fsr2l	equ	0xFD9
  5409                           status	equ	0xFD8
  5410                           
  5411 ;; *************** function _SENO_3 *****************
  5412 ;; Defined at:
  5413 ;;		line 64 in file "SIN.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  valoresSeno    30    5[COMRAM] int [15]
  5418 ;;  i               2   39[COMRAM] int 
  5419 ;;  j               2   37[COMRAM] int 
  5420 ;;  k               2   35[COMRAM] int 
  5421 ;; Return value:  Size  Location     Type
  5422 ;;		None               void
  5423 ;; Registers used:
  5424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5430 ;;      Params:         0       0       0       0       0       0       0       0       0
  5431 ;;      Locals:        36       0       0       0       0       0       0       0       0
  5432 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5433 ;;      Totals:        41       0       0       0       0       0       0       0       0
  5434 ;;Total ram usage:       41 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_main
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           	psect	text8
  5444  0060D6                     __ptext8:
  5445                           	opt stack 0
  5446  0060D6                     _SENO_3:
  5447                           	opt stack 30
  5448                           
  5449                           ;SIN.c: 65: OSCCON=0b01010111;
  5450                           
  5451                           ;incstack = 0
  5452  0060D6  0E57               	movlw	87
  5453  0060D8  6ED3               	movwf	4051,c	;volatile
  5454                           
  5455                           ;SIN.c: 66: TRISAbits.RA6=0;
  5456  0060DA  9C92               	bcf	3986,6,c	;volatile
  5457                           
  5458                           ;SIN.c: 67: TRISCbits.RC2=0;
  5459  0060DC  9494               	bcf	3988,2,c	;volatile
  5460                           
  5461                           ;SIN.c: 68: int valoresSeno [15]= {50,70,87,98,100,93,79,60,40,21,7,0,2,13,30};
  5462  0060DE  EE20  F084         	lfsr	2,SENO_3@F7364
  5463  0060E2  EE10  F006         	lfsr	1,SENO_3@valoresSeno
  5464  0060E6  0E1E               	movlw	30
  5465  0060E8                     u2281:
  5466  0060E8  CFDE FFE6          	movff	postinc2,postinc1
  5467  0060EC  2EE8               	decfsz	wreg,f,c
  5468  0060EE  D7FC               	goto	u2281
  5469                           
  5470                           ;SIN.c: 69: int i, j,k;
  5471                           ;SIN.c: 70: for (i=0;i<15;i++){
  5472  0060F0  0E00               	movlw	0
  5473  0060F2  6E29               	movwf	SENO_3@i+1,c
  5474  0060F4  0E00               	movlw	0
  5475  0060F6  6E28               	movwf	SENO_3@i,c
  5476  0060F8  5029               	movf	SENO_3@i+1,w,c
  5477  0060FA  0A80               	xorlw	128
  5478  0060FC  0F80               	addlw	-128
  5479  0060FE  0E0F               	movlw	15
  5480  006100  B4D8               	btfsc	status,2,c
  5481  006102  5C28               	subwf	SENO_3@i,w,c
  5482  006104  B0D8               	btfsc	status,0,c
  5483  006106  D003               	goto	l2840
  5484  006108  4A28               	infsnz	SENO_3@i,f,c
  5485  00610A  2A29               	incf	SENO_3@i+1,f,c
  5486  00610C  D7F5               	goto	L18
  5487  00610E                     l2840:
  5488                           
  5489                           ;SIN.c: 74: for (i=0;i<15;i++){
  5490  00610E  0E00               	movlw	0
  5491  006110  6E29               	movwf	SENO_3@i+1,c
  5492  006112  0E00               	movlw	0
  5493  006114  6E28               	movwf	SENO_3@i,c
  5494  006116  5029               	movf	SENO_3@i+1,w,c
  5495  006118  0A80               	xorlw	128
  5496  00611A  0F80               	addlw	-128
  5497  00611C  0E0F               	movlw	15
  5498  00611E  B4D8               	btfsc	status,2,c
  5499  006120  5C28               	subwf	SENO_3@i,w,c
  5500  006122  B0D8               	btfsc	status,0,c
  5501  006124  0012               	return	
  5502                           
  5503                           ;SIN.c: 75: for (j=0;j<valoresSeno[i];j++){
  5504  006126  0E00               	movlw	0
  5505  006128  6E27               	movwf	SENO_3@j+1,c
  5506  00612A  0E00               	movlw	0
  5507  00612C  6E26               	movwf	SENO_3@j,c
  5508  00612E  D004               	goto	l2850
  5509  006130                     l313:
  5510                           
  5511                           ;SIN.c: 76: PORTCbits.RC2=1;
  5512  006130  8482               	bsf	3970,2,c	;volatile
  5513                           
  5514                           ;SIN.c: 77: PORTAbits.RA6=1;
  5515  006132  8C80               	bsf	3968,6,c	;volatile
  5516  006134  4A26               	infsnz	SENO_3@j,f,c
  5517  006136  2A27               	incf	SENO_3@j+1,f,c
  5518  006138                     l2850:
  5519  006138  0E06               	movlw	low SENO_3@valoresSeno
  5520  00613A  6E01               	movwf	??_SENO_3& (0+255),c
  5521  00613C  0E00               	movlw	high SENO_3@valoresSeno
  5522  00613E  6E02               	movwf	(??_SENO_3+1)& (0+255),c
  5523  006140  90D8               	bcf	status,0,c
  5524  006142  3428               	rlcf	SENO_3@i,w,c
  5525  006144  6ED9               	movwf	fsr2l,c
  5526  006146  3429               	rlcf	SENO_3@i+1,w,c
  5527  006148  6EDA               	movwf	fsr2h,c
  5528  00614A  5001               	movf	??_SENO_3,w,c
  5529  00614C  26D9               	addwf	fsr2l,f,c
  5530  00614E  5002               	movf	??_SENO_3+1,w,c
  5531  006150  22DA               	addwfc	fsr2h,f,c
  5532  006152  CFDE F003          	movff	postinc2,??_SENO_3+2
  5533  006156  CFDD F004          	movff	postdec2,??_SENO_3+3
  5534  00615A  5027               	movf	SENO_3@j+1,w,c
  5535  00615C  0A80               	xorlw	128
  5536  00615E  6E05               	movwf	(??_SENO_3+4)& (0+255),c
  5537  006160  5003               	movf	??_SENO_3+2,w,c
  5538  006162  5C26               	subwf	SENO_3@j,w,c
  5539  006164  5004               	movf	??_SENO_3+3,w,c
  5540  006166  0A80               	xorlw	128
  5541  006168  5805               	subwfb	(??_SENO_3+4)& (0+255),w,c
  5542  00616A  A0D8               	btfss	status,0,c
  5543  00616C  D7E1               	goto	l313
  5544                           
  5545                           ;SIN.c: 78: }
  5546                           ;SIN.c: 79: k=100-valoresSeno[i];
  5547  00616E  0E06               	movlw	low SENO_3@valoresSeno
  5548  006170  6E01               	movwf	??_SENO_3& (0+255),c
  5549  006172  0E00               	movlw	high SENO_3@valoresSeno
  5550  006174  6E02               	movwf	(??_SENO_3+1)& (0+255),c
  5551  006176  90D8               	bcf	status,0,c
  5552  006178  3428               	rlcf	SENO_3@i,w,c
  5553  00617A  6ED9               	movwf	fsr2l,c
  5554  00617C  3429               	rlcf	SENO_3@i+1,w,c
  5555  00617E  6EDA               	movwf	fsr2h,c
  5556  006180  5001               	movf	??_SENO_3,w,c
  5557  006182  26D9               	addwf	fsr2l,f,c
  5558  006184  5002               	movf	??_SENO_3+1,w,c
  5559  006186  22DA               	addwfc	fsr2h,f,c
  5560  006188  CFDE F003          	movff	postinc2,??_SENO_3+2
  5561  00618C  CFDD F004          	movff	postdec2,??_SENO_3+3
  5562  006190  1E03               	comf	??_SENO_3+2,f,c
  5563  006192  1E04               	comf	??_SENO_3+3,f,c
  5564  006194  4A03               	infsnz	??_SENO_3+2,f,c
  5565  006196  2A04               	incf	??_SENO_3+3,f,c
  5566  006198  0E64               	movlw	100
  5567  00619A  2403               	addwf	??_SENO_3+2,w,c
  5568  00619C  6E24               	movwf	SENO_3@k,c
  5569  00619E  0E00               	movlw	0
  5570  0061A0  2004               	addwfc	??_SENO_3+3,w,c
  5571  0061A2  6E25               	movwf	SENO_3@k+1,c
  5572                           
  5573                           ;SIN.c: 80: for (j=0;j<k;j++){
  5574  0061A4  0E00               	movlw	0
  5575  0061A6  6E27               	movwf	SENO_3@j+1,c
  5576  0061A8  0E00               	movlw	0
  5577  0061AA  6E26               	movwf	SENO_3@j,c
  5578  0061AC  D004               	goto	l2858
  5579  0061AE                     l316:
  5580                           
  5581                           ;SIN.c: 81: PORTCbits.RC2=0;
  5582  0061AE  9482               	bcf	3970,2,c	;volatile
  5583                           
  5584                           ;SIN.c: 82: PORTAbits.RA6=0;
  5585  0061B0  9C80               	bcf	3968,6,c	;volatile
  5586  0061B2  4A26               	infsnz	SENO_3@j,f,c
  5587  0061B4  2A27               	incf	SENO_3@j+1,f,c
  5588  0061B6                     l2858:
  5589  0061B6  5027               	movf	SENO_3@j+1,w,c
  5590  0061B8  0A80               	xorlw	128
  5591  0061BA  6E01               	movwf	??_SENO_3& (0+255),c
  5592  0061BC  5024               	movf	SENO_3@k,w,c
  5593  0061BE  5C26               	subwf	SENO_3@j,w,c
  5594  0061C0  5025               	movf	SENO_3@k+1,w,c
  5595  0061C2  0A80               	xorlw	128
  5596  0061C4  5801               	subwfb	??_SENO_3& (0+255),w,c
  5597  0061C6  A0D8               	btfss	status,0,c
  5598  0061C8  D7F2               	goto	l316
  5599  0061CA  4A28               	infsnz	SENO_3@i,f,c
  5600  0061CC  2A29               	incf	SENO_3@i+1,f,c
  5601  0061CE  D7A3               	goto	L19
  5602  0061D0                     __end_of_SENO_3:
  5603                           	opt stack 0
  5604                           tblptru	equ	0xFF8
  5605                           tblptrh	equ	0xFF7
  5606                           tblptrl	equ	0xFF6
  5607                           tablat	equ	0xFF5
  5608                           prodh	equ	0xFF4
  5609                           prodl	equ	0xFF3
  5610                           postinc0	equ	0xFEE
  5611                           wreg	equ	0xFE8
  5612                           postinc1	equ	0xFE6
  5613                           postdec1	equ	0xFE5
  5614                           fsr1l	equ	0xFE1
  5615                           postinc2	equ	0xFDE
  5616                           postdec2	equ	0xFDD
  5617                           fsr2h	equ	0xFDA
  5618                           fsr2l	equ	0xFD9
  5619                           status	equ	0xFD8
  5620                           
  5621 ;; *************** function _SENO_2 *****************
  5622 ;; Defined at:
  5623 ;;		line 38 in file "SIN.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  valoresSeno    36    5[COMRAM] int [18]
  5628 ;;  i               2   45[COMRAM] int 
  5629 ;;  j               2   43[COMRAM] int 
  5630 ;;  k               2   41[COMRAM] int 
  5631 ;; Return value:  Size  Location     Type
  5632 ;;		None               void
  5633 ;; Registers used:
  5634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5640 ;;      Params:         0       0       0       0       0       0       0       0       0
  5641 ;;      Locals:        42       0       0       0       0       0       0       0       0
  5642 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5643 ;;      Totals:        47       0       0       0       0       0       0       0       0
  5644 ;;Total ram usage:       47 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; This function calls:
  5647 ;;		Nothing
  5648 ;; This function is called by:
  5649 ;;		_main
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text9
  5654  005FDC                     __ptext9:
  5655                           	opt stack 0
  5656  005FDC                     _SENO_2:
  5657                           	opt stack 30
  5658                           
  5659                           ;SIN.c: 39: OSCCON=0b01010111;
  5660                           
  5661                           ;incstack = 0
  5662  005FDC  0E57               	movlw	87
  5663  005FDE  6ED3               	movwf	4051,c	;volatile
  5664                           
  5665                           ;SIN.c: 40: TRISAbits.RA6=0;
  5666  005FE0  9C92               	bcf	3986,6,c	;volatile
  5667                           
  5668                           ;SIN.c: 41: TRISCbits.RC2=0;
  5669  005FE2  9494               	bcf	3988,2,c	;volatile
  5670                           
  5671                           ;SIN.c: 42: int valoresSeno [18]= {50,67,82,93,99,99,93,82,67,50,33,18,7,1,1,7,18,33};
  5672  005FE4  EE20  F060         	lfsr	2,SENO_2@F7359
  5673  005FE8  EE10  F006         	lfsr	1,SENO_2@valoresSeno
  5674  005FEC  0E24               	movlw	36
  5675  005FEE                     u2211:
  5676  005FEE  CFDE FFE6          	movff	postinc2,postinc1
  5677  005FF2  2EE8               	decfsz	wreg,f,c
  5678  005FF4  D7FC               	goto	u2211
  5679                           
  5680                           ;SIN.c: 43: int i, j,k;
  5681                           ;SIN.c: 44: for (i=0;i<18;i++){
  5682  005FF6  0E00               	movlw	0
  5683  005FF8  6E2F               	movwf	SENO_2@i+1,c
  5684  005FFA  0E00               	movlw	0
  5685  005FFC  6E2E               	movwf	SENO_2@i,c
  5686  005FFE  502F               	movf	SENO_2@i+1,w,c
  5687  006000  0A80               	xorlw	128
  5688  006002  0F80               	addlw	-128
  5689  006004  0E12               	movlw	18
  5690  006006  B4D8               	btfsc	status,2,c
  5691  006008  5C2E               	subwf	SENO_2@i,w,c
  5692  00600A  B0D8               	btfsc	status,0,c
  5693  00600C  D003               	goto	l2798
  5694  00600E  4A2E               	infsnz	SENO_2@i,f,c
  5695  006010  2A2F               	incf	SENO_2@i+1,f,c
  5696  006012  D7F5               	goto	L20
  5697  006014                     l2798:
  5698                           
  5699                           ;SIN.c: 48: for (i=0;i<18;i++){
  5700  006014  0E00               	movlw	0
  5701  006016  6E2F               	movwf	SENO_2@i+1,c
  5702  006018  0E00               	movlw	0
  5703  00601A  6E2E               	movwf	SENO_2@i,c
  5704  00601C  502F               	movf	SENO_2@i+1,w,c
  5705  00601E  0A80               	xorlw	128
  5706  006020  0F80               	addlw	-128
  5707  006022  0E12               	movlw	18
  5708  006024  B4D8               	btfsc	status,2,c
  5709  006026  5C2E               	subwf	SENO_2@i,w,c
  5710  006028  B0D8               	btfsc	status,0,c
  5711  00602A  0012               	return	
  5712                           
  5713                           ;SIN.c: 49: for (j=0;j<valoresSeno[i];j++){
  5714  00602C  0E00               	movlw	0
  5715  00602E  6E2D               	movwf	SENO_2@j+1,c
  5716  006030  0E00               	movlw	0
  5717  006032  6E2C               	movwf	SENO_2@j,c
  5718  006034  D004               	goto	l2808
  5719  006036                     l295:
  5720                           
  5721                           ;SIN.c: 50: PORTCbits.RC2=1;
  5722  006036  8482               	bsf	3970,2,c	;volatile
  5723                           
  5724                           ;SIN.c: 51: PORTAbits.RA6=1;
  5725  006038  8C80               	bsf	3968,6,c	;volatile
  5726  00603A  4A2C               	infsnz	SENO_2@j,f,c
  5727  00603C  2A2D               	incf	SENO_2@j+1,f,c
  5728  00603E                     l2808:
  5729  00603E  0E06               	movlw	low SENO_2@valoresSeno
  5730  006040  6E01               	movwf	??_SENO_2& (0+255),c
  5731  006042  0E00               	movlw	high SENO_2@valoresSeno
  5732  006044  6E02               	movwf	(??_SENO_2+1)& (0+255),c
  5733  006046  90D8               	bcf	status,0,c
  5734  006048  342E               	rlcf	SENO_2@i,w,c
  5735  00604A  6ED9               	movwf	fsr2l,c
  5736  00604C  342F               	rlcf	SENO_2@i+1,w,c
  5737  00604E  6EDA               	movwf	fsr2h,c
  5738  006050  5001               	movf	??_SENO_2,w,c
  5739  006052  26D9               	addwf	fsr2l,f,c
  5740  006054  5002               	movf	??_SENO_2+1,w,c
  5741  006056  22DA               	addwfc	fsr2h,f,c
  5742  006058  CFDE F003          	movff	postinc2,??_SENO_2+2
  5743  00605C  CFDD F004          	movff	postdec2,??_SENO_2+3
  5744  006060  502D               	movf	SENO_2@j+1,w,c
  5745  006062  0A80               	xorlw	128
  5746  006064  6E05               	movwf	(??_SENO_2+4)& (0+255),c
  5747  006066  5003               	movf	??_SENO_2+2,w,c
  5748  006068  5C2C               	subwf	SENO_2@j,w,c
  5749  00606A  5004               	movf	??_SENO_2+3,w,c
  5750  00606C  0A80               	xorlw	128
  5751  00606E  5805               	subwfb	(??_SENO_2+4)& (0+255),w,c
  5752  006070  A0D8               	btfss	status,0,c
  5753  006072  D7E1               	goto	l295
  5754                           
  5755                           ;SIN.c: 52: }
  5756                           ;SIN.c: 53: k=100-valoresSeno[i];
  5757  006074  0E06               	movlw	low SENO_2@valoresSeno
  5758  006076  6E01               	movwf	??_SENO_2& (0+255),c
  5759  006078  0E00               	movlw	high SENO_2@valoresSeno
  5760  00607A  6E02               	movwf	(??_SENO_2+1)& (0+255),c
  5761  00607C  90D8               	bcf	status,0,c
  5762  00607E  342E               	rlcf	SENO_2@i,w,c
  5763  006080  6ED9               	movwf	fsr2l,c
  5764  006082  342F               	rlcf	SENO_2@i+1,w,c
  5765  006084  6EDA               	movwf	fsr2h,c
  5766  006086  5001               	movf	??_SENO_2,w,c
  5767  006088  26D9               	addwf	fsr2l,f,c
  5768  00608A  5002               	movf	??_SENO_2+1,w,c
  5769  00608C  22DA               	addwfc	fsr2h,f,c
  5770  00608E  CFDE F003          	movff	postinc2,??_SENO_2+2
  5771  006092  CFDD F004          	movff	postdec2,??_SENO_2+3
  5772  006096  1E03               	comf	??_SENO_2+2,f,c
  5773  006098  1E04               	comf	??_SENO_2+3,f,c
  5774  00609A  4A03               	infsnz	??_SENO_2+2,f,c
  5775  00609C  2A04               	incf	??_SENO_2+3,f,c
  5776  00609E  0E64               	movlw	100
  5777  0060A0  2403               	addwf	??_SENO_2+2,w,c
  5778  0060A2  6E2A               	movwf	SENO_2@k,c
  5779  0060A4  0E00               	movlw	0
  5780  0060A6  2004               	addwfc	??_SENO_2+3,w,c
  5781  0060A8  6E2B               	movwf	SENO_2@k+1,c
  5782                           
  5783                           ;SIN.c: 54: for (j=0;j<k;j++){
  5784  0060AA  0E00               	movlw	0
  5785  0060AC  6E2D               	movwf	SENO_2@j+1,c
  5786  0060AE  0E00               	movlw	0
  5787  0060B0  6E2C               	movwf	SENO_2@j,c
  5788  0060B2  D004               	goto	l2816
  5789  0060B4                     l298:
  5790                           
  5791                           ;SIN.c: 55: PORTCbits.RC2=0;
  5792  0060B4  9482               	bcf	3970,2,c	;volatile
  5793                           
  5794                           ;SIN.c: 56: PORTAbits.RA6=0;
  5795  0060B6  9C80               	bcf	3968,6,c	;volatile
  5796  0060B8  4A2C               	infsnz	SENO_2@j,f,c
  5797  0060BA  2A2D               	incf	SENO_2@j+1,f,c
  5798  0060BC                     l2816:
  5799  0060BC  502D               	movf	SENO_2@j+1,w,c
  5800  0060BE  0A80               	xorlw	128
  5801  0060C0  6E01               	movwf	??_SENO_2& (0+255),c
  5802  0060C2  502A               	movf	SENO_2@k,w,c
  5803  0060C4  5C2C               	subwf	SENO_2@j,w,c
  5804  0060C6  502B               	movf	SENO_2@k+1,w,c
  5805  0060C8  0A80               	xorlw	128
  5806  0060CA  5801               	subwfb	??_SENO_2& (0+255),w,c
  5807  0060CC  A0D8               	btfss	status,0,c
  5808  0060CE  D7F2               	goto	l298
  5809  0060D0  4A2E               	infsnz	SENO_2@i,f,c
  5810  0060D2  2A2F               	incf	SENO_2@i+1,f,c
  5811  0060D4  D7A3               	goto	L21
  5812  0060D6                     __end_of_SENO_2:
  5813                           	opt stack 0
  5814                           tblptru	equ	0xFF8
  5815                           tblptrh	equ	0xFF7
  5816                           tblptrl	equ	0xFF6
  5817                           tablat	equ	0xFF5
  5818                           prodh	equ	0xFF4
  5819                           prodl	equ	0xFF3
  5820                           postinc0	equ	0xFEE
  5821                           wreg	equ	0xFE8
  5822                           postinc1	equ	0xFE6
  5823                           postdec1	equ	0xFE5
  5824                           fsr1l	equ	0xFE1
  5825                           postinc2	equ	0xFDE
  5826                           postdec2	equ	0xFDD
  5827                           fsr2h	equ	0xFDA
  5828                           fsr2l	equ	0xFD9
  5829                           status	equ	0xFD8
  5830                           
  5831 ;; *************** function _SENO_1 *****************
  5832 ;; Defined at:
  5833 ;;		line 11 in file "SIN.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;		None
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  valoresSeno    40    5[COMRAM] int [20]
  5838 ;;  i               2   49[COMRAM] int 
  5839 ;;  j               2   47[COMRAM] int 
  5840 ;;  k               2   45[COMRAM] int 
  5841 ;; Return value:  Size  Location     Type
  5842 ;;		None               void
  5843 ;; Registers used:
  5844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5850 ;;      Params:         0       0       0       0       0       0       0       0       0
  5851 ;;      Locals:        46       0       0       0       0       0       0       0       0
  5852 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5853 ;;      Totals:        51       0       0       0       0       0       0       0       0
  5854 ;;Total ram usage:       51 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_main
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text10
  5864  005EE2                     __ptext10:
  5865                           	opt stack 0
  5866  005EE2                     _SENO_1:
  5867                           	opt stack 30
  5868                           
  5869                           ;SIN.c: 12: OSCCON=0b01010111;
  5870                           
  5871                           ;incstack = 0
  5872  005EE2  0E57               	movlw	87
  5873  005EE4  6ED3               	movwf	4051,c	;volatile
  5874                           
  5875                           ;SIN.c: 13: TRISAbits.RA6=0;
  5876  005EE6  9C92               	bcf	3986,6,c	;volatile
  5877                           
  5878                           ;SIN.c: 14: TRISCbits.RC2=0;
  5879  005EE8  9494               	bcf	3988,2,c	;volatile
  5880                           
  5881                           ;SIN.c: 15: int valoresSeno [20]= {50,35,21,10, 2, 0, 2,10, 21, 35, 50, 65, 79, 90, 98,
  5882                           ;SIN.c: 16: 100, 98, 90, 79, 65};
  5883  005EEA  EE21  F000         	lfsr	2,SENO_1@F7354
  5884  005EEE  EE10  F006         	lfsr	1,SENO_1@valoresSeno
  5885  005EF2  0E28               	movlw	40
  5886  005EF4                     u2141:
  5887  005EF4  CFDE FFE6          	movff	postinc2,postinc1
  5888  005EF8  2EE8               	decfsz	wreg,f,c
  5889  005EFA  D7FC               	goto	u2141
  5890                           
  5891                           ;SIN.c: 17: int i, j,k;
  5892                           ;SIN.c: 18: for (i=0;i<20;i++){
  5893  005EFC  0E00               	movlw	0
  5894  005EFE  6E33               	movwf	SENO_1@i+1,c
  5895  005F00  0E00               	movlw	0
  5896  005F02  6E32               	movwf	SENO_1@i,c
  5897  005F04  5033               	movf	SENO_1@i+1,w,c
  5898  005F06  0A80               	xorlw	128
  5899  005F08  0F80               	addlw	-128
  5900  005F0A  0E14               	movlw	20
  5901  005F0C  B4D8               	btfsc	status,2,c
  5902  005F0E  5C32               	subwf	SENO_1@i,w,c
  5903  005F10  B0D8               	btfsc	status,0,c
  5904  005F12  D003               	goto	l2756
  5905  005F14  4A32               	infsnz	SENO_1@i,f,c
  5906  005F16  2A33               	incf	SENO_1@i+1,f,c
  5907  005F18  D7F5               	goto	L22
  5908  005F1A                     l2756:
  5909                           
  5910                           ;SIN.c: 22: for (i=0;i<20;i++){
  5911  005F1A  0E00               	movlw	0
  5912  005F1C  6E33               	movwf	SENO_1@i+1,c
  5913  005F1E  0E00               	movlw	0
  5914  005F20  6E32               	movwf	SENO_1@i,c
  5915  005F22  5033               	movf	SENO_1@i+1,w,c
  5916  005F24  0A80               	xorlw	128
  5917  005F26  0F80               	addlw	-128
  5918  005F28  0E14               	movlw	20
  5919  005F2A  B4D8               	btfsc	status,2,c
  5920  005F2C  5C32               	subwf	SENO_1@i,w,c
  5921  005F2E  B0D8               	btfsc	status,0,c
  5922  005F30  0012               	return	
  5923                           
  5924                           ;SIN.c: 23: for (j=0;j<valoresSeno[i];j++){
  5925  005F32  0E00               	movlw	0
  5926  005F34  6E31               	movwf	SENO_1@j+1,c
  5927  005F36  0E00               	movlw	0
  5928  005F38  6E30               	movwf	SENO_1@j,c
  5929  005F3A  D004               	goto	l2766
  5930  005F3C                     l277:
  5931                           
  5932                           ;SIN.c: 24: PORTCbits.RC2=1;
  5933  005F3C  8482               	bsf	3970,2,c	;volatile
  5934                           
  5935                           ;SIN.c: 25: PORTAbits.RA6=1;
  5936  005F3E  8C80               	bsf	3968,6,c	;volatile
  5937  005F40  4A30               	infsnz	SENO_1@j,f,c
  5938  005F42  2A31               	incf	SENO_1@j+1,f,c
  5939  005F44                     l2766:
  5940  005F44  0E06               	movlw	low SENO_1@valoresSeno
  5941  005F46  6E01               	movwf	??_SENO_1& (0+255),c
  5942  005F48  0E00               	movlw	high SENO_1@valoresSeno
  5943  005F4A  6E02               	movwf	(??_SENO_1+1)& (0+255),c
  5944  005F4C  90D8               	bcf	status,0,c
  5945  005F4E  3432               	rlcf	SENO_1@i,w,c
  5946  005F50  6ED9               	movwf	fsr2l,c
  5947  005F52  3433               	rlcf	SENO_1@i+1,w,c
  5948  005F54  6EDA               	movwf	fsr2h,c
  5949  005F56  5001               	movf	??_SENO_1,w,c
  5950  005F58  26D9               	addwf	fsr2l,f,c
  5951  005F5A  5002               	movf	??_SENO_1+1,w,c
  5952  005F5C  22DA               	addwfc	fsr2h,f,c
  5953  005F5E  CFDE F003          	movff	postinc2,??_SENO_1+2
  5954  005F62  CFDD F004          	movff	postdec2,??_SENO_1+3
  5955  005F66  5031               	movf	SENO_1@j+1,w,c
  5956  005F68  0A80               	xorlw	128
  5957  005F6A  6E05               	movwf	(??_SENO_1+4)& (0+255),c
  5958  005F6C  5003               	movf	??_SENO_1+2,w,c
  5959  005F6E  5C30               	subwf	SENO_1@j,w,c
  5960  005F70  5004               	movf	??_SENO_1+3,w,c
  5961  005F72  0A80               	xorlw	128
  5962  005F74  5805               	subwfb	(??_SENO_1+4)& (0+255),w,c
  5963  005F76  A0D8               	btfss	status,0,c
  5964  005F78  D7E1               	goto	l277
  5965                           
  5966                           ;SIN.c: 26: }
  5967                           ;SIN.c: 27: k=100-valoresSeno[i];
  5968  005F7A  0E06               	movlw	low SENO_1@valoresSeno
  5969  005F7C  6E01               	movwf	??_SENO_1& (0+255),c
  5970  005F7E  0E00               	movlw	high SENO_1@valoresSeno
  5971  005F80  6E02               	movwf	(??_SENO_1+1)& (0+255),c
  5972  005F82  90D8               	bcf	status,0,c
  5973  005F84  3432               	rlcf	SENO_1@i,w,c
  5974  005F86  6ED9               	movwf	fsr2l,c
  5975  005F88  3433               	rlcf	SENO_1@i+1,w,c
  5976  005F8A  6EDA               	movwf	fsr2h,c
  5977  005F8C  5001               	movf	??_SENO_1,w,c
  5978  005F8E  26D9               	addwf	fsr2l,f,c
  5979  005F90  5002               	movf	??_SENO_1+1,w,c
  5980  005F92  22DA               	addwfc	fsr2h,f,c
  5981  005F94  CFDE F003          	movff	postinc2,??_SENO_1+2
  5982  005F98  CFDD F004          	movff	postdec2,??_SENO_1+3
  5983  005F9C  1E03               	comf	??_SENO_1+2,f,c
  5984  005F9E  1E04               	comf	??_SENO_1+3,f,c
  5985  005FA0  4A03               	infsnz	??_SENO_1+2,f,c
  5986  005FA2  2A04               	incf	??_SENO_1+3,f,c
  5987  005FA4  0E64               	movlw	100
  5988  005FA6  2403               	addwf	??_SENO_1+2,w,c
  5989  005FA8  6E2E               	movwf	SENO_1@k,c
  5990  005FAA  0E00               	movlw	0
  5991  005FAC  2004               	addwfc	??_SENO_1+3,w,c
  5992  005FAE  6E2F               	movwf	SENO_1@k+1,c
  5993                           
  5994                           ;SIN.c: 28: for (j=0;j<k;j++){
  5995  005FB0  0E00               	movlw	0
  5996  005FB2  6E31               	movwf	SENO_1@j+1,c
  5997  005FB4  0E00               	movlw	0
  5998  005FB6  6E30               	movwf	SENO_1@j,c
  5999  005FB8  D004               	goto	l2774
  6000  005FBA                     l280:
  6001                           
  6002                           ;SIN.c: 29: PORTCbits.RC2=0;
  6003  005FBA  9482               	bcf	3970,2,c	;volatile
  6004                           
  6005                           ;SIN.c: 30: PORTAbits.RA6=0;
  6006  005FBC  9C80               	bcf	3968,6,c	;volatile
  6007  005FBE  4A30               	infsnz	SENO_1@j,f,c
  6008  005FC0  2A31               	incf	SENO_1@j+1,f,c
  6009  005FC2                     l2774:
  6010  005FC2  5031               	movf	SENO_1@j+1,w,c
  6011  005FC4  0A80               	xorlw	128
  6012  005FC6  6E01               	movwf	??_SENO_1& (0+255),c
  6013  005FC8  502E               	movf	SENO_1@k,w,c
  6014  005FCA  5C30               	subwf	SENO_1@j,w,c
  6015  005FCC  502F               	movf	SENO_1@k+1,w,c
  6016  005FCE  0A80               	xorlw	128
  6017  005FD0  5801               	subwfb	??_SENO_1& (0+255),w,c
  6018  005FD2  A0D8               	btfss	status,0,c
  6019  005FD4  D7F2               	goto	l280
  6020  005FD6  4A32               	infsnz	SENO_1@i,f,c
  6021  005FD8  2A33               	incf	SENO_1@i+1,f,c
  6022  005FDA  D7A3               	goto	L23
  6023  005FDC                     __end_of_SENO_1:
  6024                           	opt stack 0
  6025                           tblptru	equ	0xFF8
  6026                           tblptrh	equ	0xFF7
  6027                           tblptrl	equ	0xFF6
  6028                           tablat	equ	0xFF5
  6029                           prodh	equ	0xFF4
  6030                           prodl	equ	0xFF3
  6031                           postinc0	equ	0xFEE
  6032                           wreg	equ	0xFE8
  6033                           postinc1	equ	0xFE6
  6034                           postdec1	equ	0xFE5
  6035                           fsr1l	equ	0xFE1
  6036                           postinc2	equ	0xFDE
  6037                           postdec2	equ	0xFDD
  6038                           fsr2h	equ	0xFDA
  6039                           fsr2l	equ	0xFD9
  6040                           status	equ	0xFD8
  6041                           
  6042 ;; *************** function _PWM_generar *****************
  6043 ;; Defined at:
  6044 ;;		line 9 in file "PWM.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  ciclo           2   13[COMRAM] unsigned int 
  6047 ;;  frecuencia      2   15[COMRAM] unsigned int 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  AuxCCPR2L       4   29[COMRAM] unsigned long 
  6050 ;;  PR2cal          4   25[COMRAM] unsigned long 
  6051 ;;  AuxCCP2CON      2   23[COMRAM] unsigned int 
  6052 ;;  prescalador     2   21[COMRAM] unsigned int 
  6053 ;; Return value:  Size  Location     Type
  6054 ;;		None               void
  6055 ;; Registers used:
  6056 ;;		wreg, status,2, status,0, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6062 ;;      Params:         4       0       0       0       0       0       0       0       0
  6063 ;;      Locals:        12       0       0       0       0       0       0       0       0
  6064 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6065 ;;      Totals:        20       0       0       0       0       0       0       0       0
  6066 ;;Total ram usage:       20 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    1
  6069 ;; This function calls:
  6070 ;;		___lldiv
  6071 ;;		___lmul
  6072 ;; This function is called by:
  6073 ;;		_main
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           	psect	text11
  6078  006BAC                     __ptext11:
  6079                           	opt stack 0
  6080  006BAC                     _PWM_generar:
  6081                           	opt stack 29
  6082                           
  6083                           ;PWM.c: 16: TRISCbits.RC1=0;
  6084                           
  6085                           ;incstack = 0
  6086  006BAC  9294               	bcf	3988,1,c	;volatile
  6087                           
  6088                           ;PWM.c: 18: unsigned int prescalador=1;
  6089  006BAE  0E00               	movlw	0
  6090  006BB0  6E17               	movwf	PWM_generar@prescalador+1,c
  6091  006BB2  0E01               	movlw	1
  6092  006BB4  6E16               	movwf	PWM_generar@prescalador,c
  6093                           
  6094                           ;PWM.c: 19: unsigned long PR2cal=4000000;
  6095  006BB6  0E00               	movlw	0
  6096  006BB8  6E1A               	movwf	PWM_generar@PR2cal,c
  6097  006BBA  0E09               	movlw	9
  6098  006BBC  6E1B               	movwf	PWM_generar@PR2cal+1,c
  6099  006BBE  0E3D               	movlw	61
  6100  006BC0  6E1C               	movwf	PWM_generar@PR2cal+2,c
  6101  006BC2  0E00               	movlw	0
  6102  006BC4  6E1D               	movwf	PWM_generar@PR2cal+3,c
  6103                           
  6104                           ;PWM.c: 20: PR2cal=PR2cal/frecuencia;
  6105  006BC6  C01A  F001         	movff	PWM_generar@PR2cal,___lldiv@dividend
  6106  006BCA  C01B  F002         	movff	PWM_generar@PR2cal+1,___lldiv@dividend+1
  6107  006BCE  C01C  F003         	movff	PWM_generar@PR2cal+2,___lldiv@dividend+2
  6108  006BD2  C01D  F004         	movff	PWM_generar@PR2cal+3,___lldiv@dividend+3
  6109  006BD6  C010  F005         	movff	PWM_generar@frecuencia,___lldiv@divisor
  6110  006BDA  C011  F006         	movff	PWM_generar@frecuencia+1,___lldiv@divisor+1
  6111  006BDE  6A07               	clrf	___lldiv@divisor+2,c
  6112  006BE0  6A08               	clrf	___lldiv@divisor+3,c
  6113  006BE2  ECD9  F02D         	call	___lldiv	;wreg free
  6114  006BE6  C001  F01A         	movff	?___lldiv,PWM_generar@PR2cal
  6115  006BEA  C002  F01B         	movff	?___lldiv+1,PWM_generar@PR2cal+1
  6116  006BEE  C003  F01C         	movff	?___lldiv+2,PWM_generar@PR2cal+2
  6117  006BF2  C004  F01D         	movff	?___lldiv+3,PWM_generar@PR2cal+3
  6118                           
  6119                           ;PWM.c: 21: PR2cal=PR2cal/4;
  6120  006BF6  C01A  F012         	movff	PWM_generar@PR2cal,??_PWM_generar
  6121  006BFA  C01B  F013         	movff	PWM_generar@PR2cal+1,??_PWM_generar+1
  6122  006BFE  C01C  F014         	movff	PWM_generar@PR2cal+2,??_PWM_generar+2
  6123  006C02  C01D  F015         	movff	PWM_generar@PR2cal+3,??_PWM_generar+3
  6124  006C06  0E03               	movlw	3
  6125  006C08  D005               	goto	u2560
  6126  006C0A                     u2565:
  6127  006C0A  90D8               	bcf	status,0,c
  6128  006C0C  3215               	rrcf	??_PWM_generar+3,f,c
  6129  006C0E  3214               	rrcf	??_PWM_generar+2,f,c
  6130  006C10  3213               	rrcf	??_PWM_generar+1,f,c
  6131  006C12  3212               	rrcf	??_PWM_generar,f,c
  6132  006C14                     u2560:
  6133  006C14  2EE8               	decfsz	wreg,f,c
  6134  006C16  D7F9               	goto	u2565
  6135  006C18  C012  F01A         	movff	??_PWM_generar,PWM_generar@PR2cal
  6136  006C1C  C013  F01B         	movff	??_PWM_generar+1,PWM_generar@PR2cal+1
  6137  006C20  C014  F01C         	movff	??_PWM_generar+2,PWM_generar@PR2cal+2
  6138  006C24  C015  F01D         	movff	??_PWM_generar+3,PWM_generar@PR2cal+3
  6139                           
  6140                           ;PWM.c: 22: T2CON=0b00000000;
  6141  006C28  0E00               	movlw	0
  6142  006C2A  6EBA               	movwf	4026,c	;volatile
  6143                           
  6144                           ;PWM.c: 23: while(PR2cal>256){
  6145  006C2C  D028               	goto	l3008
  6146  006C2E                     l3004:
  6147                           
  6148                           ;PWM.c: 24: prescalador=prescalador*4;
  6149  006C2E  C016  F012         	movff	PWM_generar@prescalador,??_PWM_generar
  6150  006C32  C017  F013         	movff	PWM_generar@prescalador+1,??_PWM_generar+1
  6151  006C36  90D8               	bcf	status,0,c
  6152  006C38  3612               	rlcf	??_PWM_generar,f,c
  6153  006C3A  3613               	rlcf	??_PWM_generar+1,f,c
  6154  006C3C  90D8               	bcf	status,0,c
  6155  006C3E  3612               	rlcf	??_PWM_generar,f,c
  6156  006C40  3613               	rlcf	??_PWM_generar+1,f,c
  6157  006C42  C012  F016         	movff	??_PWM_generar,PWM_generar@prescalador
  6158  006C46  C013  F017         	movff	??_PWM_generar+1,PWM_generar@prescalador+1
  6159                           
  6160                           ;PWM.c: 25: T2CON++;
  6161  006C4A  2ABA               	incf	4026,f,c	;volatile
  6162                           
  6163                           ;PWM.c: 26: PR2cal=PR2cal/4;
  6164  006C4C  C01A  F012         	movff	PWM_generar@PR2cal,??_PWM_generar
  6165  006C50  C01B  F013         	movff	PWM_generar@PR2cal+1,??_PWM_generar+1
  6166  006C54  C01C  F014         	movff	PWM_generar@PR2cal+2,??_PWM_generar+2
  6167  006C58  C01D  F015         	movff	PWM_generar@PR2cal+3,??_PWM_generar+3
  6168  006C5C  0E03               	movlw	3
  6169  006C5E  D005               	goto	u2570
  6170  006C60                     u2575:
  6171  006C60  90D8               	bcf	status,0,c
  6172  006C62  3215               	rrcf	??_PWM_generar+3,f,c
  6173  006C64  3214               	rrcf	??_PWM_generar+2,f,c
  6174  006C66  3213               	rrcf	??_PWM_generar+1,f,c
  6175  006C68  3212               	rrcf	??_PWM_generar,f,c
  6176  006C6A                     u2570:
  6177  006C6A  2EE8               	decfsz	wreg,f,c
  6178  006C6C  D7F9               	goto	u2575
  6179  006C6E  C012  F01A         	movff	??_PWM_generar,PWM_generar@PR2cal
  6180  006C72  C013  F01B         	movff	??_PWM_generar+1,PWM_generar@PR2cal+1
  6181  006C76  C014  F01C         	movff	??_PWM_generar+2,PWM_generar@PR2cal+2
  6182  006C7A  C015  F01D         	movff	??_PWM_generar+3,PWM_generar@PR2cal+3
  6183  006C7E                     l3008:
  6184  006C7E  0E01               	movlw	1
  6185  006C80  6E12               	movwf	??_PWM_generar& (0+255),c
  6186  006C82  0E01               	movlw	1
  6187  006C84  6E13               	movwf	(??_PWM_generar+1)& (0+255),c
  6188  006C86  0E00               	movlw	0
  6189  006C88  6E14               	movwf	(??_PWM_generar+2)& (0+255),c
  6190  006C8A  0E00               	movlw	0
  6191  006C8C  6E15               	movwf	(??_PWM_generar+3)& (0+255),c
  6192  006C8E  5012               	movf	??_PWM_generar,w,c
  6193  006C90  5C1A               	subwf	PWM_generar@PR2cal,w,c
  6194  006C92  5013               	movf	??_PWM_generar+1,w,c
  6195  006C94  581B               	subwfb	PWM_generar@PR2cal+1,w,c
  6196  006C96  5014               	movf	??_PWM_generar+2,w,c
  6197  006C98  581C               	subwfb	PWM_generar@PR2cal+2,w,c
  6198  006C9A  5015               	movf	??_PWM_generar+3,w,c
  6199  006C9C  581D               	subwfb	PWM_generar@PR2cal+3,w,c
  6200  006C9E  B0D8               	btfsc	status,0,c
  6201  006CA0  D7C6               	goto	l3004
  6202                           
  6203                           ;PWM.c: 27: }
  6204                           ;PWM.c: 28: PR2cal--;
  6205  006CA2  061A               	decf	PWM_generar@PR2cal,f,c
  6206  006CA4  0E00               	movlw	0
  6207  006CA6  5A1B               	subwfb	PWM_generar@PR2cal+1,f,c
  6208  006CA8  5A1C               	subwfb	PWM_generar@PR2cal+2,f,c
  6209  006CAA  5A1D               	subwfb	PWM_generar@PR2cal+3,f,c
  6210                           
  6211                           ;PWM.c: 29: PR2=PR2cal;
  6212  006CAC  C01A  FFBB         	movff	PWM_generar@PR2cal,4027	;volatile
  6213                           
  6214                           ;PWM.c: 36: unsigned long AuxCCPR2L=PR2cal;
  6215  006CB0  C01A  F01E         	movff	PWM_generar@PR2cal,PWM_generar@AuxCCPR2L
  6216  006CB4  C01B  F01F         	movff	PWM_generar@PR2cal+1,PWM_generar@AuxCCPR2L+1
  6217  006CB8  C01C  F020         	movff	PWM_generar@PR2cal+2,PWM_generar@AuxCCPR2L+2
  6218  006CBC  C01D  F021         	movff	PWM_generar@PR2cal+3,PWM_generar@AuxCCPR2L+3
  6219                           
  6220                           ;PWM.c: 37: AuxCCPR2L++;
  6221  006CC0  0E01               	movlw	1
  6222  006CC2  261E               	addwf	PWM_generar@AuxCCPR2L,f,c
  6223  006CC4  0E00               	movlw	0
  6224  006CC6  221F               	addwfc	PWM_generar@AuxCCPR2L+1,f,c
  6225  006CC8  2220               	addwfc	PWM_generar@AuxCCPR2L+2,f,c
  6226  006CCA  2221               	addwfc	PWM_generar@AuxCCPR2L+3,f,c
  6227                           
  6228                           ;PWM.c: 38: AuxCCPR2L=AuxCCPR2L*ciclo;
  6229  006CCC  C00E  F001         	movff	PWM_generar@ciclo,___lmul@multiplier
  6230  006CD0  C00F  F002         	movff	PWM_generar@ciclo+1,___lmul@multiplier+1
  6231  006CD4  6A03               	clrf	___lmul@multiplier+2,c
  6232  006CD6  6A04               	clrf	___lmul@multiplier+3,c
  6233  006CD8  C01E  F005         	movff	PWM_generar@AuxCCPR2L,___lmul@multiplicand
  6234  006CDC  C01F  F006         	movff	PWM_generar@AuxCCPR2L+1,___lmul@multiplicand+1
  6235  006CE0  C020  F007         	movff	PWM_generar@AuxCCPR2L+2,___lmul@multiplicand+2
  6236  006CE4  C021  F008         	movff	PWM_generar@AuxCCPR2L+3,___lmul@multiplicand+3
  6237  006CE8  EC18  F02D         	call	___lmul	;wreg free
  6238  006CEC  C001  F01E         	movff	?___lmul,PWM_generar@AuxCCPR2L
  6239  006CF0  C002  F01F         	movff	?___lmul+1,PWM_generar@AuxCCPR2L+1
  6240  006CF4  C003  F020         	movff	?___lmul+2,PWM_generar@AuxCCPR2L+2
  6241  006CF8  C004  F021         	movff	?___lmul+3,PWM_generar@AuxCCPR2L+3
  6242                           
  6243                           ;PWM.c: 39: AuxCCPR2L=AuxCCPR2L*4;
  6244  006CFC  C01E  F012         	movff	PWM_generar@AuxCCPR2L,??_PWM_generar
  6245  006D00  C01F  F013         	movff	PWM_generar@AuxCCPR2L+1,??_PWM_generar+1
  6246  006D04  C020  F014         	movff	PWM_generar@AuxCCPR2L+2,??_PWM_generar+2
  6247  006D08  C021  F015         	movff	PWM_generar@AuxCCPR2L+3,??_PWM_generar+3
  6248  006D0C  0E02               	movlw	2
  6249  006D0E                     u2595:
  6250  006D0E  90D8               	bcf	status,0,c
  6251  006D10  3612               	rlcf	??_PWM_generar,f,c
  6252  006D12  3613               	rlcf	??_PWM_generar+1,f,c
  6253  006D14  3614               	rlcf	??_PWM_generar+2,f,c
  6254  006D16  3615               	rlcf	??_PWM_generar+3,f,c
  6255  006D18  2EE8               	decfsz	wreg,f,c
  6256  006D1A  D7F9               	goto	u2595
  6257  006D1C  C012  F01E         	movff	??_PWM_generar,PWM_generar@AuxCCPR2L
  6258  006D20  C013  F01F         	movff	??_PWM_generar+1,PWM_generar@AuxCCPR2L+1
  6259  006D24  C014  F020         	movff	??_PWM_generar+2,PWM_generar@AuxCCPR2L+2
  6260  006D28  C015  F021         	movff	??_PWM_generar+3,PWM_generar@AuxCCPR2L+3
  6261                           
  6262                           ;PWM.c: 40: AuxCCPR2L=AuxCCPR2L/100;
  6263  006D2C  C01E  F001         	movff	PWM_generar@AuxCCPR2L,___lldiv@dividend
  6264  006D30  C01F  F002         	movff	PWM_generar@AuxCCPR2L+1,___lldiv@dividend+1
  6265  006D34  C020  F003         	movff	PWM_generar@AuxCCPR2L+2,___lldiv@dividend+2
  6266  006D38  C021  F004         	movff	PWM_generar@AuxCCPR2L+3,___lldiv@dividend+3
  6267  006D3C  0E64               	movlw	100
  6268  006D3E  6E05               	movwf	___lldiv@divisor,c
  6269  006D40  0E00               	movlw	0
  6270  006D42  6E06               	movwf	___lldiv@divisor+1,c
  6271  006D44  0E00               	movlw	0
  6272  006D46  6E07               	movwf	___lldiv@divisor+2,c
  6273  006D48  0E00               	movlw	0
  6274  006D4A  6E08               	movwf	___lldiv@divisor+3,c
  6275  006D4C  ECD9  F02D         	call	___lldiv	;wreg free
  6276  006D50  C001  F01E         	movff	?___lldiv,PWM_generar@AuxCCPR2L
  6277  006D54  C002  F01F         	movff	?___lldiv+1,PWM_generar@AuxCCPR2L+1
  6278  006D58  C003  F020         	movff	?___lldiv+2,PWM_generar@AuxCCPR2L+2
  6279  006D5C  C004  F021         	movff	?___lldiv+3,PWM_generar@AuxCCPR2L+3
  6280                           
  6281                           ;PWM.c: 41: unsigned int AuxCCP2CON= AuxCCPR2L;
  6282  006D60  C01E  F018         	movff	PWM_generar@AuxCCPR2L,PWM_generar@AuxCCP2CON
  6283  006D64  C01F  F019         	movff	PWM_generar@AuxCCPR2L+1,PWM_generar@AuxCCP2CON+1
  6284                           
  6285                           ;PWM.c: 42: AuxCCP2CON= AuxCCP2CON & 0b00000011 ;
  6286  006D68  0E03               	movlw	3
  6287  006D6A  1418               	andwf	PWM_generar@AuxCCP2CON,w,c
  6288  006D6C  6E18               	movwf	PWM_generar@AuxCCP2CON,c
  6289  006D6E  6A19               	clrf	PWM_generar@AuxCCP2CON+1,c
  6290                           
  6291                           ;PWM.c: 43: AuxCCP2CON= AuxCCP2CON*16;
  6292  006D70  C018  F012         	movff	PWM_generar@AuxCCP2CON,??_PWM_generar
  6293  006D74  C019  F013         	movff	PWM_generar@AuxCCP2CON+1,??_PWM_generar+1
  6294  006D78  3A12               	swapf	??_PWM_generar,f,c
  6295  006D7A  3A13               	swapf	??_PWM_generar+1,f,c
  6296  006D7C  0EF0               	movlw	240
  6297  006D7E  1613               	andwf	??_PWM_generar+1,f,c
  6298  006D80  5012               	movf	??_PWM_generar,w,c
  6299  006D82  0B0F               	andlw	15
  6300  006D84  1213               	iorwf	??_PWM_generar+1,f,c
  6301  006D86  0EF0               	movlw	240
  6302  006D88  1612               	andwf	??_PWM_generar,f,c
  6303  006D8A  C012  F018         	movff	??_PWM_generar,PWM_generar@AuxCCP2CON
  6304  006D8E  C013  F019         	movff	??_PWM_generar+1,PWM_generar@AuxCCP2CON+1
  6305                           
  6306                           ;PWM.c: 44: CCP2CON= 0b00001100;
  6307  006D92  0E0C               	movlw	12
  6308  006D94  6E97               	movwf	3991,c	;volatile
  6309                           
  6310                           ;PWM.c: 45: CCP2CON= CCP2CON|AuxCCP2CON;
  6311  006D96  5097               	movf	3991,w,c
  6312  006D98  1018               	iorwf	PWM_generar@AuxCCP2CON,w,c
  6313  006D9A  6E97               	movwf	3991,c	;volatile
  6314                           
  6315                           ;PWM.c: 46: AuxCCPR2L=AuxCCPR2L/4;
  6316  006D9C  C01E  F012         	movff	PWM_generar@AuxCCPR2L,??_PWM_generar
  6317  006DA0  C01F  F013         	movff	PWM_generar@AuxCCPR2L+1,??_PWM_generar+1
  6318  006DA4  C020  F014         	movff	PWM_generar@AuxCCPR2L+2,??_PWM_generar+2
  6319  006DA8  C021  F015         	movff	PWM_generar@AuxCCPR2L+3,??_PWM_generar+3
  6320  006DAC  0E03               	movlw	3
  6321  006DAE  D005               	goto	u2600
  6322  006DB0                     u2605:
  6323  006DB0  90D8               	bcf	status,0,c
  6324  006DB2  3215               	rrcf	??_PWM_generar+3,f,c
  6325  006DB4  3214               	rrcf	??_PWM_generar+2,f,c
  6326  006DB6  3213               	rrcf	??_PWM_generar+1,f,c
  6327  006DB8  3212               	rrcf	??_PWM_generar,f,c
  6328  006DBA                     u2600:
  6329  006DBA  2EE8               	decfsz	wreg,f,c
  6330  006DBC  D7F9               	goto	u2605
  6331  006DBE  C012  F01E         	movff	??_PWM_generar,PWM_generar@AuxCCPR2L
  6332  006DC2  C013  F01F         	movff	??_PWM_generar+1,PWM_generar@AuxCCPR2L+1
  6333  006DC6  C014  F020         	movff	??_PWM_generar+2,PWM_generar@AuxCCPR2L+2
  6334  006DCA  C015  F021         	movff	??_PWM_generar+3,PWM_generar@AuxCCPR2L+3
  6335                           
  6336                           ;PWM.c: 47: CCPR2L=AuxCCPR2L;
  6337  006DCE  C01E  FF90         	movff	PWM_generar@AuxCCPR2L,3984	;volatile
  6338                           
  6339                           ;PWM.c: 48: T2CONbits.TMR2ON=1;
  6340  006DD2  84BA               	bsf	4026,2,c	;volatile
  6341                           
  6342                           ;PWM.c: 49: TMR2=0;
  6343  006DD4  0E00               	movlw	0
  6344  006DD6  6EBC               	movwf	4028,c	;volatile
  6345  006DD8  0012               	return	
  6346  006DDA                     __end_of_PWM_generar:
  6347                           	opt stack 0
  6348                           tblptru	equ	0xFF8
  6349                           tblptrh	equ	0xFF7
  6350                           tblptrl	equ	0xFF6
  6351                           tablat	equ	0xFF5
  6352                           prodh	equ	0xFF4
  6353                           prodl	equ	0xFF3
  6354                           postinc0	equ	0xFEE
  6355                           wreg	equ	0xFE8
  6356                           postinc1	equ	0xFE6
  6357                           postdec1	equ	0xFE5
  6358                           fsr1l	equ	0xFE1
  6359                           postinc2	equ	0xFDE
  6360                           postdec2	equ	0xFDD
  6361                           fsr2h	equ	0xFDA
  6362                           fsr2l	equ	0xFD9
  6363                           status	equ	0xFD8
  6364                           
  6365 ;; *************** function ___lldiv *****************
  6366 ;; Defined at:
  6367 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/lldiv.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;  dividend        4    0[COMRAM] unsigned long 
  6370 ;;  divisor         4    4[COMRAM] unsigned long 
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;  quotient        4    8[COMRAM] unsigned long 
  6373 ;;  counter         1   12[COMRAM] unsigned char 
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  4    0[COMRAM] unsigned long 
  6376 ;; Registers used:
  6377 ;;		wreg, status,2, status,0
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6383 ;;      Params:         8       0       0       0       0       0       0       0       0
  6384 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6386 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6387 ;;Total ram usage:       13 bytes
  6388 ;; Hardware stack levels used:    1
  6389 ;; This function calls:
  6390 ;;		Nothing
  6391 ;; This function is called by:
  6392 ;;		_PWM_generar
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	text12
  6397  005BB2                     __ptext12:
  6398                           	opt stack 0
  6399  005BB2                     ___lldiv:
  6400                           	opt stack 29
  6401                           
  6402                           ;incstack = 0
  6403  005BB2  0E00               	movlw	0
  6404  005BB4  6E09               	movwf	___lldiv@quotient,c
  6405  005BB6  0E00               	movlw	0
  6406  005BB8  6E0A               	movwf	___lldiv@quotient+1,c
  6407  005BBA  0E00               	movlw	0
  6408  005BBC  6E0B               	movwf	___lldiv@quotient+2,c
  6409  005BBE  0E00               	movlw	0
  6410  005BC0  6E0C               	movwf	___lldiv@quotient+3,c
  6411  005BC2  5008               	movf	___lldiv@divisor+3,w,c
  6412  005BC4  1005               	iorwf	___lldiv@divisor,w,c
  6413  005BC6  1006               	iorwf	___lldiv@divisor+1,w,c
  6414  005BC8  1007               	iorwf	___lldiv@divisor+2,w,c
  6415  005BCA  B4D8               	btfsc	status,2,c
  6416  005BCC  D02A               	goto	l836
  6417  005BCE  0E01               	movlw	1
  6418  005BD0  6E0D               	movwf	___lldiv@counter,c
  6419  005BD2  D006               	goto	l2584
  6420  005BD4                     l2582:
  6421  005BD4  90D8               	bcf	status,0,c
  6422  005BD6  3605               	rlcf	___lldiv@divisor,f,c
  6423  005BD8  3606               	rlcf	___lldiv@divisor+1,f,c
  6424  005BDA  3607               	rlcf	___lldiv@divisor+2,f,c
  6425  005BDC  3608               	rlcf	___lldiv@divisor+3,f,c
  6426  005BDE  2A0D               	incf	___lldiv@counter,f,c
  6427  005BE0                     l2584:
  6428  005BE0  AE08               	btfss	___lldiv@divisor+3,7,c
  6429  005BE2  D7F8               	goto	l2582
  6430  005BE4                     l2586:
  6431  005BE4  90D8               	bcf	status,0,c
  6432  005BE6  3609               	rlcf	___lldiv@quotient,f,c
  6433  005BE8  360A               	rlcf	___lldiv@quotient+1,f,c
  6434  005BEA  360B               	rlcf	___lldiv@quotient+2,f,c
  6435  005BEC  360C               	rlcf	___lldiv@quotient+3,f,c
  6436  005BEE  5005               	movf	___lldiv@divisor,w,c
  6437  005BF0  5C01               	subwf	___lldiv@dividend,w,c
  6438  005BF2  5006               	movf	___lldiv@divisor+1,w,c
  6439  005BF4  5802               	subwfb	___lldiv@dividend+1,w,c
  6440  005BF6  5007               	movf	___lldiv@divisor+2,w,c
  6441  005BF8  5803               	subwfb	___lldiv@dividend+2,w,c
  6442  005BFA  5008               	movf	___lldiv@divisor+3,w,c
  6443  005BFC  5804               	subwfb	___lldiv@dividend+3,w,c
  6444  005BFE  A0D8               	btfss	status,0,c
  6445  005C00  D009               	goto	l2594
  6446  005C02  5005               	movf	___lldiv@divisor,w,c
  6447  005C04  5E01               	subwf	___lldiv@dividend,f,c
  6448  005C06  5006               	movf	___lldiv@divisor+1,w,c
  6449  005C08  5A02               	subwfb	___lldiv@dividend+1,f,c
  6450  005C0A  5007               	movf	___lldiv@divisor+2,w,c
  6451  005C0C  5A03               	subwfb	___lldiv@dividend+2,f,c
  6452  005C0E  5008               	movf	___lldiv@divisor+3,w,c
  6453  005C10  5A04               	subwfb	___lldiv@dividend+3,f,c
  6454  005C12  8009               	bsf	___lldiv@quotient,0,c
  6455  005C14                     l2594:
  6456  005C14  90D8               	bcf	status,0,c
  6457  005C16  3208               	rrcf	___lldiv@divisor+3,f,c
  6458  005C18  3207               	rrcf	___lldiv@divisor+2,f,c
  6459  005C1A  3206               	rrcf	___lldiv@divisor+1,f,c
  6460  005C1C  3205               	rrcf	___lldiv@divisor,f,c
  6461  005C1E  2E0D               	decfsz	___lldiv@counter,f,c
  6462  005C20  D7E1               	goto	l2586
  6463  005C22                     l836:
  6464  005C22  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6465  005C26  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6466  005C2A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6467  005C2E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6468  005C32  0012               	return	
  6469  005C34                     __end_of___lldiv:
  6470                           	opt stack 0
  6471                           tblptru	equ	0xFF8
  6472                           tblptrh	equ	0xFF7
  6473                           tblptrl	equ	0xFF6
  6474                           tablat	equ	0xFF5
  6475                           prodh	equ	0xFF4
  6476                           prodl	equ	0xFF3
  6477                           postinc0	equ	0xFEE
  6478                           wreg	equ	0xFE8
  6479                           postinc1	equ	0xFE6
  6480                           postdec1	equ	0xFE5
  6481                           fsr1l	equ	0xFE1
  6482                           postinc2	equ	0xFDE
  6483                           postdec2	equ	0xFDD
  6484                           fsr2h	equ	0xFDA
  6485                           fsr2l	equ	0xFD9
  6486                           status	equ	0xFD8
  6487                           
  6488 ;; *************** function _Lcd_Out2 *****************
  6489 ;; Defined at:
  6490 ;;		line 113 in file "LCD.h"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  y               1    wreg     unsigned char 
  6493 ;;  x               1    3[COMRAM] unsigned char 
  6494 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  6495 ;;		 -> STR_91(2), STR_90(4), STR_89(11), STR_88(12), 
  6496 ;;		 -> STR_87(12), STR_86(6), STR_85(5), STR_84(5), 
  6497 ;;		 -> STR_83(5), STR_82(6), STR_81(5), STR_80(5), 
  6498 ;;		 -> STR_79(5), STR_78(6), STR_77(5), STR_76(5), 
  6499 ;;		 -> STR_75(5), STR_74(6), STR_73(5), STR_72(5), 
  6500 ;;		 -> STR_71(6), STR_70(5), STR_69(5), STR_68(5), 
  6501 ;;		 -> STR_67(5), STR_66(5), STR_65(5), STR_64(5), 
  6502 ;;		 -> STR_63(5), STR_62(5), STR_61(5), STR_60(5), 
  6503 ;;		 -> STR_59(5), STR_58(5), STR_57(5), STR_56(5), 
  6504 ;;		 -> STR_55(5), STR_54(5), STR_53(5), STR_52(5), 
  6505 ;;		 -> STR_51(5), STR_50(5), STR_49(5), STR_48(5), 
  6506 ;;		 -> STR_47(5), STR_46(5), STR_45(5), STR_44(5), 
  6507 ;;		 -> STR_43(5), STR_42(5), STR_41(5), STR_40(5), 
  6508 ;;		 -> STR_39(5), STR_38(5), STR_37(5), STR_36(5), 
  6509 ;;		 -> STR_35(5), STR_34(9), STR_33(14), STR_32(9), 
  6510 ;;		 -> STR_31(9), STR_30(14), STR_29(9), STR_28(14), 
  6511 ;;		 -> STR_27(12), STR_26(12), STR_25(12), STR_24(12), 
  6512 ;;		 -> STR_23(7), STR_22(8), STR_21(10), STR_20(8), 
  6513 ;;		 -> STR_19(10), STR_18(10), STR_17(8), STR_16(10), 
  6514 ;;		 -> STR_15(10), STR_14(14), STR_13(12), STR_12(7), 
  6515 ;;		 -> STR_11(9), STR_10(7), STR_9(9), STR_8(9), 
  6516 ;;		 -> STR_7(7), STR_6(9), STR_5(9), STR_4(14), 
  6517 ;;		 -> STR_3(12), STR_2(16), STR_1(11), 
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;  y               1    6[COMRAM] unsigned char 
  6520 ;;  data            1    7[COMRAM] unsigned char 
  6521 ;; Return value:  Size  Location     Type
  6522 ;;		None               void
  6523 ;; Registers used:
  6524 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6530 ;;      Params:         3       0       0       0       0       0       0       0       0
  6531 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6533 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6534 ;;Total ram usage:        5 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; Hardware stack levels required when called:    1
  6537 ;; This function calls:
  6538 ;;		_Lcd_Chr_CP
  6539 ;;		_Lcd_Cmd
  6540 ;; This function is called by:
  6541 ;;		_main
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text13
  6546  005B4A                     __ptext13:
  6547                           	opt stack 0
  6548  005B4A                     _Lcd_Out2:
  6549                           	opt stack 29
  6550                           
  6551                           ;incstack = 0
  6552                           ;Lcd_Out2@y stored from wreg
  6553  005B4A  6E07               	movwf	Lcd_Out2@y,c
  6554                           
  6555                           ;LCD.h: 115: unsigned char data;
  6556                           ;LCD.h: 116: switch (y)
  6557  005B4C  D00D               	goto	l2708
  6558  005B4E                     l2698:
  6559  005B4E  5004               	movf	Lcd_Out2@x,w,c
  6560  005B50  0F80               	addlw	128
  6561  005B52  D008               	goto	L26
  6562  005B54                     l2700:
  6563  005B54  5004               	movf	Lcd_Out2@x,w,c
  6564  005B56  0FC0               	addlw	192
  6565  005B58  D005               	goto	L26
  6566  005B5A                     l2702:
  6567  005B5A  5004               	movf	Lcd_Out2@x,w,c
  6568  005B5C  0F94               	addlw	148
  6569  005B5E  D002               	goto	L26
  6570  005B60                     l2704:
  6571  005B60  5004               	movf	Lcd_Out2@x,w,c
  6572  005B62  0FD4               	addlw	212
  6573  005B64                     L26:
  6574  005B64  6E08               	movwf	Lcd_Out2@data,c
  6575  005B66  D00D               	goto	l2710
  6576  005B68                     l2708:
  6577  005B68  5007               	movf	Lcd_Out2@y,w,c
  6578                           
  6579                           ; Switch size 1, requested type "space"
  6580                           ; Number of cases is 4, Range of values is 1 to 4
  6581                           ; switch strategies available:
  6582                           ; Name         Instructions Cycles
  6583                           ; simple_byte           13     7 (average)
  6584                           ;	Chosen strategy is simple_byte
  6585  005B6A  0A01               	xorlw	1	; case 1
  6586  005B6C  B4D8               	btfsc	status,2,c
  6587  005B6E  D7EF               	goto	l2698
  6588  005B70  0A03               	xorlw	3	; case 2
  6589  005B72  B4D8               	btfsc	status,2,c
  6590  005B74  D7EF               	goto	l2700
  6591  005B76  0A01               	xorlw	1	; case 3
  6592  005B78  B4D8               	btfsc	status,2,c
  6593  005B7A  D7EF               	goto	l2702
  6594  005B7C  0A07               	xorlw	7	; case 4
  6595  005B7E  B4D8               	btfsc	status,2,c
  6596  005B80  D7EF               	goto	l2704
  6597  005B82                     l2710:
  6598                           
  6599                           ;LCD.h: 124: Lcd_Cmd(data);
  6600  005B82  5008               	movf	Lcd_Out2@data,w,c
  6601  005B84  ECE3  F031         	call	_Lcd_Cmd
  6602                           
  6603                           ;LCD.h: 125: while(*buffer)
  6604  005B88  D00A               	goto	l2716
  6605  005B8A                     l2712:
  6606                           
  6607                           ;LCD.h: 126: {
  6608                           ;LCD.h: 127: Lcd_Chr_CP(*buffer);
  6609  005B8A  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  6610  005B8E  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  6611  005B92                     	if	0	;tblptru may be non-zero
  6612  005B92                     	endif
  6613  005B92                     	if	0	;tblptru may be non-zero
  6614  005B92                     	endif
  6615  005B92  0008               	tblrd		*
  6616  005B94  50F5               	movf	tablat,w,c
  6617  005B96  EC0A  F033         	call	_Lcd_Chr_CP
  6618                           
  6619                           ;LCD.h: 128: buffer++;
  6620  005B9A  4A05               	infsnz	Lcd_Out2@buffer,f,c
  6621  005B9C  2A06               	incf	Lcd_Out2@buffer+1,f,c
  6622  005B9E                     l2716:
  6623  005B9E  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
  6624  005BA2  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
  6625  005BA6                     	if	0	;tblptru may be non-zero
  6626  005BA6                     	endif
  6627  005BA6                     	if	0	;tblptru may be non-zero
  6628  005BA6                     	endif
  6629  005BA6  0008               	tblrd		*
  6630  005BA8  50F5               	movf	tablat,w,c
  6631  005BAA  0900               	iorlw	0
  6632  005BAC  B4D8               	btfsc	status,2,c
  6633                           
  6634                           ;LCD.h: 129: }
  6635                           ;LCD.h: 130: return;
  6636  005BAE  0012               	return	
  6637  005BB0  D7EC               	goto	l2712
  6638  005BB2                     __end_of_Lcd_Out2:
  6639                           	opt stack 0
  6640                           tblptru	equ	0xFF8
  6641                           tblptrh	equ	0xFF7
  6642                           tblptrl	equ	0xFF6
  6643                           tablat	equ	0xFF5
  6644                           prodh	equ	0xFF4
  6645                           prodl	equ	0xFF3
  6646                           postinc0	equ	0xFEE
  6647                           wreg	equ	0xFE8
  6648                           postinc1	equ	0xFE6
  6649                           postdec1	equ	0xFE5
  6650                           fsr1l	equ	0xFE1
  6651                           postinc2	equ	0xFDE
  6652                           postdec2	equ	0xFDD
  6653                           fsr2h	equ	0xFDA
  6654                           fsr2l	equ	0xFD9
  6655                           status	equ	0xFD8
  6656                           
  6657 ;; *************** function _Lcd_Out *****************
  6658 ;; Defined at:
  6659 ;;		line 92 in file "LCD.h"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  y               1    wreg     unsigned char 
  6662 ;;  x               1    3[COMRAM] unsigned char 
  6663 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  6664 ;;		 -> main@cadena(20), 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;  y               1    6[COMRAM] unsigned char 
  6667 ;;  data            1    7[COMRAM] unsigned char 
  6668 ;; Return value:  Size  Location     Type
  6669 ;;		None               void
  6670 ;; Registers used:
  6671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6677 ;;      Params:         3       0       0       0       0       0       0       0       0
  6678 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6680 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6681 ;;Total ram usage:        5 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    1
  6684 ;; This function calls:
  6685 ;;		_Lcd_Chr_CP
  6686 ;;		_Lcd_Cmd
  6687 ;; This function is called by:
  6688 ;;		_main
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text14
  6693  005A86                     __ptext14:
  6694                           	opt stack 0
  6695  005A86                     _Lcd_Out:
  6696                           	opt stack 29
  6697                           
  6698                           ;incstack = 0
  6699                           ;Lcd_Out@y stored from wreg
  6700  005A86  6E07               	movwf	Lcd_Out@y,c
  6701                           
  6702                           ;LCD.h: 94: unsigned char data;
  6703                           ;LCD.h: 95: switch (y)
  6704  005A88  D00D               	goto	l2686
  6705  005A8A                     l2676:
  6706  005A8A  5004               	movf	Lcd_Out@x,w,c
  6707  005A8C  0F80               	addlw	128
  6708  005A8E  D008               	goto	L29
  6709  005A90                     l2678:
  6710  005A90  5004               	movf	Lcd_Out@x,w,c
  6711  005A92  0FC0               	addlw	192
  6712  005A94  D005               	goto	L29
  6713  005A96                     l2680:
  6714  005A96  5004               	movf	Lcd_Out@x,w,c
  6715  005A98  0F94               	addlw	148
  6716  005A9A  D002               	goto	L29
  6717  005A9C                     l2682:
  6718  005A9C  5004               	movf	Lcd_Out@x,w,c
  6719  005A9E  0FD4               	addlw	212
  6720  005AA0                     L29:
  6721  005AA0  6E08               	movwf	Lcd_Out@data,c
  6722  005AA2  D00D               	goto	l2688
  6723  005AA4                     l2686:
  6724  005AA4  5007               	movf	Lcd_Out@y,w,c
  6725                           
  6726                           ; Switch size 1, requested type "space"
  6727                           ; Number of cases is 4, Range of values is 1 to 4
  6728                           ; switch strategies available:
  6729                           ; Name         Instructions Cycles
  6730                           ; simple_byte           13     7 (average)
  6731                           ;	Chosen strategy is simple_byte
  6732  005AA6  0A01               	xorlw	1	; case 1
  6733  005AA8  B4D8               	btfsc	status,2,c
  6734  005AAA  D7EF               	goto	l2676
  6735  005AAC  0A03               	xorlw	3	; case 2
  6736  005AAE  B4D8               	btfsc	status,2,c
  6737  005AB0  D7EF               	goto	l2678
  6738  005AB2  0A01               	xorlw	1	; case 3
  6739  005AB4  B4D8               	btfsc	status,2,c
  6740  005AB6  D7EF               	goto	l2680
  6741  005AB8  0A07               	xorlw	7	; case 4
  6742  005ABA  B4D8               	btfsc	status,2,c
  6743  005ABC  D7EF               	goto	l2682
  6744  005ABE                     l2688:
  6745                           
  6746                           ;LCD.h: 103: Lcd_Cmd(data);
  6747  005ABE  5008               	movf	Lcd_Out@data,w,c
  6748  005AC0  ECE3  F031         	call	_Lcd_Cmd
  6749                           
  6750                           ;LCD.h: 104: while(*buffer)
  6751  005AC4  D009               	goto	l2694
  6752  005AC6                     l2690:
  6753                           
  6754                           ;LCD.h: 105: {
  6755                           ;LCD.h: 106: Lcd_Chr_CP(*buffer);
  6756  005AC6  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  6757  005ACA  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  6758  005ACE  50DF               	movf	indf2,w,c
  6759  005AD0  EC0A  F033         	call	_Lcd_Chr_CP
  6760                           
  6761                           ;LCD.h: 107: buffer++;
  6762  005AD4  4A05               	infsnz	Lcd_Out@buffer,f,c
  6763  005AD6  2A06               	incf	Lcd_Out@buffer+1,f,c
  6764  005AD8                     l2694:
  6765  005AD8  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  6766  005ADC  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  6767  005AE0  50DF               	movf	indf2,w,c
  6768  005AE2  B4D8               	btfsc	status,2,c
  6769                           
  6770                           ;LCD.h: 108: }
  6771                           ;LCD.h: 109: return;
  6772  005AE4  0012               	return	
  6773  005AE6  D7EF               	goto	l2690
  6774  005AE8                     __end_of_Lcd_Out:
  6775                           	opt stack 0
  6776                           tblptru	equ	0xFF8
  6777                           tblptrh	equ	0xFF7
  6778                           tblptrl	equ	0xFF6
  6779                           tablat	equ	0xFF5
  6780                           prodh	equ	0xFF4
  6781                           prodl	equ	0xFF3
  6782                           postinc0	equ	0xFEE
  6783                           wreg	equ	0xFE8
  6784                           postinc1	equ	0xFE6
  6785                           postdec1	equ	0xFE5
  6786                           fsr1l	equ	0xFE1
  6787                           indf2	equ	0xFDF
  6788                           postinc2	equ	0xFDE
  6789                           postdec2	equ	0xFDD
  6790                           fsr2h	equ	0xFDA
  6791                           fsr2l	equ	0xFD9
  6792                           status	equ	0xFD8
  6793                           
  6794 ;; *************** function _Lcd_Chr_CP *****************
  6795 ;; Defined at:
  6796 ;;		line 134 in file "LCD.h"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  data            1    wreg     unsigned char 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;  data            1    2[COMRAM] unsigned char 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;		None               void
  6803 ;; Registers used:
  6804 ;;		wreg, status,2, status,0
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6810 ;;      Params:         0       0       0       0       0       0       0       0       0
  6811 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6812 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6813 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6814 ;;Total ram usage:        3 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; This function calls:
  6817 ;;		Nothing
  6818 ;; This function is called by:
  6819 ;;		_Lcd_Out
  6820 ;;		_Lcd_Out2
  6821 ;;		_main
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text15
  6826  006614                     __ptext15:
  6827                           	opt stack 0
  6828  006614                     _Lcd_Chr_CP:
  6829                           	opt stack 29
  6830                           
  6831                           ;incstack = 0
  6832                           ;Lcd_Chr_CP@data stored from wreg
  6833  006614  6E03               	movwf	Lcd_Chr_CP@data,c
  6834                           
  6835                           ;LCD.h: 135: PORTDbits.RD2 = 0; PORTDbits.RD0 = 1;
  6836  006616  9483               	bcf	3971,2,c	;volatile
  6837  006618  8083               	bsf	3971,0,c	;volatile
  6838                           
  6839                           ;LCD.h: 136: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  6840  00661A  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  6841  00661C  AE03               	btfss	Lcd_Chr_CP@data,7,c
  6842  00661E  D001               	bra	u1805
  6843  006620  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  6844  006622                     u1805:
  6845  006622  0E01               	movlw	1
  6846  006624  1601               	andwf	??_Lcd_Chr_CP,f,c
  6847  006626  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6848  006628  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6849  00662A  5083               	movf	3971,w,c	;volatile
  6850  00662C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6851  00662E  0B7F               	andlw	-129
  6852  006630  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6853  006632  6E83               	movwf	3971,c	;volatile
  6854  006634  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6855  006638  0E06               	movlw	6
  6856  00663A  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6857  00663C                     u1815:
  6858  00663C  90D8               	bcf	status,0,c
  6859  00663E  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6860  006640  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6861  006642  D7FC               	goto	u1815
  6862  006644  0E01               	movlw	1
  6863  006646  1601               	andwf	??_Lcd_Chr_CP,f,c
  6864  006648  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6865  00664A  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6866  00664C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6867  00664E  5083               	movf	3971,w,c	;volatile
  6868  006650  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6869  006652  0BBF               	andlw	-65
  6870  006654  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6871  006656  6E83               	movwf	3971,c	;volatile
  6872                           
  6873                           ;LCD.h: 137: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  6874  006658  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6875  00665C  0E05               	movlw	5
  6876  00665E  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6877  006660                     u1825:
  6878  006660  90D8               	bcf	status,0,c
  6879  006662  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6880  006664  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6881  006666  D7FC               	goto	u1825
  6882  006668  0E01               	movlw	1
  6883  00666A  1601               	andwf	??_Lcd_Chr_CP,f,c
  6884  00666C  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6885  00666E  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6886  006670  5083               	movf	3971,w,c	;volatile
  6887  006672  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6888  006674  0BDF               	andlw	-33
  6889  006676  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6890  006678  6E83               	movwf	3971,c	;volatile
  6891  00667A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6892  00667E  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6893  006680  0E0F               	movlw	15
  6894  006682  1601               	andwf	??_Lcd_Chr_CP,f,c
  6895  006684  0E01               	movlw	1
  6896  006686  1601               	andwf	??_Lcd_Chr_CP,f,c
  6897  006688  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6898  00668A  5083               	movf	3971,w,c	;volatile
  6899  00668C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6900  00668E  0BEF               	andlw	-17
  6901  006690  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6902  006692  6E83               	movwf	3971,c	;volatile
  6903                           
  6904                           ;LCD.h: 138: _delay((unsigned long)((10)*(4000000/4000000.0)));
  6905  006694  0E03               	movlw	3
  6906  006696                     u3757:
  6907  006696  2EE8               	decfsz	wreg,f,c
  6908  006698  D7FE               	goto	u3757
  6909  00669A  F000               	nop	
  6910                           
  6911                           ;LCD.h: 139: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  6912  00669C  8483               	bsf	3971,2,c	;volatile
  6913  00669E  F000               	nop	
  6914  0066A0  D000               	nop2		;2 cycle nop
  6915  0066A2  D000               	nop2		;2 cycle nop
  6916  0066A4  9483               	bcf	3971,2,c	;volatile
  6917                           
  6918                           ;LCD.h: 140: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  6919  0066A6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6920  0066AA  90D8               	bcf	status,0,c
  6921  0066AC  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6922  0066AE  90D8               	bcf	status,0,c
  6923  0066B0  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6924  0066B2  90D8               	bcf	status,0,c
  6925  0066B4  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6926  0066B6  0E01               	movlw	1
  6927  0066B8  1601               	andwf	??_Lcd_Chr_CP,f,c
  6928  0066BA  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6929  0066BC  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6930  0066BE  5083               	movf	3971,w,c	;volatile
  6931  0066C0  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6932  0066C2  0B7F               	andlw	-129
  6933  0066C4  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6934  0066C6  6E83               	movwf	3971,c	;volatile
  6935  0066C8  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6936  0066CC  90D8               	bcf	status,0,c
  6937  0066CE  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6938  0066D0  90D8               	bcf	status,0,c
  6939  0066D2  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6940  0066D4  0E01               	movlw	1
  6941  0066D6  1601               	andwf	??_Lcd_Chr_CP,f,c
  6942  0066D8  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6943  0066DA  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6944  0066DC  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6945  0066DE  5083               	movf	3971,w,c	;volatile
  6946  0066E0  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6947  0066E2  0BBF               	andlw	-65
  6948  0066E4  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6949  0066E6  6E83               	movwf	3971,c	;volatile
  6950                           
  6951                           ;LCD.h: 141: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  6952  0066E8  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6953  0066EC  90D8               	bcf	status,0,c
  6954  0066EE  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6955  0066F0  0E01               	movlw	1
  6956  0066F2  1601               	andwf	??_Lcd_Chr_CP,f,c
  6957  0066F4  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6958  0066F6  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6959  0066F8  5083               	movf	3971,w,c	;volatile
  6960  0066FA  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6961  0066FC  0BDF               	andlw	-33
  6962  0066FE  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6963  006700  6E83               	movwf	3971,c	;volatile
  6964  006702  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6965  006706  0E01               	movlw	1
  6966  006708  1601               	andwf	??_Lcd_Chr_CP,f,c
  6967  00670A  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6968  00670C  5083               	movf	3971,w,c	;volatile
  6969  00670E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6970  006710  0BEF               	andlw	-17
  6971  006712  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6972  006714  6E83               	movwf	3971,c	;volatile
  6973                           
  6974                           ;LCD.h: 142: _delay((unsigned long)((10)*(4000000/4000000.0)));
  6975  006716  0E03               	movlw	3
  6976  006718                     u3767:
  6977  006718  2EE8               	decfsz	wreg,f,c
  6978  00671A  D7FE               	goto	u3767
  6979  00671C  F000               	nop	
  6980                           
  6981                           ;LCD.h: 143: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  6982  00671E  8483               	bsf	3971,2,c	;volatile
  6983  006720  F000               	nop	
  6984  006722  D000               	nop2		;2 cycle nop
  6985  006724  D000               	nop2		;2 cycle nop
  6986  006726  9483               	bcf	3971,2,c	;volatile
  6987                           
  6988                           ;LCD.h: 144: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned long)((5
      +                          500)*(4000000/4000000.0)));
  6989  006728  F000               	nop	
  6990  00672A  D000               	nop2		;2 cycle nop
  6991  00672C  D000               	nop2		;2 cycle nop
  6992  00672E  0E08               	movlw	8
  6993  006730  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  6994  006732  0E23               	movlw	35
  6995  006734                     u3777:
  6996  006734  2EE8               	decfsz	wreg,f,c
  6997  006736  D7FE               	goto	u3777
  6998  006738  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  6999  00673A  D7FC               	goto	u3777
  7000  00673C  F000               	nop	
  7001  00673E  0012               	return	
  7002  006740                     __end_of_Lcd_Chr_CP:
  7003                           	opt stack 0
  7004                           tblptru	equ	0xFF8
  7005                           tblptrh	equ	0xFF7
  7006                           tblptrl	equ	0xFF6
  7007                           tablat	equ	0xFF5
  7008                           prodh	equ	0xFF4
  7009                           prodl	equ	0xFF3
  7010                           postinc0	equ	0xFEE
  7011                           wreg	equ	0xFE8
  7012                           postinc1	equ	0xFE6
  7013                           postdec1	equ	0xFE5
  7014                           fsr1l	equ	0xFE1
  7015                           indf2	equ	0xFDF
  7016                           postinc2	equ	0xFDE
  7017                           postdec2	equ	0xFDD
  7018                           fsr2h	equ	0xFDA
  7019                           fsr2l	equ	0xFD9
  7020                           status	equ	0xFD8
  7021                           
  7022 ;; *************** function _Lcd_Init *****************
  7023 ;; Defined at:
  7024 ;;		line 48 in file "LCD.h"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;		None
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  data            1    4[COMRAM] unsigned char 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;		None               void
  7031 ;; Registers used:
  7032 ;;		wreg, status,2, status,0, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7038 ;;      Params:         0       0       0       0       0       0       0       0       0
  7039 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7040 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7041 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7042 ;;Total ram usage:        2 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; Hardware stack levels required when called:    1
  7045 ;; This function calls:
  7046 ;;		_Lcd_Cmd
  7047 ;; This function is called by:
  7048 ;;		_main
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text16
  7053  0064EC                     __ptext16:
  7054                           	opt stack 0
  7055  0064EC                     _Lcd_Init:
  7056                           	opt stack 29
  7057                           
  7058                           ;LCD.h: 49: unsigned char data;
  7059                           ;LCD.h: 50: TRISDbits.TRISD7 = 0;
  7060                           
  7061                           ;incstack = 0
  7062  0064EC  9E95               	bcf	3989,7,c	;volatile
  7063                           
  7064                           ;LCD.h: 51: TRISDbits.TRISD6 = 0;
  7065  0064EE  9C95               	bcf	3989,6,c	;volatile
  7066                           
  7067                           ;LCD.h: 52: TRISDbits.TRISD5 = 0;
  7068  0064F0  9A95               	bcf	3989,5,c	;volatile
  7069                           
  7070                           ;LCD.h: 53: TRISDbits.TRISD4 = 0;
  7071  0064F2  9895               	bcf	3989,4,c	;volatile
  7072                           
  7073                           ;LCD.h: 54: TRISDbits.TRISD2 = 0;
  7074  0064F4  9495               	bcf	3989,2,c	;volatile
  7075                           
  7076                           ;LCD.h: 55: TRISDbits.TRISD0 = 0;
  7077  0064F6  9095               	bcf	3989,0,c	;volatile
  7078                           
  7079                           ;LCD.h: 56: TRISDbits.TRISD1 = 0;
  7080  0064F8  9295               	bcf	3989,1,c	;volatile
  7081                           
  7082                           ;LCD.h: 57: PORTDbits.RD7 = 0;
  7083  0064FA  9E83               	bcf	3971,7,c	;volatile
  7084                           
  7085                           ;LCD.h: 58: PORTDbits.RD6 = 0;
  7086  0064FC  9C83               	bcf	3971,6,c	;volatile
  7087                           
  7088                           ;LCD.h: 59: PORTDbits.RD5 = 0;
  7089  0064FE  9A83               	bcf	3971,5,c	;volatile
  7090                           
  7091                           ;LCD.h: 60: PORTDbits.RD4 = 0;
  7092  006500  9883               	bcf	3971,4,c	;volatile
  7093                           
  7094                           ;LCD.h: 61: PORTDbits.RD2 = 0;
  7095  006502  9483               	bcf	3971,2,c	;volatile
  7096                           
  7097                           ;LCD.h: 62: PORTDbits.RD0 = 0;
  7098  006504  9083               	bcf	3971,0,c	;volatile
  7099                           
  7100                           ;LCD.h: 63: PORTDbits.RD1 = 0;
  7101  006506  9283               	bcf	3971,1,c	;volatile
  7102                           
  7103                           ;LCD.h: 64: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7104  006508  0E08               	movlw	8
  7105  00650A  6E04               	movwf	??_Lcd_Init& (0+255),c
  7106  00650C  0E23               	movlw	35
  7107  00650E                     u3787:
  7108  00650E  2EE8               	decfsz	wreg,f,c
  7109  006510  D7FE               	goto	u3787
  7110  006512  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7111  006514  D7FC               	goto	u3787
  7112  006516  F000               	nop	
  7113                           
  7114                           ;LCD.h: 65: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7115  006518  0E08               	movlw	8
  7116  00651A  6E04               	movwf	??_Lcd_Init& (0+255),c
  7117  00651C  0E23               	movlw	35
  7118  00651E                     u3797:
  7119  00651E  2EE8               	decfsz	wreg,f,c
  7120  006520  D7FE               	goto	u3797
  7121  006522  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7122  006524  D7FC               	goto	u3797
  7123  006526  F000               	nop	
  7124                           
  7125                           ;LCD.h: 66: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7126  006528  0E08               	movlw	8
  7127  00652A  6E04               	movwf	??_Lcd_Init& (0+255),c
  7128  00652C  0E23               	movlw	35
  7129  00652E                     u3807:
  7130  00652E  2EE8               	decfsz	wreg,f,c
  7131  006530  D7FE               	goto	u3807
  7132  006532  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7133  006534  D7FC               	goto	u3807
  7134  006536  F000               	nop	
  7135                           
  7136                           ;LCD.h: 67: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7137  006538  0E08               	movlw	8
  7138  00653A  6E04               	movwf	??_Lcd_Init& (0+255),c
  7139  00653C  0E23               	movlw	35
  7140  00653E                     u3817:
  7141  00653E  2EE8               	decfsz	wreg,f,c
  7142  006540  D7FE               	goto	u3817
  7143  006542  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7144  006544  D7FC               	goto	u3817
  7145  006546  F000               	nop	
  7146                           
  7147                           ;LCD.h: 68: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7148  006548  0E08               	movlw	8
  7149  00654A  6E04               	movwf	??_Lcd_Init& (0+255),c
  7150  00654C  0E23               	movlw	35
  7151  00654E                     u3827:
  7152  00654E  2EE8               	decfsz	wreg,f,c
  7153  006550  D7FE               	goto	u3827
  7154  006552  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7155  006554  D7FC               	goto	u3827
  7156  006556  F000               	nop	
  7157                           
  7158                           ;LCD.h: 69: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7159  006558  0E08               	movlw	8
  7160  00655A  6E04               	movwf	??_Lcd_Init& (0+255),c
  7161  00655C  0E23               	movlw	35
  7162  00655E                     u3837:
  7163  00655E  2EE8               	decfsz	wreg,f,c
  7164  006560  D7FE               	goto	u3837
  7165  006562  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7166  006564  D7FC               	goto	u3837
  7167  006566  F000               	nop	
  7168                           
  7169                           ;LCD.h: 70: for(data = 1; data < 4; data ++)
  7170  006568  0E01               	movlw	1
  7171  00656A  6E05               	movwf	Lcd_Init@data,c
  7172  00656C  D01E               	goto	L30
  7173  00656E                     l50:
  7174                           
  7175                           ;LCD.h: 71: {
  7176                           ;LCD.h: 72: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD2 = 0;
  7177  00656E  9E83               	bcf	3971,7,c	;volatile
  7178  006570  9C83               	bcf	3971,6,c	;volatile
  7179  006572  8A83               	bsf	3971,5,c	;volatile
  7180  006574  8883               	bsf	3971,4,c	;volatile
  7181  006576  9483               	bcf	3971,2,c	;volatile
  7182                           
  7183                           ;LCD.h: 73: PORTDbits.RD0 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; 
      +                          PORTDbits.RD4 = 1;
  7184  006578  9083               	bcf	3971,0,c	;volatile
  7185  00657A  9E83               	bcf	3971,7,c	;volatile
  7186  00657C  9C83               	bcf	3971,6,c	;volatile
  7187  00657E  8A83               	bsf	3971,5,c	;volatile
  7188  006580  8883               	bsf	3971,4,c	;volatile
  7189                           
  7190                           ;LCD.h: 74: PORTDbits.RD2 = 1; PORTDbits.RD0 = 0;
  7191  006582  8483               	bsf	3971,2,c	;volatile
  7192  006584  9083               	bcf	3971,0,c	;volatile
  7193                           
  7194                           ;LCD.h: 75: _delay((unsigned long)((5)*(4000000/4000000.0)));
  7195  006586  F000               	nop	
  7196  006588  D000               	nop2		;2 cycle nop
  7197  00658A  D000               	nop2		;2 cycle nop
  7198                           
  7199                           ;LCD.h: 76: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD2 = 0;
  7200  00658C  9E83               	bcf	3971,7,c	;volatile
  7201  00658E  9C83               	bcf	3971,6,c	;volatile
  7202  006590  8A83               	bsf	3971,5,c	;volatile
  7203  006592  8883               	bsf	3971,4,c	;volatile
  7204  006594  9483               	bcf	3971,2,c	;volatile
  7205                           
  7206                           ;LCD.h: 77: PORTDbits.RD0 = 0;
  7207  006596  9083               	bcf	3971,0,c	;volatile
  7208                           
  7209                           ;LCD.h: 78: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7210  006598  0E08               	movlw	8
  7211  00659A  6E04               	movwf	??_Lcd_Init& (0+255),c
  7212  00659C  0E23               	movlw	35
  7213  00659E                     u3847:
  7214  00659E  2EE8               	decfsz	wreg,f,c
  7215  0065A0  D7FE               	goto	u3847
  7216  0065A2  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7217  0065A4  D7FC               	goto	u3847
  7218  0065A6  F000               	nop	
  7219  0065A8  2A05               	incf	Lcd_Init@data,f,c
  7220  0065AA                     L30:
  7221  0065AA  0E03               	movlw	3
  7222  0065AC  6405               	cpfsgt	Lcd_Init@data,c
  7223  0065AE  D7DF               	goto	l50
  7224                           
  7225                           ;LCD.h: 79: }
  7226                           ;LCD.h: 80: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  7227  0065B0  9E83               	bcf	3971,7,c	;volatile
  7228  0065B2  9C83               	bcf	3971,6,c	;volatile
  7229  0065B4  8A83               	bsf	3971,5,c	;volatile
  7230  0065B6  9883               	bcf	3971,4,c	;volatile
  7231  0065B8  9483               	bcf	3971,2,c	;volatile
  7232  0065BA  9083               	bcf	3971,0,c	;volatile
  7233                           
  7234                           ;LCD.h: 81: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 1; PORTDbits.RD0 = 0;
  7235  0065BC  9E83               	bcf	3971,7,c	;volatile
  7236  0065BE  9C83               	bcf	3971,6,c	;volatile
  7237  0065C0  8A83               	bsf	3971,5,c	;volatile
  7238  0065C2  9883               	bcf	3971,4,c	;volatile
  7239  0065C4  8483               	bsf	3971,2,c	;volatile
  7240  0065C6  9083               	bcf	3971,0,c	;volatile
  7241                           
  7242                           ;LCD.h: 82: _delay((unsigned long)((5)*(4000000/4000000.0)));
  7243  0065C8  F000               	nop	
  7244  0065CA  D000               	nop2		;2 cycle nop
  7245  0065CC  D000               	nop2		;2 cycle nop
  7246                           
  7247                           ;LCD.h: 83: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  7248  0065CE  9E83               	bcf	3971,7,c	;volatile
  7249  0065D0  9C83               	bcf	3971,6,c	;volatile
  7250  0065D2  8A83               	bsf	3971,5,c	;volatile
  7251  0065D4  9883               	bcf	3971,4,c	;volatile
  7252  0065D6  9483               	bcf	3971,2,c	;volatile
  7253  0065D8  9083               	bcf	3971,0,c	;volatile
  7254                           
  7255                           ;LCD.h: 84: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7256  0065DA  0E08               	movlw	8
  7257  0065DC  6E04               	movwf	??_Lcd_Init& (0+255),c
  7258  0065DE  0E23               	movlw	35
  7259  0065E0                     u3857:
  7260  0065E0  2EE8               	decfsz	wreg,f,c
  7261  0065E2  D7FE               	goto	u3857
  7262  0065E4  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7263  0065E6  D7FC               	goto	u3857
  7264  0065E8  F000               	nop	
  7265                           
  7266                           ;LCD.h: 85: data = 40; Lcd_Cmd(data);
  7267  0065EA  0E28               	movlw	40
  7268  0065EC  6E05               	movwf	Lcd_Init@data,c
  7269  0065EE  5005               	movf	Lcd_Init@data,w,c
  7270  0065F0  ECE3  F031         	call	_Lcd_Cmd
  7271                           
  7272                           ;LCD.h: 86: data = 16; Lcd_Cmd(data);
  7273  0065F4  0E10               	movlw	16
  7274  0065F6  6E05               	movwf	Lcd_Init@data,c
  7275  0065F8  5005               	movf	Lcd_Init@data,w,c
  7276  0065FA  ECE3  F031         	call	_Lcd_Cmd
  7277                           
  7278                           ;LCD.h: 87: data = 1; Lcd_Cmd(data);
  7279  0065FE  0E01               	movlw	1
  7280  006600  6E05               	movwf	Lcd_Init@data,c
  7281  006602  5005               	movf	Lcd_Init@data,w,c
  7282  006604  ECE3  F031         	call	_Lcd_Cmd
  7283                           
  7284                           ;LCD.h: 88: data = 15; Lcd_Cmd(data);
  7285  006608  0E0F               	movlw	15
  7286  00660A  6E05               	movwf	Lcd_Init@data,c
  7287  00660C  5005               	movf	Lcd_Init@data,w,c
  7288  00660E  ECE3  F031         	call	_Lcd_Cmd
  7289  006612  0012               	return	
  7290  006614                     __end_of_Lcd_Init:
  7291                           	opt stack 0
  7292                           tblptru	equ	0xFF8
  7293                           tblptrh	equ	0xFF7
  7294                           tblptrl	equ	0xFF6
  7295                           tablat	equ	0xFF5
  7296                           prodh	equ	0xFF4
  7297                           prodl	equ	0xFF3
  7298                           postinc0	equ	0xFEE
  7299                           wreg	equ	0xFE8
  7300                           postinc1	equ	0xFE6
  7301                           postdec1	equ	0xFE5
  7302                           fsr1l	equ	0xFE1
  7303                           indf2	equ	0xFDF
  7304                           postinc2	equ	0xFDE
  7305                           postdec2	equ	0xFDD
  7306                           fsr2h	equ	0xFDA
  7307                           fsr2l	equ	0xFD9
  7308                           status	equ	0xFD8
  7309                           
  7310 ;; *************** function _Lcd_Cmd *****************
  7311 ;; Defined at:
  7312 ;;		line 148 in file "LCD.h"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  data            1    wreg     unsigned char 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  data            1    2[COMRAM] unsigned char 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;		None               void
  7319 ;; Registers used:
  7320 ;;		wreg, status,2, status,0
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7326 ;;      Params:         0       0       0       0       0       0       0       0       0
  7327 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7328 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7329 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7330 ;;Total ram usage:        3 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; This function calls:
  7333 ;;		Nothing
  7334 ;; This function is called by:
  7335 ;;		_Lcd_Init
  7336 ;;		_Lcd_Out
  7337 ;;		_Lcd_Out2
  7338 ;;		_lcd_goto
  7339 ;;		_main
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343                           	psect	text17
  7344  0063C6                     __ptext17:
  7345                           	opt stack 0
  7346  0063C6                     _Lcd_Cmd:
  7347                           	opt stack 29
  7348                           
  7349                           ;incstack = 0
  7350                           ;Lcd_Cmd@data stored from wreg
  7351  0063C6  6E03               	movwf	Lcd_Cmd@data,c
  7352                           
  7353                           ;LCD.h: 149: PORTDbits.RD2 = 0; PORTDbits.RD0 = 0;
  7354  0063C8  9483               	bcf	3971,2,c	;volatile
  7355  0063CA  9083               	bcf	3971,0,c	;volatile
  7356                           
  7357                           ;LCD.h: 150: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  7358  0063CC  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  7359  0063CE  AE03               	btfss	Lcd_Cmd@data,7,c
  7360  0063D0  D001               	bra	u1775
  7361  0063D2  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  7362  0063D4                     u1775:
  7363  0063D4  0E01               	movlw	1
  7364  0063D6  1601               	andwf	??_Lcd_Cmd,f,c
  7365  0063D8  3201               	rrcf	??_Lcd_Cmd,f,c
  7366  0063DA  3201               	rrcf	??_Lcd_Cmd,f,c
  7367  0063DC  5083               	movf	3971,w,c	;volatile
  7368  0063DE  1801               	xorwf	??_Lcd_Cmd,w,c
  7369  0063E0  0B7F               	andlw	-129
  7370  0063E2  1801               	xorwf	??_Lcd_Cmd,w,c
  7371  0063E4  6E83               	movwf	3971,c	;volatile
  7372  0063E6  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7373  0063EA  0E06               	movlw	6
  7374  0063EC  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7375  0063EE                     u1785:
  7376  0063EE  90D8               	bcf	status,0,c
  7377  0063F0  3201               	rrcf	??_Lcd_Cmd,f,c
  7378  0063F2  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7379  0063F4  D7FC               	goto	u1785
  7380  0063F6  0E01               	movlw	1
  7381  0063F8  1601               	andwf	??_Lcd_Cmd,f,c
  7382  0063FA  3A01               	swapf	??_Lcd_Cmd,f,c
  7383  0063FC  4601               	rlncf	??_Lcd_Cmd,f,c
  7384  0063FE  4601               	rlncf	??_Lcd_Cmd,f,c
  7385  006400  5083               	movf	3971,w,c	;volatile
  7386  006402  1801               	xorwf	??_Lcd_Cmd,w,c
  7387  006404  0BBF               	andlw	-65
  7388  006406  1801               	xorwf	??_Lcd_Cmd,w,c
  7389  006408  6E83               	movwf	3971,c	;volatile
  7390                           
  7391                           ;LCD.h: 151: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  7392  00640A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7393  00640E  0E05               	movlw	5
  7394  006410  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7395  006412                     u1795:
  7396  006412  90D8               	bcf	status,0,c
  7397  006414  3201               	rrcf	??_Lcd_Cmd,f,c
  7398  006416  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7399  006418  D7FC               	goto	u1795
  7400  00641A  0E01               	movlw	1
  7401  00641C  1601               	andwf	??_Lcd_Cmd,f,c
  7402  00641E  3A01               	swapf	??_Lcd_Cmd,f,c
  7403  006420  4601               	rlncf	??_Lcd_Cmd,f,c
  7404  006422  5083               	movf	3971,w,c	;volatile
  7405  006424  1801               	xorwf	??_Lcd_Cmd,w,c
  7406  006426  0BDF               	andlw	-33
  7407  006428  1801               	xorwf	??_Lcd_Cmd,w,c
  7408  00642A  6E83               	movwf	3971,c	;volatile
  7409  00642C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7410  006430  3A01               	swapf	??_Lcd_Cmd,f,c
  7411  006432  0E0F               	movlw	15
  7412  006434  1601               	andwf	??_Lcd_Cmd,f,c
  7413  006436  0E01               	movlw	1
  7414  006438  1601               	andwf	??_Lcd_Cmd,f,c
  7415  00643A  3A01               	swapf	??_Lcd_Cmd,f,c
  7416  00643C  5083               	movf	3971,w,c	;volatile
  7417  00643E  1801               	xorwf	??_Lcd_Cmd,w,c
  7418  006440  0BEF               	andlw	-17
  7419  006442  1801               	xorwf	??_Lcd_Cmd,w,c
  7420  006444  6E83               	movwf	3971,c	;volatile
  7421                           
  7422                           ;LCD.h: 152: _delay((unsigned long)((10)*(4000000/4000000.0)));
  7423  006446  0E03               	movlw	3
  7424  006448                     u3867:
  7425  006448  2EE8               	decfsz	wreg,f,c
  7426  00644A  D7FE               	goto	u3867
  7427  00644C  F000               	nop	
  7428                           
  7429                           ;LCD.h: 153: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  7430  00644E  8483               	bsf	3971,2,c	;volatile
  7431  006450  F000               	nop	
  7432  006452  D000               	nop2		;2 cycle nop
  7433  006454  D000               	nop2		;2 cycle nop
  7434  006456  9483               	bcf	3971,2,c	;volatile
  7435                           
  7436                           ;LCD.h: 154: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  7437  006458  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7438  00645C  90D8               	bcf	status,0,c
  7439  00645E  3201               	rrcf	??_Lcd_Cmd,f,c
  7440  006460  90D8               	bcf	status,0,c
  7441  006462  3201               	rrcf	??_Lcd_Cmd,f,c
  7442  006464  90D8               	bcf	status,0,c
  7443  006466  3201               	rrcf	??_Lcd_Cmd,f,c
  7444  006468  0E01               	movlw	1
  7445  00646A  1601               	andwf	??_Lcd_Cmd,f,c
  7446  00646C  3201               	rrcf	??_Lcd_Cmd,f,c
  7447  00646E  3201               	rrcf	??_Lcd_Cmd,f,c
  7448  006470  5083               	movf	3971,w,c	;volatile
  7449  006472  1801               	xorwf	??_Lcd_Cmd,w,c
  7450  006474  0B7F               	andlw	-129
  7451  006476  1801               	xorwf	??_Lcd_Cmd,w,c
  7452  006478  6E83               	movwf	3971,c	;volatile
  7453  00647A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7454  00647E  90D8               	bcf	status,0,c
  7455  006480  3201               	rrcf	??_Lcd_Cmd,f,c
  7456  006482  90D8               	bcf	status,0,c
  7457  006484  3201               	rrcf	??_Lcd_Cmd,f,c
  7458  006486  0E01               	movlw	1
  7459  006488  1601               	andwf	??_Lcd_Cmd,f,c
  7460  00648A  3A01               	swapf	??_Lcd_Cmd,f,c
  7461  00648C  4601               	rlncf	??_Lcd_Cmd,f,c
  7462  00648E  4601               	rlncf	??_Lcd_Cmd,f,c
  7463  006490  5083               	movf	3971,w,c	;volatile
  7464  006492  1801               	xorwf	??_Lcd_Cmd,w,c
  7465  006494  0BBF               	andlw	-65
  7466  006496  1801               	xorwf	??_Lcd_Cmd,w,c
  7467  006498  6E83               	movwf	3971,c	;volatile
  7468                           
  7469                           ;LCD.h: 155: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  7470  00649A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7471  00649E  90D8               	bcf	status,0,c
  7472  0064A0  3201               	rrcf	??_Lcd_Cmd,f,c
  7473  0064A2  0E01               	movlw	1
  7474  0064A4  1601               	andwf	??_Lcd_Cmd,f,c
  7475  0064A6  3A01               	swapf	??_Lcd_Cmd,f,c
  7476  0064A8  4601               	rlncf	??_Lcd_Cmd,f,c
  7477  0064AA  5083               	movf	3971,w,c	;volatile
  7478  0064AC  1801               	xorwf	??_Lcd_Cmd,w,c
  7479  0064AE  0BDF               	andlw	-33
  7480  0064B0  1801               	xorwf	??_Lcd_Cmd,w,c
  7481  0064B2  6E83               	movwf	3971,c	;volatile
  7482  0064B4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7483  0064B8  0E01               	movlw	1
  7484  0064BA  1601               	andwf	??_Lcd_Cmd,f,c
  7485  0064BC  3A01               	swapf	??_Lcd_Cmd,f,c
  7486  0064BE  5083               	movf	3971,w,c	;volatile
  7487  0064C0  1801               	xorwf	??_Lcd_Cmd,w,c
  7488  0064C2  0BEF               	andlw	-17
  7489  0064C4  1801               	xorwf	??_Lcd_Cmd,w,c
  7490  0064C6  6E83               	movwf	3971,c	;volatile
  7491                           
  7492                           ;LCD.h: 156: _delay((unsigned long)((10)*(4000000/4000000.0)));
  7493  0064C8  0E03               	movlw	3
  7494  0064CA                     u3877:
  7495  0064CA  2EE8               	decfsz	wreg,f,c
  7496  0064CC  D7FE               	goto	u3877
  7497  0064CE  F000               	nop	
  7498                           
  7499                           ;LCD.h: 157: PORTDbits.RD2 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD2 = 0;
  7500  0064D0  8483               	bsf	3971,2,c	;volatile
  7501  0064D2  F000               	nop	
  7502  0064D4  D000               	nop2		;2 cycle nop
  7503  0064D6  D000               	nop2		;2 cycle nop
  7504  0064D8  9483               	bcf	3971,2,c	;volatile
  7505                           
  7506                           ;LCD.h: 158: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  7507  0064DA  0E08               	movlw	8
  7508  0064DC  6E01               	movwf	??_Lcd_Cmd& (0+255),c
  7509  0064DE  0E23               	movlw	35
  7510  0064E0                     u3887:
  7511  0064E0  2EE8               	decfsz	wreg,f,c
  7512  0064E2  D7FE               	goto	u3887
  7513  0064E4  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
  7514  0064E6  D7FC               	goto	u3887
  7515  0064E8  F000               	nop	
  7516  0064EA  0012               	return	
  7517  0064EC                     __end_of_Lcd_Cmd:
  7518                           	opt stack 0
  7519                           tblptru	equ	0xFF8
  7520                           tblptrh	equ	0xFF7
  7521                           tblptrl	equ	0xFF6
  7522                           tablat	equ	0xFF5
  7523                           prodh	equ	0xFF4
  7524                           prodl	equ	0xFF3
  7525                           postinc0	equ	0xFEE
  7526                           wreg	equ	0xFE8
  7527                           postinc1	equ	0xFE6
  7528                           postdec1	equ	0xFE5
  7529                           fsr1l	equ	0xFE1
  7530                           indf2	equ	0xFDF
  7531                           postinc2	equ	0xFDE
  7532                           postdec2	equ	0xFDD
  7533                           fsr2h	equ	0xFDA
  7534                           fsr2l	equ	0xFD9
  7535                           status	equ	0xFD8
  7536                           
  7537 ;; *************** function _Conv_Entero *****************
  7538 ;; Defined at:
  7539 ;;		line 1 in file "conversion.h"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  numero          4   14[COMRAM] long 
  7542 ;;  conv            2   18[COMRAM] PTR unsigned char 
  7543 ;;		 -> main@cadena(20), main@cad(20), 
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;  convTemp       21   25[COMRAM] unsigned char [21]
  7546 ;;  numeroReg       4   51[COMRAM] long 
  7547 ;;  punteroActua    2   49[COMRAM] PTR unsigned char 
  7548 ;;		 -> Conv_Entero@convTemp(21), 
  7549 ;;  num             2   46[COMRAM] int 
  7550 ;;  i               1   48[COMRAM] unsigned char 
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  2   14[COMRAM] int 
  7553 ;; Registers used:
  7554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7560 ;;      Params:         6       0       0       0       0       0       0       0       0
  7561 ;;      Locals:        30       0       0       0       0       0       0       0       0
  7562 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7563 ;;      Totals:        41       0       0       0       0       0       0       0       0
  7564 ;;Total ram usage:       41 bytes
  7565 ;; Hardware stack levels used:    1
  7566 ;; Hardware stack levels required when called:    1
  7567 ;; This function calls:
  7568 ;;		___aldiv
  7569 ;;		___almod
  7570 ;;		___lmul
  7571 ;; This function is called by:
  7572 ;;		_main
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	text18
  7577  0069D4                     __ptext18:
  7578                           	opt stack 0
  7579  0069D4                     _Conv_Entero:
  7580                           	opt stack 29
  7581                           
  7582                           ;conversion.h: 3: char convTemp[21];
  7583                           ;conversion.h: 4: register char *punteroActual;
  7584                           ;conversion.h: 5: register int num=0;
  7585                           
  7586                           ;incstack = 0
  7587  0069D4  0E00               	movlw	0
  7588  0069D6  6E30               	movwf	Conv_Entero@num+1,c
  7589  0069D8  0E00               	movlw	0
  7590  0069DA  6E2F               	movwf	Conv_Entero@num,c
  7591                           
  7592                           ;conversion.h: 6: register char i=0;
  7593  0069DC  0E00               	movlw	0
  7594  0069DE  6E31               	movwf	Conv_Entero@i,c
  7595                           
  7596                           ;conversion.h: 7: register long long numeroReg = numero;
  7597  0069E0  C00F  F034         	movff	Conv_Entero@numero,Conv_Entero@numeroReg
  7598  0069E4  C010  F035         	movff	Conv_Entero@numero+1,Conv_Entero@numeroReg+1
  7599  0069E8  C011  F036         	movff	Conv_Entero@numero+2,Conv_Entero@numeroReg+2
  7600  0069EC  C012  F037         	movff	Conv_Entero@numero+3,Conv_Entero@numeroReg+3
  7601                           
  7602                           ;conversion.h: 9: punteroActual = &convTemp[21 - 1];
  7603  0069F0  0E00               	movlw	high (Conv_Entero@convTemp+20)
  7604  0069F2  6E33               	movwf	Conv_Entero@punteroActual+1,c
  7605  0069F4  0E2E               	movlw	low (Conv_Entero@convTemp+20)
  7606  0069F6  6E32               	movwf	Conv_Entero@punteroActual,c
  7607                           
  7608                           ;conversion.h: 10: *punteroActual = 0;
  7609  0069F8  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  7610  0069FC  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  7611  006A00  0E00               	movlw	0
  7612  006A02  6EDF               	movwf	indf2,c
  7613                           
  7614                           ;conversion.h: 12: if( numeroReg < 0)
  7615  006A04  5037               	movf	Conv_Entero@numeroReg+3,w,c
  7616  006A06  0A80               	xorlw	128
  7617  006A08  0F80               	addlw	128
  7618  006A0A  E108               	bnz	u2065
  7619  006A0C  0E00               	movlw	0
  7620  006A0E  5C36               	subwf	Conv_Entero@numeroReg+2,w,c
  7621  006A10  E105               	bnz	u2065
  7622  006A12  0E00               	movlw	0
  7623  006A14  5C35               	subwf	Conv_Entero@numeroReg+1,w,c
  7624  006A16  E102               	bnz	u2065
  7625  006A18  0E00               	movlw	0
  7626  006A1A  5C34               	subwf	Conv_Entero@numeroReg,w,c
  7627  006A1C                     u2065:
  7628  006A1C  B0D8               	btfsc	status,0,c
  7629  006A1E  D01A               	goto	l2612
  7630                           
  7631                           ;conversion.h: 13: {
  7632                           ;conversion.h: 14: numeroReg*=-1;
  7633  006A20  C034  F001         	movff	Conv_Entero@numeroReg,___lmul@multiplier
  7634  006A24  C035  F002         	movff	Conv_Entero@numeroReg+1,___lmul@multiplier+1
  7635  006A28  C036  F003         	movff	Conv_Entero@numeroReg+2,___lmul@multiplier+2
  7636  006A2C  C037  F004         	movff	Conv_Entero@numeroReg+3,___lmul@multiplier+3
  7637  006A30  0EFF               	movlw	255
  7638  006A32  6E05               	movwf	___lmul@multiplicand,c
  7639  006A34  0EFF               	movlw	255
  7640  006A36  6E06               	movwf	___lmul@multiplicand+1,c
  7641  006A38  0EFF               	movlw	255
  7642  006A3A  6E07               	movwf	___lmul@multiplicand+2,c
  7643  006A3C  0EFF               	movlw	255
  7644  006A3E  6E08               	movwf	___lmul@multiplicand+3,c
  7645  006A40  EC18  F02D         	call	___lmul	;wreg free
  7646  006A44  C001  F034         	movff	?___lmul,Conv_Entero@numeroReg
  7647  006A48  C002  F035         	movff	?___lmul+1,Conv_Entero@numeroReg+1
  7648  006A4C  C003  F036         	movff	?___lmul+2,Conv_Entero@numeroReg+2
  7649  006A50  C004  F037         	movff	?___lmul+3,Conv_Entero@numeroReg+3
  7650  006A54                     l2612:
  7651                           
  7652                           ;conversion.h: 18: punteroActual--;
  7653  006A54  0632               	decf	Conv_Entero@punteroActual,f,c
  7654  006A56  A0D8               	btfss	status,0,c
  7655  006A58  0633               	decf	Conv_Entero@punteroActual+1,f,c
  7656                           
  7657                           ;conversion.h: 19: num=numeroReg % 10;
  7658  006A5A  C034  F001         	movff	Conv_Entero@numeroReg,___almod@dividend
  7659  006A5E  C035  F002         	movff	Conv_Entero@numeroReg+1,___almod@dividend+1
  7660  006A62  C036  F003         	movff	Conv_Entero@numeroReg+2,___almod@dividend+2
  7661  006A66  C037  F004         	movff	Conv_Entero@numeroReg+3,___almod@dividend+3
  7662  006A6A  0E0A               	movlw	10
  7663  006A6C  6E05               	movwf	___almod@divisor,c
  7664  006A6E  0E00               	movlw	0
  7665  006A70  6E06               	movwf	___almod@divisor+1,c
  7666  006A72  0E00               	movlw	0
  7667  006A74  6E07               	movwf	___almod@divisor+2,c
  7668  006A76  0E00               	movlw	0
  7669  006A78  6E08               	movwf	___almod@divisor+3,c
  7670  006A7A  EC03  F02F         	call	___almod	;wreg free
  7671  006A7E  C001  F015         	movff	?___almod,??_Conv_Entero
  7672  006A82  C002  F016         	movff	?___almod+1,??_Conv_Entero+1
  7673  006A86  C003  F017         	movff	?___almod+2,??_Conv_Entero+2
  7674  006A8A  C004  F018         	movff	?___almod+3,??_Conv_Entero+3
  7675  006A8E  C015  F02F         	movff	??_Conv_Entero,Conv_Entero@num
  7676  006A92  C016  F030         	movff	??_Conv_Entero+1,Conv_Entero@num+1
  7677                           
  7678                           ;conversion.h: 21: *punteroActual = num + '0';
  7679  006A96  502F               	movf	Conv_Entero@num,w,c
  7680  006A98  0F30               	addlw	48
  7681  006A9A  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  7682  006A9E  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  7683  006AA2  6EDF               	movwf	indf2,c
  7684                           
  7685                           ;conversion.h: 22: } while(numeroReg /= 10);
  7686  006AA4  C034  F001         	movff	Conv_Entero@numeroReg,___aldiv@dividend
  7687  006AA8  C035  F002         	movff	Conv_Entero@numeroReg+1,___aldiv@dividend+1
  7688  006AAC  C036  F003         	movff	Conv_Entero@numeroReg+2,___aldiv@dividend+2
  7689  006AB0  C037  F004         	movff	Conv_Entero@numeroReg+3,___aldiv@dividend+3
  7690  006AB4  0E0A               	movlw	10
  7691  006AB6  6E05               	movwf	___aldiv@divisor,c
  7692  006AB8  0E00               	movlw	0
  7693  006ABA  6E06               	movwf	___aldiv@divisor+1,c
  7694  006ABC  0E00               	movlw	0
  7695  006ABE  6E07               	movwf	___aldiv@divisor+2,c
  7696  006AC0  0E00               	movlw	0
  7697  006AC2  6E08               	movwf	___aldiv@divisor+3,c
  7698  006AC4  EC65  F031         	call	___aldiv	;wreg free
  7699  006AC8  C001  F034         	movff	?___aldiv,Conv_Entero@numeroReg
  7700  006ACC  C002  F035         	movff	?___aldiv+1,Conv_Entero@numeroReg+1
  7701  006AD0  C003  F036         	movff	?___aldiv+2,Conv_Entero@numeroReg+2
  7702  006AD4  C004  F037         	movff	?___aldiv+3,Conv_Entero@numeroReg+3
  7703  006AD8  5037               	movf	(Conv_Entero@numeroReg+3)& (0+255),w,c
  7704  006ADA  1034               	iorwf	Conv_Entero@numeroReg& (0+255),w,c
  7705  006ADC  1035               	iorwf	(Conv_Entero@numeroReg+1)& (0+255),w,c
  7706  006ADE  1036               	iorwf	(Conv_Entero@numeroReg+2)& (0+255),w,c
  7707  006AE0  A4D8               	btfss	status,2,c
  7708  006AE2  D7B8               	goto	l2612
  7709                           
  7710                           ;conversion.h: 24: if ( numero < 0)
  7711  006AE4  5012               	movf	Conv_Entero@numero+3,w,c
  7712  006AE6  0A80               	xorlw	128
  7713  006AE8  0F80               	addlw	128
  7714  006AEA  E108               	bnz	u2085
  7715  006AEC  0E00               	movlw	0
  7716  006AEE  5C11               	subwf	Conv_Entero@numero+2,w,c
  7717  006AF0  E105               	bnz	u2085
  7718  006AF2  0E00               	movlw	0
  7719  006AF4  5C10               	subwf	Conv_Entero@numero+1,w,c
  7720  006AF6  E102               	bnz	u2085
  7721  006AF8  0E00               	movlw	0
  7722  006AFA  5C0F               	subwf	Conv_Entero@numero,w,c
  7723  006AFC                     u2085:
  7724  006AFC  B0D8               	btfsc	status,0,c
  7725  006AFE  D009               	goto	l2626
  7726                           
  7727                           ;conversion.h: 25: {
  7728                           ;conversion.h: 26: punteroActual--;
  7729  006B00  0632               	decf	Conv_Entero@punteroActual,f,c
  7730  006B02  A0D8               	btfss	status,0,c
  7731  006B04  0633               	decf	Conv_Entero@punteroActual+1,f,c
  7732                           
  7733                           ;conversion.h: 27: *punteroActual = '-';
  7734  006B06  C032  FFD9         	movff	Conv_Entero@punteroActual,fsr2l
  7735  006B0A  C033  FFDA         	movff	Conv_Entero@punteroActual+1,fsr2h
  7736  006B0E  0E2D               	movlw	45
  7737  006B10  6EDF               	movwf	indf2,c
  7738  006B12                     l2626:
  7739                           
  7740                           ;conversion.h: 28: }
  7741                           ;conversion.h: 30: numeroReg=convTemp+21-punteroActual;
  7742  006B12  C032  F015         	movff	Conv_Entero@punteroActual,??_Conv_Entero
  7743  006B16  C033  F016         	movff	Conv_Entero@punteroActual+1,??_Conv_Entero+1
  7744  006B1A  1E15               	comf	??_Conv_Entero,f,c
  7745  006B1C  1E16               	comf	??_Conv_Entero+1,f,c
  7746  006B1E  4A15               	infsnz	??_Conv_Entero,f,c
  7747  006B20  2A16               	incf	??_Conv_Entero+1,f,c
  7748  006B22  0E15               	movlw	21
  7749  006B24  2615               	addwf	??_Conv_Entero,f,c
  7750  006B26  0E00               	movlw	0
  7751  006B28  2216               	addwfc	??_Conv_Entero+1,f,c
  7752  006B2A  0E1A               	movlw	low Conv_Entero@convTemp
  7753  006B2C  6E17               	movwf	(??_Conv_Entero+2)& (0+255),c
  7754  006B2E  0E00               	movlw	high Conv_Entero@convTemp
  7755  006B30  6E18               	movwf	(??_Conv_Entero+3)& (0+255),c
  7756  006B32  5015               	movf	??_Conv_Entero,w,c
  7757  006B34  2617               	addwf	??_Conv_Entero+2,f,c
  7758  006B36  5016               	movf	??_Conv_Entero+1,w,c
  7759  006B38  2218               	addwfc	??_Conv_Entero+3,f,c
  7760  006B3A  C017  F034         	movff	??_Conv_Entero+2,Conv_Entero@numeroReg
  7761  006B3E  C018  F035         	movff	??_Conv_Entero+3,Conv_Entero@numeroReg+1
  7762  006B42  0E00               	movlw	0
  7763  006B44  BE35               	btfsc	Conv_Entero@numeroReg+1,7,c
  7764  006B46  0EFF               	movlw	-1
  7765  006B48  6E36               	movwf	Conv_Entero@numeroReg+2,c
  7766  006B4A  6E37               	movwf	Conv_Entero@numeroReg+3,c
  7767                           
  7768                           ;conversion.h: 31: for (i = 0; i< numeroReg; i++)
  7769  006B4C  0E00               	movlw	0
  7770  006B4E  6E31               	movwf	Conv_Entero@i,c
  7771  006B50  D013               	goto	l2634
  7772  006B52                     l2630:
  7773                           
  7774                           ;conversion.h: 32: {
  7775                           ;conversion.h: 38: ((unsigned char *)conv)[i] = ((const unsigned char *)punteroActual)[i
      +                          ];
  7776  006B52  5031               	movf	Conv_Entero@i,w,c
  7777  006B54  0D01               	mullw	1
  7778  006B56  50F3               	movf	prodl,w,c
  7779  006B58  2432               	addwf	Conv_Entero@punteroActual,w,c
  7780  006B5A  6ED9               	movwf	fsr2l,c
  7781  006B5C  50F4               	movf	prodh,w,c
  7782  006B5E  2033               	addwfc	Conv_Entero@punteroActual+1,w,c
  7783  006B60  6EDA               	movwf	fsr2h,c
  7784  006B62  5031               	movf	Conv_Entero@i,w,c
  7785  006B64  0D01               	mullw	1
  7786  006B66  50F3               	movf	prodl,w,c
  7787  006B68  2413               	addwf	Conv_Entero@conv,w,c
  7788  006B6A  6EE1               	movwf	fsr1l,c
  7789  006B6C  50F4               	movf	prodh,w,c
  7790  006B6E  2014               	addwfc	Conv_Entero@conv+1,w,c
  7791  006B70  6EE2               	movwf	fsr1h,c
  7792  006B72  CFDF FFE7          	movff	indf2,indf1
  7793  006B76  2A31               	incf	Conv_Entero@i,f,c
  7794  006B78                     l2634:
  7795  006B78  C031  F015         	movff	Conv_Entero@i,??_Conv_Entero
  7796  006B7C  6A16               	clrf	(??_Conv_Entero+1)& (0+255),c
  7797  006B7E  6A17               	clrf	(??_Conv_Entero+2)& (0+255),c
  7798  006B80  6A18               	clrf	(??_Conv_Entero+3)& (0+255),c
  7799  006B82  5018               	movf	??_Conv_Entero+3,w,c
  7800  006B84  0A80               	xorlw	128
  7801  006B86  6E19               	movwf	(??_Conv_Entero+4)& (0+255),c
  7802  006B88  5034               	movf	Conv_Entero@numeroReg,w,c
  7803  006B8A  5C15               	subwf	??_Conv_Entero,w,c
  7804  006B8C  5035               	movf	Conv_Entero@numeroReg+1,w,c
  7805  006B8E  5816               	subwfb	??_Conv_Entero+1,w,c
  7806  006B90  5036               	movf	Conv_Entero@numeroReg+2,w,c
  7807  006B92  5817               	subwfb	??_Conv_Entero+2,w,c
  7808  006B94  5037               	movf	Conv_Entero@numeroReg+3,w,c
  7809  006B96  0A80               	xorlw	128
  7810  006B98  5819               	subwfb	(??_Conv_Entero+4)& (0+255),w,c
  7811  006B9A  A0D8               	btfss	status,0,c
  7812  006B9C  D7DA               	goto	l2630
  7813                           
  7814                           ;conversion.h: 39: }
  7815                           ;conversion.h: 41: return numeroReg - 1;
  7816  006B9E  0EFF               	movlw	255
  7817  006BA0  2434               	addwf	Conv_Entero@numeroReg,w,c
  7818  006BA2  6E0F               	movwf	?_Conv_Entero,c
  7819  006BA4  0EFF               	movlw	255
  7820  006BA6  2035               	addwfc	Conv_Entero@numeroReg+1,w,c
  7821  006BA8  6E10               	movwf	?_Conv_Entero+1,c
  7822  006BAA  0012               	return	
  7823  006BAC                     __end_of_Conv_Entero:
  7824                           	opt stack 0
  7825                           tblptru	equ	0xFF8
  7826                           tblptrh	equ	0xFF7
  7827                           tblptrl	equ	0xFF6
  7828                           tablat	equ	0xFF5
  7829                           prodh	equ	0xFF4
  7830                           prodl	equ	0xFF3
  7831                           postinc0	equ	0xFEE
  7832                           wreg	equ	0xFE8
  7833                           indf1	equ	0xFE7
  7834                           postinc1	equ	0xFE6
  7835                           postdec1	equ	0xFE5
  7836                           fsr1h	equ	0xFE2
  7837                           fsr1l	equ	0xFE1
  7838                           indf2	equ	0xFDF
  7839                           postinc2	equ	0xFDE
  7840                           postdec2	equ	0xFDD
  7841                           fsr2h	equ	0xFDA
  7842                           fsr2l	equ	0xFD9
  7843                           status	equ	0xFD8
  7844                           
  7845 ;; *************** function ___lmul *****************
  7846 ;; Defined at:
  7847 ;;		line 15 in file "/opt/microchip/xc8/v1.32/sources/common/Umul32.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;  multiplier      4    0[COMRAM] unsigned long 
  7850 ;;  multiplicand    4    4[COMRAM] unsigned long 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;  product         4    8[COMRAM] unsigned long 
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  4    0[COMRAM] unsigned long 
  7855 ;; Registers used:
  7856 ;;		wreg, status,2, status,0
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7862 ;;      Params:         8       0       0       0       0       0       0       0       0
  7863 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7865 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7866 ;;Total ram usage:       12 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; This function calls:
  7869 ;;		Nothing
  7870 ;; This function is called by:
  7871 ;;		_Conv_Entero
  7872 ;;		_PWM_generar
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           	psect	text19
  7877  005A30                     __ptext19:
  7878                           	opt stack 0
  7879  005A30                     ___lmul:
  7880                           	opt stack 29
  7881                           
  7882                           ;incstack = 0
  7883  005A30  0E00               	movlw	0
  7884  005A32  6E09               	movwf	___lmul@product,c
  7885  005A34  0E00               	movlw	0
  7886  005A36  6E0A               	movwf	___lmul@product+1,c
  7887  005A38  0E00               	movlw	0
  7888  005A3A  6E0B               	movwf	___lmul@product+2,c
  7889  005A3C  0E00               	movlw	0
  7890  005A3E  6E0C               	movwf	___lmul@product+3,c
  7891  005A40                     l2444:
  7892  005A40  A001               	btfss	___lmul@multiplier,0,c
  7893  005A42  D008               	goto	l2448
  7894  005A44  5005               	movf	___lmul@multiplicand,w,c
  7895  005A46  2609               	addwf	___lmul@product,f,c
  7896  005A48  5006               	movf	___lmul@multiplicand+1,w,c
  7897  005A4A  220A               	addwfc	___lmul@product+1,f,c
  7898  005A4C  5007               	movf	___lmul@multiplicand+2,w,c
  7899  005A4E  220B               	addwfc	___lmul@product+2,f,c
  7900  005A50  5008               	movf	___lmul@multiplicand+3,w,c
  7901  005A52  220C               	addwfc	___lmul@product+3,f,c
  7902  005A54                     l2448:
  7903  005A54  90D8               	bcf	status,0,c
  7904  005A56  3605               	rlcf	___lmul@multiplicand,f,c
  7905  005A58  3606               	rlcf	___lmul@multiplicand+1,f,c
  7906  005A5A  3607               	rlcf	___lmul@multiplicand+2,f,c
  7907  005A5C  3608               	rlcf	___lmul@multiplicand+3,f,c
  7908  005A5E  90D8               	bcf	status,0,c
  7909  005A60  3204               	rrcf	___lmul@multiplier+3,f,c
  7910  005A62  3203               	rrcf	___lmul@multiplier+2,f,c
  7911  005A64  3202               	rrcf	___lmul@multiplier+1,f,c
  7912  005A66  3201               	rrcf	___lmul@multiplier,f,c
  7913  005A68  5004               	movf	___lmul@multiplier+3,w,c
  7914  005A6A  1001               	iorwf	___lmul@multiplier,w,c
  7915  005A6C  1002               	iorwf	___lmul@multiplier+1,w,c
  7916  005A6E  1003               	iorwf	___lmul@multiplier+2,w,c
  7917  005A70  A4D8               	btfss	status,2,c
  7918  005A72  D7E6               	goto	l2444
  7919  005A74  C009  F001         	movff	___lmul@product,?___lmul
  7920  005A78  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  7921  005A7C  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  7922  005A80  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  7923  005A84  0012               	return	
  7924  005A86                     __end_of___lmul:
  7925                           	opt stack 0
  7926                           tblptru	equ	0xFF8
  7927                           tblptrh	equ	0xFF7
  7928                           tblptrl	equ	0xFF6
  7929                           tablat	equ	0xFF5
  7930                           prodh	equ	0xFF4
  7931                           prodl	equ	0xFF3
  7932                           postinc0	equ	0xFEE
  7933                           wreg	equ	0xFE8
  7934                           indf1	equ	0xFE7
  7935                           postinc1	equ	0xFE6
  7936                           postdec1	equ	0xFE5
  7937                           fsr1h	equ	0xFE2
  7938                           fsr1l	equ	0xFE1
  7939                           indf2	equ	0xFDF
  7940                           postinc2	equ	0xFDE
  7941                           postdec2	equ	0xFDD
  7942                           fsr2h	equ	0xFDA
  7943                           fsr2l	equ	0xFD9
  7944                           status	equ	0xFD8
  7945                           
  7946 ;; *************** function ___almod *****************
  7947 ;; Defined at:
  7948 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/almod.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  dividend        4    0[COMRAM] long 
  7951 ;;  divisor         4    4[COMRAM] long 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  sign            1    9[COMRAM] unsigned char 
  7954 ;;  counter         1    8[COMRAM] unsigned char 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  4    0[COMRAM] long 
  7957 ;; Registers used:
  7958 ;;		wreg, status,2, status,0
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7964 ;;      Params:         8       0       0       0       0       0       0       0       0
  7965 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7967 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7968 ;;Total ram usage:       10 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; This function calls:
  7971 ;;		Nothing
  7972 ;; This function is called by:
  7973 ;;		_Conv_Entero
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           	psect	text20
  7978  005E06                     __ptext20:
  7979                           	opt stack 0
  7980  005E06                     ___almod:
  7981                           	opt stack 29
  7982                           
  7983                           ;incstack = 0
  7984  005E06  0E00               	movlw	0
  7985  005E08  6E0A               	movwf	___almod@sign,c
  7986  005E0A  5004               	movf	___almod@dividend+3,w,c
  7987  005E0C  0A80               	xorlw	128
  7988  005E0E  0F80               	addlw	128
  7989  005E10  E108               	bnz	u1915
  7990  005E12  0E00               	movlw	0
  7991  005E14  5C03               	subwf	___almod@dividend+2,w,c
  7992  005E16  E105               	bnz	u1915
  7993  005E18  0E00               	movlw	0
  7994  005E1A  5C02               	subwf	___almod@dividend+1,w,c
  7995  005E1C  E102               	bnz	u1915
  7996  005E1E  0E00               	movlw	0
  7997  005E20  5C01               	subwf	___almod@dividend,w,c
  7998  005E22                     u1915:
  7999  005E22  B0D8               	btfsc	status,0,c
  8000  005E24  D00A               	goto	l2504
  8001  005E26  1E04               	comf	___almod@dividend+3,f,c
  8002  005E28  1E03               	comf	___almod@dividend+2,f,c
  8003  005E2A  1E02               	comf	___almod@dividend+1,f,c
  8004  005E2C  6C01               	negf	___almod@dividend,c
  8005  005E2E  0E00               	movlw	0
  8006  005E30  2202               	addwfc	___almod@dividend+1,f,c
  8007  005E32  2203               	addwfc	___almod@dividend+2,f,c
  8008  005E34  2204               	addwfc	___almod@dividend+3,f,c
  8009  005E36  0E01               	movlw	1
  8010  005E38  6E0A               	movwf	___almod@sign,c
  8011  005E3A                     l2504:
  8012  005E3A  5008               	movf	___almod@divisor+3,w,c
  8013  005E3C  0A80               	xorlw	128
  8014  005E3E  0F80               	addlw	128
  8015  005E40  E108               	bnz	u1925
  8016  005E42  0E00               	movlw	0
  8017  005E44  5C07               	subwf	___almod@divisor+2,w,c
  8018  005E46  E105               	bnz	u1925
  8019  005E48  0E00               	movlw	0
  8020  005E4A  5C06               	subwf	___almod@divisor+1,w,c
  8021  005E4C  E102               	bnz	u1925
  8022  005E4E  0E00               	movlw	0
  8023  005E50  5C05               	subwf	___almod@divisor,w,c
  8024  005E52                     u1925:
  8025  005E52  B0D8               	btfsc	status,0,c
  8026  005E54  D008               	goto	l2508
  8027  005E56  1E08               	comf	___almod@divisor+3,f,c
  8028  005E58  1E07               	comf	___almod@divisor+2,f,c
  8029  005E5A  1E06               	comf	___almod@divisor+1,f,c
  8030  005E5C  6C05               	negf	___almod@divisor,c
  8031  005E5E  0E00               	movlw	0
  8032  005E60  2206               	addwfc	___almod@divisor+1,f,c
  8033  005E62  2207               	addwfc	___almod@divisor+2,f,c
  8034  005E64  2208               	addwfc	___almod@divisor+3,f,c
  8035  005E66                     l2508:
  8036  005E66  5008               	movf	___almod@divisor+3,w,c
  8037  005E68  1005               	iorwf	___almod@divisor,w,c
  8038  005E6A  1006               	iorwf	___almod@divisor+1,w,c
  8039  005E6C  1007               	iorwf	___almod@divisor+2,w,c
  8040  005E6E  B4D8               	btfsc	status,2,c
  8041  005E70  D024               	goto	l2524
  8042  005E72  0E01               	movlw	1
  8043  005E74  6E09               	movwf	___almod@counter,c
  8044  005E76  D006               	goto	l2514
  8045  005E78                     l2512:
  8046  005E78  90D8               	bcf	status,0,c
  8047  005E7A  3605               	rlcf	___almod@divisor,f,c
  8048  005E7C  3606               	rlcf	___almod@divisor+1,f,c
  8049  005E7E  3607               	rlcf	___almod@divisor+2,f,c
  8050  005E80  3608               	rlcf	___almod@divisor+3,f,c
  8051  005E82  2A09               	incf	___almod@counter,f,c
  8052  005E84                     l2514:
  8053  005E84  AE08               	btfss	___almod@divisor+3,7,c
  8054  005E86  D7F8               	goto	l2512
  8055  005E88                     l2516:
  8056  005E88  5005               	movf	___almod@divisor,w,c
  8057  005E8A  5C01               	subwf	___almod@dividend,w,c
  8058  005E8C  5006               	movf	___almod@divisor+1,w,c
  8059  005E8E  5802               	subwfb	___almod@dividend+1,w,c
  8060  005E90  5007               	movf	___almod@divisor+2,w,c
  8061  005E92  5803               	subwfb	___almod@dividend+2,w,c
  8062  005E94  5008               	movf	___almod@divisor+3,w,c
  8063  005E96  5804               	subwfb	___almod@dividend+3,w,c
  8064  005E98  A0D8               	btfss	status,0,c
  8065  005E9A  D008               	goto	l2520
  8066  005E9C  5005               	movf	___almod@divisor,w,c
  8067  005E9E  5E01               	subwf	___almod@dividend,f,c
  8068  005EA0  5006               	movf	___almod@divisor+1,w,c
  8069  005EA2  5A02               	subwfb	___almod@dividend+1,f,c
  8070  005EA4  5007               	movf	___almod@divisor+2,w,c
  8071  005EA6  5A03               	subwfb	___almod@dividend+2,f,c
  8072  005EA8  5008               	movf	___almod@divisor+3,w,c
  8073  005EAA  5A04               	subwfb	___almod@dividend+3,f,c
  8074  005EAC                     l2520:
  8075  005EAC  90D8               	bcf	status,0,c
  8076  005EAE  3208               	rrcf	___almod@divisor+3,f,c
  8077  005EB0  3207               	rrcf	___almod@divisor+2,f,c
  8078  005EB2  3206               	rrcf	___almod@divisor+1,f,c
  8079  005EB4  3205               	rrcf	___almod@divisor,f,c
  8080  005EB6  2E09               	decfsz	___almod@counter,f,c
  8081  005EB8  D7E7               	goto	l2516
  8082  005EBA                     l2524:
  8083  005EBA  500A               	movf	___almod@sign,w,c
  8084  005EBC  B4D8               	btfsc	status,2,c
  8085  005EBE  D008               	goto	l2528
  8086  005EC0  1E04               	comf	___almod@dividend+3,f,c
  8087  005EC2  1E03               	comf	___almod@dividend+2,f,c
  8088  005EC4  1E02               	comf	___almod@dividend+1,f,c
  8089  005EC6  6C01               	negf	___almod@dividend,c
  8090  005EC8  0E00               	movlw	0
  8091  005ECA  2202               	addwfc	___almod@dividend+1,f,c
  8092  005ECC  2203               	addwfc	___almod@dividend+2,f,c
  8093  005ECE  2204               	addwfc	___almod@dividend+3,f,c
  8094  005ED0                     l2528:
  8095  005ED0  C001  F001         	movff	___almod@dividend,?___almod
  8096  005ED4  C002  F002         	movff	___almod@dividend+1,?___almod+1
  8097  005ED8  C003  F003         	movff	___almod@dividend+2,?___almod+2
  8098  005EDC  C004  F004         	movff	___almod@dividend+3,?___almod+3
  8099  005EE0  0012               	return	
  8100  005EE2                     __end_of___almod:
  8101                           	opt stack 0
  8102                           tblptru	equ	0xFF8
  8103                           tblptrh	equ	0xFF7
  8104                           tblptrl	equ	0xFF6
  8105                           tablat	equ	0xFF5
  8106                           prodh	equ	0xFF4
  8107                           prodl	equ	0xFF3
  8108                           postinc0	equ	0xFEE
  8109                           wreg	equ	0xFE8
  8110                           indf1	equ	0xFE7
  8111                           postinc1	equ	0xFE6
  8112                           postdec1	equ	0xFE5
  8113                           fsr1h	equ	0xFE2
  8114                           fsr1l	equ	0xFE1
  8115                           indf2	equ	0xFDF
  8116                           postinc2	equ	0xFDE
  8117                           postdec2	equ	0xFDD
  8118                           fsr2h	equ	0xFDA
  8119                           fsr2l	equ	0xFD9
  8120                           status	equ	0xFD8
  8121                           
  8122 ;; *************** function ___aldiv *****************
  8123 ;; Defined at:
  8124 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/aldiv.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;  dividend        4    0[COMRAM] long 
  8127 ;;  divisor         4    4[COMRAM] long 
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;  quotient        4   10[COMRAM] long 
  8130 ;;  sign            1    9[COMRAM] unsigned char 
  8131 ;;  counter         1    8[COMRAM] unsigned char 
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  4    0[COMRAM] long 
  8134 ;; Registers used:
  8135 ;;		wreg, status,2, status,0
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8141 ;;      Params:         8       0       0       0       0       0       0       0       0
  8142 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8143 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8144 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8145 ;;Total ram usage:       14 bytes
  8146 ;; Hardware stack levels used:    1
  8147 ;; This function calls:
  8148 ;;		Nothing
  8149 ;; This function is called by:
  8150 ;;		_Conv_Entero
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154                           	psect	text21
  8155  0062CA                     __ptext21:
  8156                           	opt stack 0
  8157  0062CA                     ___aldiv:
  8158                           	opt stack 29
  8159                           
  8160                           ;incstack = 0
  8161  0062CA  0E00               	movlw	0
  8162  0062CC  6E0A               	movwf	___aldiv@sign,c
  8163  0062CE  5008               	movf	___aldiv@divisor+3,w,c
  8164  0062D0  0A80               	xorlw	128
  8165  0062D2  0F80               	addlw	128
  8166  0062D4  E108               	bnz	u1855
  8167  0062D6  0E00               	movlw	0
  8168  0062D8  5C07               	subwf	___aldiv@divisor+2,w,c
  8169  0062DA  E105               	bnz	u1855
  8170  0062DC  0E00               	movlw	0
  8171  0062DE  5C06               	subwf	___aldiv@divisor+1,w,c
  8172  0062E0  E102               	bnz	u1855
  8173  0062E2  0E00               	movlw	0
  8174  0062E4  5C05               	subwf	___aldiv@divisor,w,c
  8175  0062E6                     u1855:
  8176  0062E6  B0D8               	btfsc	status,0,c
  8177  0062E8  D00A               	goto	l2460
  8178  0062EA  1E08               	comf	___aldiv@divisor+3,f,c
  8179  0062EC  1E07               	comf	___aldiv@divisor+2,f,c
  8180  0062EE  1E06               	comf	___aldiv@divisor+1,f,c
  8181  0062F0  6C05               	negf	___aldiv@divisor,c
  8182  0062F2  0E00               	movlw	0
  8183  0062F4  2206               	addwfc	___aldiv@divisor+1,f,c
  8184  0062F6  2207               	addwfc	___aldiv@divisor+2,f,c
  8185  0062F8  2208               	addwfc	___aldiv@divisor+3,f,c
  8186  0062FA  0E01               	movlw	1
  8187  0062FC  6E0A               	movwf	___aldiv@sign,c
  8188  0062FE                     l2460:
  8189  0062FE  5004               	movf	___aldiv@dividend+3,w,c
  8190  006300  0A80               	xorlw	128
  8191  006302  0F80               	addlw	128
  8192  006304  E108               	bnz	u1865
  8193  006306  0E00               	movlw	0
  8194  006308  5C03               	subwf	___aldiv@dividend+2,w,c
  8195  00630A  E105               	bnz	u1865
  8196  00630C  0E00               	movlw	0
  8197  00630E  5C02               	subwf	___aldiv@dividend+1,w,c
  8198  006310  E102               	bnz	u1865
  8199  006312  0E00               	movlw	0
  8200  006314  5C01               	subwf	___aldiv@dividend,w,c
  8201  006316                     u1865:
  8202  006316  B0D8               	btfsc	status,0,c
  8203  006318  D00A               	goto	l2466
  8204  00631A  1E04               	comf	___aldiv@dividend+3,f,c
  8205  00631C  1E03               	comf	___aldiv@dividend+2,f,c
  8206  00631E  1E02               	comf	___aldiv@dividend+1,f,c
  8207  006320  6C01               	negf	___aldiv@dividend,c
  8208  006322  0E00               	movlw	0
  8209  006324  2202               	addwfc	___aldiv@dividend+1,f,c
  8210  006326  2203               	addwfc	___aldiv@dividend+2,f,c
  8211  006328  2204               	addwfc	___aldiv@dividend+3,f,c
  8212  00632A  0E01               	movlw	1
  8213  00632C  1A0A               	xorwf	___aldiv@sign,f,c
  8214  00632E                     l2466:
  8215  00632E  0E00               	movlw	0
  8216  006330  6E0B               	movwf	___aldiv@quotient,c
  8217  006332  0E00               	movlw	0
  8218  006334  6E0C               	movwf	___aldiv@quotient+1,c
  8219  006336  0E00               	movlw	0
  8220  006338  6E0D               	movwf	___aldiv@quotient+2,c
  8221  00633A  0E00               	movlw	0
  8222  00633C  6E0E               	movwf	___aldiv@quotient+3,c
  8223  00633E  5008               	movf	___aldiv@divisor+3,w,c
  8224  006340  1005               	iorwf	___aldiv@divisor,w,c
  8225  006342  1006               	iorwf	___aldiv@divisor+1,w,c
  8226  006344  1007               	iorwf	___aldiv@divisor+2,w,c
  8227  006346  B4D8               	btfsc	status,2,c
  8228  006348  D02A               	goto	l2488
  8229  00634A  0E01               	movlw	1
  8230  00634C  6E09               	movwf	___aldiv@counter,c
  8231  00634E  D006               	goto	l2474
  8232  006350                     l2472:
  8233  006350  90D8               	bcf	status,0,c
  8234  006352  3605               	rlcf	___aldiv@divisor,f,c
  8235  006354  3606               	rlcf	___aldiv@divisor+1,f,c
  8236  006356  3607               	rlcf	___aldiv@divisor+2,f,c
  8237  006358  3608               	rlcf	___aldiv@divisor+3,f,c
  8238  00635A  2A09               	incf	___aldiv@counter,f,c
  8239  00635C                     l2474:
  8240  00635C  AE08               	btfss	___aldiv@divisor+3,7,c
  8241  00635E  D7F8               	goto	l2472
  8242  006360                     l2476:
  8243  006360  90D8               	bcf	status,0,c
  8244  006362  360B               	rlcf	___aldiv@quotient,f,c
  8245  006364  360C               	rlcf	___aldiv@quotient+1,f,c
  8246  006366  360D               	rlcf	___aldiv@quotient+2,f,c
  8247  006368  360E               	rlcf	___aldiv@quotient+3,f,c
  8248  00636A  5005               	movf	___aldiv@divisor,w,c
  8249  00636C  5C01               	subwf	___aldiv@dividend,w,c
  8250  00636E  5006               	movf	___aldiv@divisor+1,w,c
  8251  006370  5802               	subwfb	___aldiv@dividend+1,w,c
  8252  006372  5007               	movf	___aldiv@divisor+2,w,c
  8253  006374  5803               	subwfb	___aldiv@dividend+2,w,c
  8254  006376  5008               	movf	___aldiv@divisor+3,w,c
  8255  006378  5804               	subwfb	___aldiv@dividend+3,w,c
  8256  00637A  A0D8               	btfss	status,0,c
  8257  00637C  D009               	goto	l2484
  8258  00637E  5005               	movf	___aldiv@divisor,w,c
  8259  006380  5E01               	subwf	___aldiv@dividend,f,c
  8260  006382  5006               	movf	___aldiv@divisor+1,w,c
  8261  006384  5A02               	subwfb	___aldiv@dividend+1,f,c
  8262  006386  5007               	movf	___aldiv@divisor+2,w,c
  8263  006388  5A03               	subwfb	___aldiv@dividend+2,f,c
  8264  00638A  5008               	movf	___aldiv@divisor+3,w,c
  8265  00638C  5A04               	subwfb	___aldiv@dividend+3,f,c
  8266  00638E  800B               	bsf	___aldiv@quotient,0,c
  8267  006390                     l2484:
  8268  006390  90D8               	bcf	status,0,c
  8269  006392  3208               	rrcf	___aldiv@divisor+3,f,c
  8270  006394  3207               	rrcf	___aldiv@divisor+2,f,c
  8271  006396  3206               	rrcf	___aldiv@divisor+1,f,c
  8272  006398  3205               	rrcf	___aldiv@divisor,f,c
  8273  00639A  2E09               	decfsz	___aldiv@counter,f,c
  8274  00639C  D7E1               	goto	l2476
  8275  00639E                     l2488:
  8276  00639E  500A               	movf	___aldiv@sign,w,c
  8277  0063A0  B4D8               	btfsc	status,2,c
  8278  0063A2  D008               	goto	l2492
  8279  0063A4  1E0E               	comf	___aldiv@quotient+3,f,c
  8280  0063A6  1E0D               	comf	___aldiv@quotient+2,f,c
  8281  0063A8  1E0C               	comf	___aldiv@quotient+1,f,c
  8282  0063AA  6C0B               	negf	___aldiv@quotient,c
  8283  0063AC  0E00               	movlw	0
  8284  0063AE  220C               	addwfc	___aldiv@quotient+1,f,c
  8285  0063B0  220D               	addwfc	___aldiv@quotient+2,f,c
  8286  0063B2  220E               	addwfc	___aldiv@quotient+3,f,c
  8287  0063B4                     l2492:
  8288  0063B4  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  8289  0063B8  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  8290  0063BC  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  8291  0063C0  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  8292  0063C4  0012               	return	
  8293  0063C6                     __end_of___aldiv:
  8294                           	opt stack 0
  8295                           tblptru	equ	0xFF8
  8296                           tblptrh	equ	0xFF7
  8297                           tblptrl	equ	0xFF6
  8298                           tablat	equ	0xFF5
  8299                           prodh	equ	0xFF4
  8300                           prodl	equ	0xFF3
  8301                           postinc0	equ	0xFEE
  8302                           wreg	equ	0xFE8
  8303                           indf1	equ	0xFE7
  8304                           postinc1	equ	0xFE6
  8305                           postdec1	equ	0xFE5
  8306                           fsr1h	equ	0xFE2
  8307                           fsr1l	equ	0xFE1
  8308                           indf2	equ	0xFDF
  8309                           postinc2	equ	0xFDE
  8310                           postdec2	equ	0xFDD
  8311                           fsr2h	equ	0xFDA
  8312                           fsr2l	equ	0xFD9
  8313                           status	equ	0xFD8
  8314                           tblptru	equ	0xFF8
  8315                           tblptrh	equ	0xFF7
  8316                           tblptrl	equ	0xFF6
  8317                           tablat	equ	0xFF5
  8318                           prodh	equ	0xFF4
  8319                           prodl	equ	0xFF3
  8320                           postinc0	equ	0xFEE
  8321                           wreg	equ	0xFE8
  8322                           indf1	equ	0xFE7
  8323                           postinc1	equ	0xFE6
  8324                           postdec1	equ	0xFE5
  8325                           fsr1h	equ	0xFE2
  8326                           fsr1l	equ	0xFE1
  8327                           indf2	equ	0xFDF
  8328                           postinc2	equ	0xFDE
  8329                           postdec2	equ	0xFDD
  8330                           fsr2h	equ	0xFDA
  8331                           fsr2l	equ	0xFD9
  8332                           status	equ	0xFD8
  8333                           
  8334                           	psect	rparam
  8335  0000                     tblptru	equ	0xFF8
  8336                           tblptrh	equ	0xFF7
  8337                           tblptrl	equ	0xFF6
  8338                           tablat	equ	0xFF5
  8339                           prodh	equ	0xFF4
  8340                           prodl	equ	0xFF3
  8341                           postinc0	equ	0xFEE
  8342                           wreg	equ	0xFE8
  8343                           indf1	equ	0xFE7
  8344                           postinc1	equ	0xFE6
  8345                           postdec1	equ	0xFE5
  8346                           fsr1h	equ	0xFE2
  8347                           fsr1l	equ	0xFE1
  8348                           indf2	equ	0xFDF
  8349                           postinc2	equ	0xFDE
  8350                           postdec2	equ	0xFDD
  8351                           fsr2h	equ	0xFDA
  8352                           fsr2l	equ	0xFD9
  8353                           status	equ	0xFD8


Data Sizes:
    Strings     402
    Constant    0
    Data        226
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     60      66
    BANK0           160     50     132
    BANK1           256      0     160
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 16
		 -> STR_91(CODE[2]), STR_90(CODE[4]), STR_89(CODE[11]), STR_88(CODE[12]), 
		 -> STR_87(CODE[12]), STR_86(CODE[6]), STR_85(CODE[5]), STR_84(CODE[5]), 
		 -> STR_83(CODE[5]), STR_82(CODE[6]), STR_81(CODE[5]), STR_80(CODE[5]), 
		 -> STR_79(CODE[5]), STR_78(CODE[6]), STR_77(CODE[5]), STR_76(CODE[5]), 
		 -> STR_75(CODE[5]), STR_74(CODE[6]), STR_73(CODE[5]), STR_72(CODE[5]), 
		 -> STR_71(CODE[6]), STR_70(CODE[5]), STR_69(CODE[5]), STR_68(CODE[5]), 
		 -> STR_67(CODE[5]), STR_66(CODE[5]), STR_65(CODE[5]), STR_64(CODE[5]), 
		 -> STR_63(CODE[5]), STR_62(CODE[5]), STR_61(CODE[5]), STR_60(CODE[5]), 
		 -> STR_59(CODE[5]), STR_58(CODE[5]), STR_57(CODE[5]), STR_56(CODE[5]), 
		 -> STR_55(CODE[5]), STR_54(CODE[5]), STR_53(CODE[5]), STR_52(CODE[5]), 
		 -> STR_51(CODE[5]), STR_50(CODE[5]), STR_49(CODE[5]), STR_48(CODE[5]), 
		 -> STR_47(CODE[5]), STR_46(CODE[5]), STR_45(CODE[5]), STR_44(CODE[5]), 
		 -> STR_43(CODE[5]), STR_42(CODE[5]), STR_41(CODE[5]), STR_40(CODE[5]), 
		 -> STR_39(CODE[5]), STR_38(CODE[5]), STR_37(CODE[5]), STR_36(CODE[5]), 
		 -> STR_35(CODE[5]), STR_34(CODE[9]), STR_33(CODE[14]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[14]), STR_29(CODE[9]), STR_28(CODE[14]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_25(CODE[12]), STR_24(CODE[12]), 
		 -> STR_23(CODE[7]), STR_22(CODE[8]), STR_21(CODE[10]), STR_20(CODE[8]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[8]), STR_16(CODE[10]), 
		 -> STR_15(CODE[10]), STR_14(CODE[14]), STR_13(CODE[12]), STR_12(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[9]), STR_8(CODE[9]), 
		 -> STR_7(CODE[7]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[14]), 
		 -> STR_3(CODE[12]), STR_2(CODE[16]), STR_1(CODE[11]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 20
		 -> main@cadena(BANK0[20]), 

    Conv_Entero@conv	PTR unsigned char  size(2) Largest target is 20
		 -> main@cadena(BANK0[20]), main@cad(BANK0[20]), 

    Conv_Entero@punteroActual	PTR unsigned char  size(2) Largest target is 21
		 -> Conv_Entero@convTemp(COMRAM[21]), 


Critical Paths under _main in COMRAM

    _main->_TRI_2
    _main->_TRI_3
    _lcd_goto->_Lcd_Cmd
    _TRI_3->___awdiv
    _TRI_2->___awdiv
    _PWM_generar->___lldiv
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Conv_Entero->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                51    51      0   20876
                                             59 COMRAM     1     1      0
                                              0 BANK0     50    50      0
                        _Conv_Entero
                         _Lcd_Chr_CP
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
                        _PWM_generar
                             _SENO_1
                             _SENO_2
                             _SENO_3
                              _TRI_1
                              _TRI_2
                              _TRI_3
                             ___wmul
                           _lcd_goto
                              _tm_1s
 ---------------------------------------------------------------------------------
 (1) _tm_1s                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             7     3      4     568
                                              3 COMRAM     7     3      4
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TRI_3                                               51    51      0     901
                                              8 COMRAM    51    51      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _TRI_2                                               51    51      0     901
                                              8 COMRAM    51    51      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     556
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TRI_1                                               51    51      0     254
                                              0 COMRAM    51    51      0
 ---------------------------------------------------------------------------------
 (1) _SENO_3                                              41    41      0     254
                                              0 COMRAM    41    41      0
 ---------------------------------------------------------------------------------
 (1) _SENO_2                                              47    47      0     254
                                              0 COMRAM    47    47      0
 ---------------------------------------------------------------------------------
 (1) _SENO_1                                              51    51      0     254
                                              0 COMRAM    51    51      0
 ---------------------------------------------------------------------------------
 (1) _PWM_generar                                         20    16      4    1408
                                             13 COMRAM    20    16      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     2      3   12181
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     661
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Conv_Entero                                         41    35      6    2017
                                             14 COMRAM    41    35      6
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     450
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     424
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Conv_Entero
     ___aldiv
     ___almod
     ___lmul
   _Lcd_Chr_CP
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PWM_generar
     ___lldiv
     ___lmul
   _SENO_1
   _SENO_2
   _SENO_3
   _TRI_1
   _TRI_2
     ___awdiv
   _TRI_3
     ___awdiv
   ___wmul
   _lcd_goto
     _Lcd_Cmd
   _tm_1s

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      A0       8       62.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      84       5       82.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3C      42       1       69.5%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     166       6        0.0%
DATA                 0      0     166       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue May 21 20:13:38 2019

                       _B 00D4                         _C 003D                         _D 003F  
                       _M 00D6                         _e 00D8                         _p 00DA  
                       _q 00DC                         _r 00DE                         _t 00E0  
                       _w 00E2                        l50 656E              ___awdiv@sign 0006  
     ___wmul@multiplicand 0003              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000         PWM_generar@PR2cal 001A  
                     l121 6E60                       l211 7BD0                       l142 70CC  
                     l223 7DDE                       l160 72FE                       l136 709A  
                     l313 6130                       l217 7C3A                       l316 61AE  
                     l341 622A                       l229 7E22                       l166 7330  
                     l280 5FBA                       l344 62A8                       l362 6868  
                     l380 69B2                       l277 5F3C                       l197 7C08  
                     l295 6036                       l359 67EA                       l377 6934  
                     l298 60B4                       l836 5C22              __CFG_CPB$OFF 000000  
                     _PR2 000FBB              __CFG_CPD$OFF 000000                       wreg 000FE8  
            __CFG_LVP$OFF 000000                      l3004 6C2E                      l3008 6C7E  
                    l3202 70FA                      l3122 6F7C                      l3116 6F68  
                    l3124 6F86                      l3204 7104                      l3060 6E2E  
                    l3310 7316                      l2520 5EAC                      l2512 5E78  
                    l2504 5E3A                      l3320 734C                      l3304 72F4  
                    l3240 71CC                      l3152 700E                      l3080 6EA2  
                    l2514 5E84                      l3410 7534                      l3218 7158  
                    l3146 6FFA                      l3154 7018                      l3066 6E46  
                    l2460 62FE                      l2516 5E88                      l2524 5EBA  
                    l2508 5E66                      l2444 5A40                      l2612 6A54  
                    l2700 5B54                      l2540 5D86                      l3420 7566  
                    l3412 753E                      l3180 7090                      l2630 6B52  
                    l2702 5B5A                      l2710 5B82                      l3422 7570  
                    l3414 7548                      l3430 75C2                      l3350 73F0  
                    l3326 735E                      l3270 725E                      l3246 71E0  
                    l3174 707C                      l3094 6EF4                      l2472 6350  
                    l2528 5ED0                      l2448 5A54                      l2712 5B8A  
                    l2704 5B60                      l2552 5DBC                      l2720 59E4  
                    l3440 75E2                      l3424 757A                      l3416 7552  
                    l3408 752A                      l3248 71EA                      l3328 7368  
                    l2474 635C                      l2466 632E                      l2634 6B78  
                    l2626 6B12                      l2554 5DC4                      l2546 5DA6  
                    l2722 59EA                      l2730 59FE                      l3434 75D0  
                    l3418 755C                      l3442 75EC                      l3362 743A  
                    l3338 73A2                      l3186 70B2                      l2492 63B4  
                    l2484 6390                      l2476 6360                      l2716 5B9E  
                    l2708 5B68                      l2900 62B0                      l2572 5DFC  
                    l2564 5DE4                      l2556 5DC8                      l2724 59F0  
                    l2732 5A28                      l3516 7806                      l3428 7588  
                    l3276 7272                      l3196 70E8                      l2582 5BD4  
                    l2726 59F6                      l3454 7634                      l3374 7488  
                    l3278 727C                      l2488 639E                      l2680 5A96  
                    l2584 5BE0                      l2816 60BC                      l2808 603E  
                    l2840 610E                      l2568 5DEE                      l3640 7B9E  
                    l3624 7B2A                      l3608 7AB6                      l3536 789E  
                    l2690 5AC6                      l2682 5A9C                      l2594 5C14  
                    l2586 5BE4                      l2850 6138                      l3298 72E0  
                    l2676 5A8A                      l2756 5F1A                      l3740 7DF0  
                    l3556 7936                      l3476 76D6                      l3388 74DA  
                    l2694 5AD8                      l2678 5A90                      l2686 5AA4  
                    l2774 5FC2                      l2766 5F44                      l2926 67C8  
                    l3734 7DD4                      l3662 7BFE                      l3646 7BB6  
                    l2688 5ABE                      l2944 6870                      l2936 67F2  
                    l3728 7DC2                      l3656 7BEC                      l3592 7A42  
                    l3576 79CE                      l3496 776E                      l2698 5B4E  
                    l2858 61B6                      l2882 6208                      l2970 6912  
                    l3746 7E08                      l2892 6232                      l2980 693C  
                    l3756 7E3E                      l3684 7C68                      l3668 7C20  
                    l2798 6014                      l3678 7C56                      l3686 7C74  
                    l3758 7E4A                      l3696 7CB8                      l2988 69BA  
                    STR_1 7EFD                      STR_2 7E6D                      STR_3 7EC1  
                    STR_4 7E99                      STR_5 7F4E                      STR_6 7F57  
                    STR_7 7F47                      STR_8 7F45                      STR_9 7F60  
                    u2211 5FEE                      u2141 5EF4                      u2065 6A1C  
                    u2085 6AFC                      u2421 6752                      u2351 61E2  
                    u2600 6DBA                      u2281 60E8                      u1805 6622  
                    u2605 6DB0                      u1815 663C                      u2560 6C14  
                    u1825 6660                      u2570 6C6A                      u1915 5E22  
                    u2491 689C                      u1925 5E52                      u2565 6C0A  
                    u1855 62E6                      u1775 63D4                      u2575 6C60  
                    u3607 7BC8                      u1865 6316                      u1785 63EE  
                    u3617 7C18                      u3537 6E3E                      u1795 6412  
                    u2595 6D0E                      u3707 5C80                      u3627 7C32  
                    u3547 6E58                      u3717 5C8E                      u3637 7E00  
                    u3557 70AA                      u3807 652E                      u3727 5C9C  
                    u3647 7E1A                      u3567 70C4                      u3817 653E  
                    u3737 5CAA                      u3657 5C3A                      u3577 730E  
                    u3827 654E                      u3747 5CB8                      u3667 5C48  
                    u3587 7328                      u3837 655E                      u3757 6696  
                    u3677 5C56                      u3597 7BAE                      u3847 659E  
                    u3767 6718                      u3687 5C64                      u3857 65E0  
                    u3777 6734                      u3697 5C72                      u3867 6448  
                    u3787 650E                      u3877 64CA                      u3797 651E  
                    u3887 64E0                      _TMR2 000FBC               _PWM_generar 6BAC  
                    _main 6DDA                      fsr2h 000FDA                      indf1 000FE7  
                    fsr1l 000FE1                      indf2 000FDF                      fsr2l 000FD9  
           __CFG_BORV$190 000000              lcd_goto@data 000A                      prodh 000FF4  
                    prodl 000FF3                      start 0000             __CFG_IESO$OFF 000000  
         __end_of_Lcd_Cmd 64EC           __end_of_Lcd_Out 5AE8             __CFG_MCLRE$ON 000000  
            main@cantidad 00CD                _Lcd_Chr_CP 6614            Lcd_Out2@buffer 0005  
     __end_of_Conv_Entero 6BAC           __end_of___aldiv 63C6           __end_of___almod 5EE2  
                   ?_main 0001           __end_of___awdiv 5E06                     STR_10 7F59  
                   STR_11 7F69                     STR_20 7F29                     STR_12 7F6B  
                   STR_21 7F3B                     STR_13 7EB5                     STR_22 7F3D  
                   STR_14 7EA7                     STR_30 7E8B                     STR_31 7F72  
                   STR_23 7F8D                     STR_15 7F1D                     STR_40 7FD8  
                   STR_32 7F84                     STR_16 7F27                     STR_24 7ECD  
                   STR_17 7F15                     STR_33 7E7D                     STR_41 7FA6  
                   STR_25 7EE5                     STR_50 7FC4                     STR_42 7FB5  
                   STR_34 7F7B                     STR_18 7F13                     STR_26 7ED9  
                   STR_43 7FBA                     STR_51 7FCE                     STR_27 7EE5  
                   STR_35 7FAB                     STR_19 7F31                     STR_60 7FB0  
                   STR_44 7FC4                     STR_52 7FD8                     STR_36 7FB0  
                   STR_28 7E7D                     STR_53 7FA6                     STR_61 7FBA  
                   STR_45 7FCE                     STR_37 7FBA                     STR_29 7F72  
                   STR_54 7FB0                     STR_62 7FC4                     STR_46 7FD8  
                   STR_70 7FDD                     STR_38 7FC4                     STR_47 7FA6  
                   STR_55 7FBA                     STR_63 7FD3                     STR_39 7FCE  
                   STR_71 7FA0                     STR_48 7FB0                     STR_64 7FD8  
                   STR_80 7FE7                     STR_72 7FE7                     STR_56 7FC9  
                   STR_65 7FA6                     STR_57 7FCE                     STR_81 7FF6  
                   STR_73 7FF1                     STR_49 7FBF                     STR_82 7F94  
                   STR_66 7FB0                     STR_58 7FD8                     STR_90 7FFB  
                   STR_74 7F94                     STR_91 7F98                     STR_59 7FA6  
                   STR_67 7FBA                     STR_83 7FE2                     STR_75 7FE2  
                   STR_68 7FC4                     STR_84 7FE7                     STR_76 7FEC  
                   STR_69 7FCE                     STR_85 7FF1                     STR_77 7FF1  
                   STR_78 7F94                     STR_86 7F9A                     STR_79 7FE2  
                   STR_87 7ECD                     STR_88 7EF1                     STR_89 7F08  
         __end_of___lldiv 5C34           ___awdiv@divisor 0003                     _T2CON 000FBA  
         ___awdiv@counter 0005                     _TRI_1 61D0                     _TRI_2 6740  
                   _TRI_3 688A             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000       ___lmul@multiplicand 0005             __CFG_WRT3$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
                   _tm_1s 5C34                     main@A 00D3                     main@V 00CA  
                   main@X 00CF                     main@Z 00D1                     tablat 000FF5  
                   status 000FD8            __CFG_T3CMX$RC0 000000            __CFG_ICPRT$OFF 000000  
          __CFG_PBADEN$ON 000000          __end_of_Lcd_Init 6614          __end_of_Lcd_Out2 5BB2  
         __initialization 5AE8              __end_of_main 7E6C                    ??_main 003C  
           __activetblptr 000002                    ?_TRI_1 0001                    ?_TRI_2 0001  
                  ?_TRI_3 0001            __CFG_SDOMX$RB3 000000           __CFG_CCP2MX$RC1 000000  
                  TRI_1@i 0032                    TRI_1@j 0030                    TRI_1@k 002E  
                  TRI_2@i 003A                    TRI_2@j 0038                    TRI_2@k 0036  
                  TRI_3@i 003A                    TRI_3@j 0038                    TRI_3@k 0036  
                  ?_tm_1s 0001                    _CCPR2L 000F90          ___awdiv@dividend 0001  
                  _ANSELB 000F5C                    _ANSELD 000F5E            __CFG_WDTEN$OFF 000000  
                  _OSCCON 000FD3                    _SENO_1 5EE2                    _SENO_2 5FDC  
                  _SENO_3 60D6                 ??_Lcd_Cmd 0001                 ??_Lcd_Out 0007  
          __CFG_XINST$OFF 000000               _Conv_Entero 69D4          __end_of_lcd_goto 5A30  
                  ___lmul 5A30               ?_Lcd_Chr_CP 0001                 ??___aldiv 0009  
               ??___almod 0009                    ___wmul 597A                 ??___awdiv 0005  
          __CFG_STVREN$ON 000000                 ??___lldiv 0009      PWM_generar@AuxCCPR2L 001E  
                  clear_0 5AEE          ___awdiv@quotient 0007              __mediumconst 7E6C  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
    __CFG_LS48MHZ$SYS24X4 000000                __accesstop 0060   __end_of__initialization 5B40  
           __end_of_TRI_1 62CA             __end_of_TRI_2 688A             __end_of_TRI_3 69D4  
          __pcstackCOMRAM 0001              __pidataBANK0 59A0              __pidataBANK1 5CC2  
           __end_of_tm_1s 5CC2          TRI_1@valoresSeno 0006           __CFG_PCLKEN$OFF 000000  
             SENO_1@F7354 0100                   ??_TRI_1 0001                   ??_TRI_2 0009  
                 ??_TRI_3 0009               SENO_2@F7359 0060               SENO_3@F7364 0084  
               ?_Lcd_Init 0001                 ?_Lcd_Out2 0004                   ??_tm_1s 0001  
     __size_of_Lcd_Chr_CP 012C                __pbssBANK0 00D4                   ?_SENO_1 0001  
                 ?_SENO_2 0001                   ?_SENO_3 0001              ?_PWM_generar 000E  
       SENO_1@valoresSeno 0006                   SENO_1@i 0032                   SENO_1@j 0030  
                 SENO_1@k 002E                   SENO_2@i 002E                   SENO_2@j 002C  
                 SENO_2@k 002A                   SENO_3@i 0028                   SENO_3@j 0026  
                 SENO_3@k 0024         __CFG_PLLSEL$PLL4X 000000                   ?___lmul 0001  
                 ?___wmul 0001                   _CCP2CON 000F97            ___lmul@product 0009  
        TRI_2@valoresSeno 000E                ??_Lcd_Init 0004                ??_Lcd_Out2 0007  
               ?_lcd_goto 0004                   _Lcd_Cmd 63C6                   _Lcd_Out 5A86  
         __size_of_SENO_1 00FA           __size_of_SENO_2 00FA           __size_of_SENO_3 00FA  
              _frecuencia 0041         SENO_2@valoresSeno 0006                   __Hparam 0000  
                 __Lparam 0000                   ___aldiv 62CA                   ___almod 5E06  
                 ___awdiv 5D62           __size_of___lmul 0056                   ___lldiv 5BB2  
         __size_of___wmul 0026                   __pcinit 5AE8     PWM_generar@AuxCCP2CON 0018  
        TRI_3@valoresSeno 000E                   __ramtop 0800                   __ptext0 6DDA  
                 __ptext1 5C34                   __ptext2 59E2                   __ptext3 597A  
                 __ptext4 688A                   __ptext5 6740                   __ptext6 5D62  
                 __ptext7 61D0                   __ptext8 60D6                   __ptext9 5FDC  
               _T2CONbits 000FBA          ___aldiv@dividend 0001                   main@cad 00A2  
                 main@fre 00CC                ??_lcd_goto 0008      end_of_initialization 5B40  
           __Lmediumconst 7E6C           ___lldiv@divisor 0005         SENO_3@valoresSeno 0006  
         ___lldiv@counter 000D              ?_Conv_Entero 000F          ___aldiv@quotient 000B  
            ??_Lcd_Chr_CP 0001                 Lcd_Out2@x 0004                 Lcd_Out2@y 0007  
                 postdec1 000FE5                   postdec2 000FDD                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE                 _PORTAbits 000F80  
               _PORTBbits 000F81                 _PORTCbits 000F82           Conv_Entero@conv 0013  
               _PORTDbits 000F83                 _TRISAbits 000F92                 _TRISBbits 000F93  
               _TRISCbits 000F94                 _TRISDbits 000F95        __end_of_Lcd_Chr_CP 6740  
              main@cadena 00B6          PWM_generar@ciclo 000E            __end_of_SENO_1 5FDC  
          __end_of_SENO_2 60D6            __end_of_SENO_3 61D0      __size_of_PWM_generar 022E  
          __end_of___lmul 5A86            __end_of___wmul 59A0       start_initialization 5AE8  
           Lcd_Out@buffer 0005         __size_of_Lcd_Init 0128         __size_of_Lcd_Out2 0068  
                ??_SENO_1 0001                  ??_SENO_2 0001                  ??_SENO_3 0001  
         __CFG_nLPBOR$OFF 000000                  ??___lmul 0009      Conv_Entero@numeroReg 0034  
                ??___wmul 0005               __pdataBANK0 0060               __pdataBANK1 0100  
             __pbssCOMRAM 003D             __pcstackBANK0 00A2       __end_of__stringdata 7FFF  
         __CFG_nPWRTEN$ON 000000                  ?_Lcd_Cmd 0001         __size_of_lcd_goto 004E  
                ?_Lcd_Out 0004             __pmediumconst 7E6C                  ?___aldiv 0001  
                ?___almod 0001                  ?___awdiv 0001                  ?___lldiv 0001  
    __size_of_Conv_Entero 01D8          ___almod@dividend 0001    PWM_generar@prescalador 0016  
          __size_of_TRI_1 00FA            __size_of_TRI_2 014A            __size_of_TRI_3 014A  
          __size_of_tm_1s 008E           ___aldiv@divisor 0005           ___aldiv@counter 0009  
          ___wmul@product 0005                  Lcd_Out@x 0004          __CFG_WDTPS$32768 000000  
                Lcd_Out@y 0007            Conv_Entero@num 002F                TRI_1@F7354 0128  
              TRI_2@F7359 0150                TRI_3@F7364 0178              Lcd_Init@data 0005  
   PWM_generar@frecuencia 0010               __stringdata 7E6D         ___wmul@multiplier 0001  
               lcd_goto@x 0004                 lcd_goto@y 0006         __CFG_CFGPLLEN$OFF 000000  
            Lcd_Out2@data 0008                  _Lcd_Init 64EC                  _Lcd_Out2 5B4A  
     Conv_Entero@convTemp 001A         ___lmul@multiplier 0001                 copy_data0 5B14  
               copy_data1 5B34          __size_of_Lcd_Cmd 0126          __size_of_Lcd_Out 0062  
                __Hrparam 0000                  __Lrparam 0000        __CFG_BOREN$SBORDIS 000000  
        __size_of___aldiv 00FC          __size_of___almod 00DC          __size_of___awdiv 00A4  
        __size_of___lldiv 0082            Lcd_Chr_CP@data 0003                  __ptext10 5EE2  
                __ptext11 6BAC                  __ptext20 5E06                  __ptext12 5BB2  
                __ptext21 62CA                  __ptext13 5B4A                  __ptext14 5A86  
                __ptext15 6614                  __ptext16 64EC                  __ptext17 63C6  
                __ptext18 69D4                  __ptext19 5A30                  _lcd_goto 59E2  
         ___almod@divisor 0005           ___almod@counter 0009             ??_PWM_generar 0012  
             Lcd_Cmd@data 0003             __size_of_main 1092                  main@cant 00CE  
             Lcd_Out@data 0008          ___lldiv@dividend 0001  Conv_Entero@punteroActual 0032  
     __end_of_PWM_generar 6DDA              Conv_Entero@i 0031      __CFG_CPUDIV$NOCLKDIV 000000  
       Conv_Entero@numero 000F          ___lldiv@quotient 0009              ___aldiv@sign 000A  
      __CFG_FOSC$INTOSCIO 000000              ___almod@sign 000A             ??_Conv_Entero 0015  
